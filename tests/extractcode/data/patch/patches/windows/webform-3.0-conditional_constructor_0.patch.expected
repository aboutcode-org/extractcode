[('webform.module',
  'webform.module',
  'Left base folder: C:\\Documents and Settings\\Olga\\My Documents\\Downloads\\webform-6.x-3.0-beta5(2)\\webform\nRight base folder: C:\\xampp\\htdocs\\ogorun\\sites\\all\\modules\\webform\n--- webform.module\n+++ webform.module\n@@ -1338,18 +1338,46 @@\n\n// Shorten up our variable names.\n$component_tree = $form_state[\'webform\'][\'component_tree\'];\n$page_count = $form_state[\'webform\'][\'page_count\'];\n$page_num = $form_state[\'webform\'][\'page_num\'];\n\n+    // Start gathering JS settings for conditional fields engine\n+    $settings = array(\n+      \'objects\' => array(),\n+      \'mandatory\' => array(),\n+      \'previousPagesFields\' => array(),\n+      \'nid\' => $node->nid\n+    );\n+\n// Recursively add components to the form.\nforeach ($component_tree[\'children\'] as $cid => $component) {\n-      $component_value = isset($form_state[\'values\'][\'submitted\'][$component[\'form_key\']]) ? $form_state[\'values\'][\'submitted\'][$component[\'form_key\']] : NULL;\n-      if (_webform_client_form_rule_check($node, $component, $page_num, $form_state)) {\n-        _webform_client_form_add_component($component, $component_value, $form[\'submitted\'], $form, $submission, \'form\', $page_num, $filter);\n-      }\n+        if (isset($form_state[\'values\'][\'submitted\'][$component[\'form_key\']])) {\n+           $component_value = $form_state[\'values\'][\'submitted\'][$component[\'form_key\']];\n+        }\n+        elseif (isset($form_state[\'storage\'][\'submitted\'][$component[\'form_key\']])) {\n+            $component_value = $form_state[\'storage\'][\'submitted\'][$component[\'form_key\']];\n+        }\n+        else {\n+            $component_value = null;\n+        }\n+        _webform_client_form_add_component($component, $component_value, $form[\'submitted\'], $form, $settings, $submission, \'form\', $page_num, $filter);\n+    }\n+\n+    $form[\'webform_conditional_mandatory\']=array(\n+      \'#type\' => \'hidden\',\n+      \'#default_value\' => implode(\'|\',$settings[\'mandatory\']),\n+    );\n+\n+    if (empty($_POST)) {\n+        $path = drupal_get_path(\'module\',\'webform\');\n+        drupal_add_js($path . \'/le/jquery.json-2.2.min.js\');\n+        drupal_add_js($path . \'/le/le.conditionsConstructor.js\');\n+        drupal_add_js($path . \'/le/le.conditionalFormFields.js\');\n+        drupal_add_js(array(\'webformConditional\' => $settings), \'setting\');\n+        drupal_add_js($path . \'/js/webform_conditional.js\');\n}\n\n// These form details help managing data upon submission.\n$form[\'details\'][\'nid\'] = array(\n\'#type\' => \'value\',\n\'#value\' => $node->nid,\n@@ -1421,79 +1449,12 @@\n}\n}\n\nreturn $form;\n}\n\n-/**\n- * Check if a component should be displayed on the current page.\n- */\n-function _webform_client_form_rule_check($node, $component, $page_num, $form_state = NULL, $submission = NULL) {\n-  $conditional_values = isset($component[\'extra\'][\'conditional_values\']) ? $component[\'extra\'][\'conditional_values\'] : NULL;\n-  $conditional_component = isset($component[\'extra\'][\'conditional_component\']) && isset($node->webform[\'components\'][$component[\'extra\'][\'conditional_component\']]) ? $node->webform[\'components\'][$component[\'extra\'][\'conditional_component\']] : NULL;\n-\n-  // Check the rules for this entire page. Note individual page breaks are\n-  // checked down below in the individual component rule checks.\n-  $show_page = TRUE;\n-  if ($component[\'page_num\'] > 1 && $component[\'type\'] != \'pagebreak\') {\n-    foreach ($node->webform[\'components\'] as $cid => $page_component) {\n-      if ($page_component[\'type\'] == \'pagebreak\' && $page_component[\'page_num\'] == $page_num) {\n-        $show_page = _webform_client_form_rule_check($node, $page_component, $page_num, $form_state, $submission);\n-        break;\n-      }\n-    }\n-  }\n-\n-  // Check any parents\' visibility rules.\n-  $show_parent = $show_page;\n-  if ($show_parent && $component[\'pid\'] && isset($node->webform[\'components\'][$component[\'pid\']])) {\n-    $parent_component = $node->webform[\'components\'][$component[\'pid\']];\n-    $show_parent = _webform_client_form_rule_check($node, $parent_component, $page_num, $form_state, $submission);\n-  }\n-\n-  // Check the individual component rules.\n-  $show_component = $show_parent;\n-  if ($show_component && $component[\'page_num\'] == $page_num && $conditional_component && strlen(trim($conditional_values))) {\n-    $input_values = array();\n-    if (isset($form_state)) {\n-      $parents = webform_component_parent_keys($node, $conditional_component);\n-      $input_value = isset($form_state[\'values\'][\'submitted\']) ? $form_state[\'values\'][\'submitted\'] : array();\n-      foreach ($parents as $parent) {\n-        if (isset($input_value[$parent])) {\n-          $input_value = $input_value[$parent];\n-        }\n-        else {\n-          $input_value = NULL;\n-          break;\n-        }\n-      }\n-      $input_values = is_array($input_value) ? array_keys($input_value) : array($input_value);\n-    }\n-    elseif (isset($submission)) {\n-      $input_values = $submission->data[$conditional_component[\'cid\']][\'value\'];\n-    }\n-\n-    $test_values = array_map(\'trim\', explode("\\n", $conditional_values));\n-    if (empty($input_values) && !empty($test_values)) {\n-      $show_component = FALSE;\n-    }\n-    else {\n-      foreach ($input_values as $input_value) {\n-        if ($show_component = in_array($input_value, $test_values)) {\n-          break;\n-        }\n-      }\n-    }\n-\n-    if ($component[\'extra\'][\'conditional_operator\'] == \'!=\') {\n-      $show_component = !$show_component;\n-    }\n-  }\n-\n-  return $show_component;\n-}\n\n/**\n* Add a component to a renderable array. Called recursively for fieldsets.\n*\n* This function assists in the building of the client form, as well as the\n* display of results, and the text of e-mails.\n@@ -1519,13 +1480,13 @@\n*   Whether the form element properties should be filtered. Only set to FALSE\n*   if needing the raw properties for editing.\n*\n* @see webform_client_form\n* @see webform_submission_render\n*/\n-function _webform_client_form_add_component($component, $component_value, &$parent_fieldset, &$form, $submission, $format = \'form\', $page_num = 0, $filter = TRUE) {\n+function _webform_client_form_add_component($component, $component_value, &$parent_fieldset, &$form, &$js_settings, $submission, $format = \'form\', $page_num = 0, $filter = TRUE) {\n$cid = $component[\'cid\'];\n\n// Load with submission information if necessary.\nif ($format != \'form\') {\n// This component is display only.\n$data = empty($submission->data[$cid][\'value\']) ? NULL : $submission->data[$cid][\'value\'];\n@@ -1540,12 +1501,15 @@\nif (!isset($display_element[\'#id\'])) {\n$display_element[\'#id\'] = form_clean_id(\'edit-\' . implode(\'-\', $display_element[\'#parents\']));\n}\n$parent_fieldset[$component[\'form_key\']] = $display_element;\n}\n}\n+  elseif ($component[\'page_num\'] < $page_num) {\n+    $js_settings[\'previousPagesFields\'][$component[\'form_key\']] = !is_null($component_value) ? $component_value[0] : $data;\n+  }\nelseif ($component[\'page_num\'] == $page_num) {\n// Add this user-defined field to the form (with all the values that are always available).\n$data = isset($submission->data[$cid][\'value\']) ? $submission->data[$cid][\'value\'] : NULL;\nif ($element = webform_component_invoke($component[\'type\'], \'render\', $component, $data, $filter)) {\n$parent_fieldset[$component[\'form_key\']] = $element;\n\n@@ -1555,12 +1519,28 @@\nif (is_array($component_value)) {\nforeach ($component_value as $key => $value) {\nif (isset($parent_fieldset[$component[\'form_key\']][$key])) {\n$parent_fieldset[$component[\'form_key\']][$key][\'#default_value\'] = $value;\n}\n}\n+        }\n+      }\n+\n+\n+      if(!empty($component[\'extra\'][\'condition\'])){\n+        $condition = json_decode($component[\'extra\'][\'condition\']);\n+        if (!empty($condition->optype)) {\n+          $js_settings[\'objects\'][$component[\'form_key\']] = array(\n+            \'type\' => $component[\'type\'],\n+            \'fieldsetId\' => !empty($component[\'#parent_fieldsets\']) ? implode(\'_\', $component[\'#parent_fieldsets\']) : \'\', // array_slice($parent_fieldset, 0, -1)),\n+            \'expression\' => $condition,\n+            \'mandatory\' => (bool)$component[\'extra\'][\'conditional_mandatory\'],\n+          );\n+        }\n+        if($component[\'extra\'][\'conditional_mandatory\']){\n+          $js_settings[\'mandatory\'][] = $component[\'form_key\'];\n}\n}\n}\nelse {\ndrupal_set_message(t(\'The webform component @type is not able to be displayed\', array(\'@type\' => $component[\'type\'])));\n}\n@@ -1573,13 +1553,16 @@\n$parent_fieldset[$component[\'form_key\']][\'#webform_validated\'] = FALSE;\n}\n\nif (isset($component[\'children\']) && is_array($component[\'children\'])) {\nforeach ($component[\'children\'] as $scid => $subcomponent) {\n$subcomponent_value = isset($component_value[$subcomponent[\'form_key\']]) ? $component_value[$subcomponent[\'form_key\']] : NULL;\n-      _webform_client_form_add_component($subcomponent, $subcomponent_value, $parent_fieldset[$component[\'form_key\']], $form, $submission, $format, $page_num, $filter);\n+      $fieldsets = !empty($component[\'#parent_fieldsets\']) ? $component[\'#parent_fieldsets\'] : array();\n+      $fieldsets[] = $component[\'form_key\'];\n+      $subcomponent[\'#parent_fieldsets\'] = $fieldsets;\n+      _webform_client_form_add_component($subcomponent, $subcomponent_value, $parent_fieldset[$component[\'form_key\']], $form, $js_settings, $submission, $format, $page_num, $filter);\n}\n}\n}\n\nfunction webform_client_form_validate($form, &$form_state) {\n$node = node_load($form_state[\'values\'][\'details\'][\'nid\']);\n@@ -1595,15 +1578,59 @@\n$error = theme(\'webform_view_messages\', $node, 0, 1, 0, $limit_exceeded, array_keys(user_roles()));\nform_set_error(\'\', $error);\nreturn;\n}\n}\n\n+  // Check conditional mandatory fields\n+  _webform_client_form_conditional_mandatory_validate($form, $form_state);\n+\n// Run all #element_validate and #required checks. These are skipped initially\n// by setting #validated = TRUE on all components when they are added.\n_webform_client_form_validate($form, $form_state);\n+}\n+\n+/**\n+ * Check conditional mandatory fields - fields that should be filled in in case they are visible\n+ *\n+ * To avoid duplication in condition evaluation all calculation is done only on client side\n+ * and pass fields that should be considered not mandatory with hidden field \'webform_conditional_mandatory\'\n+ *\n+ * @param array $form\n+ * @param array $form_state\n+ */\n+function _webform_client_form_conditional_mandatory_validate($form, $form_state) {\n+  if (!empty($form_state[\'values\'][\'webform_conditional_mandatory\'])) {\n+    $mandatory = explode(\'|\', $form_state[\'values\'][\'webform_conditional_mandatory\']);\n+    $values = _webform_flattern_submitted_tree($form_state[\'values\'][\'submitted\']);\n+    foreach($mandatory as $name) {\n+      if ($values[$name][\'value\'] == \'\') {\n+        form_set_error(\'submitted][\' . implode(\'][\', $values[$name][\'parents\']) . $name, t(\'Field !name is required\', array(\'!name\' => $name)));\n+      }\n+    }\n+  }\n+}\n+\n+function _webform_flattern_submitted_tree($submitted, $parents = array()) {\n+    $values = array();\n+    if (!empty($submitted)) {\n+        foreach ($submitted as $field => $val) {\n+            if (is_array($val)) {\n+                $next_parents = $parents;\n+                array_push($next_parents, $field);\n+                $values = array_merge($values, _webform_flattern_submitted_tree($val, $next_parents));\n+            }\n+            else {\n+                $values[$field][\'value\'] = $val;\n+                $values[$field][\'parents\'] = $parents;\n+            }\n+        }\n+    }\n+\n+    return $values;\n+\n}\n\n/**\n* Recursive validation function to trigger normal Drupal validation.\n*\n* This function imitates _form_validate in Drupal\'s form.inc, only it sets'),
 ('includes/webform.components.inc',
  'includes/webform.components.inc',
  '\n\nLeft base folder: C:\\Documents and Settings\\Olga\\My Documents\\Downloads\\webform-6.x-3.0-beta5(2)\\webform\nRight base folder: C:\\xampp\\htdocs\\ogorun\\sites\\all\\modules\\webform\n--- includes/webform.components.inc\n+++ includes/webform.components.inc\n@@ -420,72 +420,74 @@\n\'#description\' => t(\'Optional. In the menu, the heavier items will sink and the lighter items will be positioned nearer the top.\'),\n\'#weight\' => 4,\n);\n\n// Add conditional fields.\n$conditional_components = array();\n-  $counter = 0;\n$last_pagebreak_slice = 0;\nforeach ($node->webform[\'components\'] as $cid => $test_component) {\n// Only components before the pagebreak can be considered.\n-    if ($test_component[\'type\'] == \'pagebreak\') {\n-      $last_pagebreak_slice = $counter;\n-    }\n-    if (isset($component[\'cid\']) && $cid == $component[\'cid\']) {\n+    if (isset($component[\'cid\']) && $cid == $component[\'cid\']) {\nbreak;\n}\nif (webform_component_feature($test_component[\'type\'], \'conditional\')) {\n-      $conditional_components[$cid] = $test_component;\n+      $conditional_components[$test_component[\'form_key\']] = $test_component[\'name\'];\n}\n-    $counter++;\n}\n-  if ($component[\'type\'] != \'pagebreak\') {\n-    $fieldset_description = t(\'Create a rule to control whether or not to skip this page.\');\n-  }\n-  else {\n-    $fieldset_description = t(\'Create a rule to control whether or not to show this form element.\');\n-  }\n-  $conditional_components = array_slice($conditional_components, 0, $last_pagebreak_slice, TRUE);\n$form[\'conditional\'] = array(\n\'#weight\' => 10,\n\'#type\' => \'fieldset\',\n\'#title\' => t(\'Conditional rules\'),\n\'#collapsible\' => TRUE,\n-    \'#collapsed\' => TRUE,\n+    \'#collapsed\' => !$component[\'extra\'][\'condition\'],\n\'#description\' => t(\'Create a rule to control whether or not to show this form element.\'),\n\'#tree\' => FALSE,\n);\n$form[\'conditional\'][\'extra\'] = array(\n\'#tree\' => TRUE,\n);\n-  $form[\'conditional\'][\'extra\'][\'conditional_component\'] = array(\n-    \'#type\' => \'select\',\n-    \'#title\' => t(\'Component\'),\n-    \'#options\' => webform_component_list($node, $conditional_components, FALSE, TRUE),\n-    \'#description\' => t(\'Select another component to decide whether to show or hide this component. You can only select components occurring before the most recent pagebreak.\'),\n-    \'#default_value\' => $component[\'extra\'][\'conditional_component\'],\n+\n+  $form[\'conditional\'][\'extra\'][\'condition\'] = array(\n+    \'#type\' => \'hidden\',\n+    \'#default_value\' => $component[\'extra\'][\'condition\']\n);\n-  $form[\'conditional\'][\'extra\'][\'conditional_operator\'] = array(\n-    \'#type\' => \'select\',\n-    \'#title\' => t(\'Operator\'),\n-    \'#options\' => array(\n-      \'=\' => t(\'Is one of\'),\n-      \'!=\' => t(\'Is not one of\')\n-    ),\n-    \'#description\' => t(\'Determines whether the list below is inclusive or exclusive.\'),\n-    \'#default_value\' => $component[\'extra\'][\'conditional_operator\'],\n+\n+  $form[\'conditional\'][\'extra\'][\'conditional_mandatory\'] = array(\n+    \'#type\' => \'checkbox\',\n+    \'#title\' => t(\'Conditional mandatory\'),\n+    \'#default_value\' => $component[\'extra\'][\'conditional_mandatory\']\n);\n-  $form[\'conditional\'][\'extra\'][\'conditional_values\'] = array(\n-    \'#type\' => \'textarea\',\n-    \'#title\' => t(\'Values\'),\n-    \'#description\' => t(\'List values, one per line, that will trigger this action. If you leave this blank, this component will always display.\'),\n-    \'#default_value\' => $component[\'extra\'][\'conditional_values\'],\n+\n+  $form[\'conditional\'][\'extra\'][\'constructor\'] = array(\n+     \'#type\' => \'markup\',\n+     \'#value\' => \'<div id="webform-conditions-constructor"></div>\'\n);\n\nif (empty($conditional_components)) {\n$form[\'conditional\'][\'#access\'] = FALSE;\n+  }\n+  else {\n+    $settings = array(\n+      \'webformConditionalSettings\' => array(\n+        \'currentConditions\' => $component[\'extra\'][\'condition\'] ? json_decode($component[\'extra\'][\'condition\']) : new StdClass(),\n+        \'lOperandFormElement\' => \'select\',\n+        \'availableLOperands\' => $conditional_components,\n+        \'buttonFlags\' => array(\n+          \'addElement\' => true,\n+          \'addAndGroup\' => true,\n+          \'addOrGroup\' => true,\n+          \'showExpression\' => true\n+        ),\n+      )\n+    );\n+    drupal_add_js($settings, \'setting\');\n+    $path = drupal_get_path(\'module\',\'webform\');\n+    drupal_add_js($path . \'/js/webform_conditional.js\');\n+    drupal_add_js($path . \'/le/jquery.json-2.2.min.js\');\n+    drupal_add_js($path . \'/le/le.conditionsConstructor.js\');\n+    drupal_add_css($path . \'/le/conditions_constructor.css\');\n}\n\n// Add the fields specific to this component type:\n$additional_form_elements = (array) webform_component_invoke($component[\'type\'], \'edit\', $component);\nif (empty($additional_form_elements)) {\ndrupal_set_message(t(\'The webform component of type @type does not have an edit function defined.\', array(\'@type\' => $component[\'type\'])));'),
 ('includes/webform.submissions.inc',
  'includes/webform.submissions.inc',
  "\n\nLeft base folder: C:\\Documents and Settings\\Olga\\My Documents\\Downloads\\webform-6.x-3.0-beta5(2)\\webform\nRight base folder: C:\\xampp\\htdocs\\ogorun\\sites\\all\\modules\\webform\n--- includes/webform.submissions.inc\n+++ includes/webform.submissions.inc\n@@ -223,13 +223,13 @@\n$excluded_components = isset($email) ? $email['excluded_components'] : array();\n\n_webform_components_tree_build($node->webform['components'], $component_tree, 0, $page_count);\n\n// Recursively add components to the form.\nforeach ($component_tree['children'] as $cid => $component) {\n-    if (!in_array($cid, $excluded_components) && _webform_client_form_rule_check($node, $component, $component['page_num'], NULL, $submission)) {\n+    if (!in_array($cid, $excluded_components)) {\n_webform_client_form_add_component($component, NULL, $renderable, $renderable, $submission, $format);\n}\n}\n\nreturn drupal_render($renderable);\n}"),
 ('.',
  'js/webform_conditional.js',
  '\n\nLeft base folder: C:\\Documents and Settings\\Olga\\My Documents\\Downloads\\webform-6.x-3.0-beta5(2)\\webform\nRight base folder: C:\\xampp\\htdocs\\ogorun\\sites\\all\\modules\\webform\n--- .\n+++ js/webform_conditional.js\n@@ -0,0 +1,97 @@\n+Drupal.behaviors.webformCond = function(context) {\n+  if (typeof Drupal.settings[\'webformConditional\'] != \'undefined\' && Drupal.settings[\'webformConditional\'][\'objects\']) {\n+    var options = {\n+      mandatoryFieldSelector: \'#edit-webform-conditional-mandatory\',\n+      objectByName: function(name) {\n+        return $(\'[name*="[\'+name+\']"]\');\n+      },\n+      feldsetByName: function(name) {\n+        return $(\'#webform-component-\' + name);\n+      },\n+      getWrapper: function(name,info) {\n+        if(info[\'type\']==\'fieldset\' || info[\'type\']==\'markup\'){\n+          return $(\'#webform-component-\' + name);\n+        }\n+        var cssName = name.replace(/_/g,"-");\n+        if(info[\'fieldsetId\']!=\'\'){\n+          cssName = info[\'fieldsetId\'].replace(/_/g,"-") + "-" + cssName;\n+        }\n+\n+        if (info[\'type\'] == \'grid\') {\n+          return $(\'[name*=\\"[\'+name+\']\\"]\').parent(\'.form-item\').parents(\'.form-item\');\n+        }\n+        var cssId = "#edit-submitted-" + cssName + "-wrapper";\n+        if($(cssId).length==0) {\n+          cssId = "#edit-submitted-" + cssName + "-1-wrapper";\n+          return $(cssId).parent().parent();\n+        } else {\n+          return $(cssId);\n+        }\n+      },\n+      expression: $.le.defaultOptions.conditionalForm.expression\n+    };\n+\n+\n+    options.setMandatoryLikeView = function(name, info) {\n+      var wrap = options.getWrapper(name, info).parent();\n+      if (!wrap.find(\'label span.form-required\').length) {\n+        $(\'<span title="This field is required." class="form-required">*</span>\').appendTo(wrap.find(\'label\'));\n+      }\n+    };\n+\n+    options.expression.operandHandler.left = function (val) {\n+      var obj = options.objectByName(val);\n+      if (obj.length) {\n+          if(obj.filter(\'input:checked\').length == 1) {\n+            return obj.filter(\'input:checked\').val();\n+          } else if(obj.filter(\'input:checkbox,input:radio\').length) {\n+            return false;\n+          } else if(obj.filter(\'option:selected\').length == 1) {\n+            return obj.filter(\'option:selected\').val();\n+          } else {\n+            return obj.val();\n+          }\n+      }\n+      else if (Drupal.settings.webformConditional.previousPagesFields[val]) {\n+          return Drupal.settings.webformConditional.previousPagesFields[val];\n+      }\n+      else {\n+          return false;\n+      }\n+\n+    };\n+\n+    $.extend(options, Drupal.settings.webformConditional);\n+\n+    $(\'form.webform-client-form\').leConditionalForm(options);\n+  }\n+};\n+\n+Drupal.behaviors.webformCondSettings = function(context) {\n+\n+    $(\'#webform-conditions-constructor:not(.webformCondSettings-processed)\', context)\n+    .addClass(\'webformCondSettings-processed\')\n+    .each(function() {\n+    \tvar domObj = this;\n+    \tvar $this = $(this);\n+    \tvar options = Drupal.settings.webformConditionalSettings;\n+    \toptions.defaultNewElement = function () {\n+    \t\tvar el;\n+    \t\tfor (el in options.availableLOperands) {\n+    \t\t\tbreak;\n+    \t\t}\n+\t\t\treturn {\n+\t\t\t\toptype: \'el\',\n+\t\t\t\tleft: el,\n+\t\t\t\top:  \'opEqual\',\n+\t\t\t\tright: \'\',\n+\t\t\t\tneg: false\n+\t\t\t};\n+\t\t}\n+    \tvar conditions = $this.leConstructor(Drupal.settings.webformConditionalSettings.currentConditions, options);\n+\n+    \t$(\'#webform-component-edit-form\').submit(function () {\n+    \t\t$(\'#edit-extra-condition\').val(domObj.le.expression.getSerialised());\n+    \t});\n+    });\n+};'),
 ('.',
  'le/conditions_constructor.css',
  '\n\nLeft base folder: C:\\Documents and Settings\\Olga\\My Documents\\Downloads\\webform-6.x-3.0-beta5(2)\\webform\nRight base folder: C:\\xampp\\htdocs\\ogorun\\sites\\all\\modules\\webform\n--- .\n+++ le/conditions_constructor.css\n@@ -0,0 +1,47 @@\n+@CHARSET "UTF-8";\n+.constructor ul, .constructor ul li{\n+\tlist-style-image:url("icons/condition.png");\n+\tlist-style-type:square;\n+\tbackground: none;\n+/*\tpadding-left: 15px;*/\n+}\n+\n+.constructor-group {\n+\tpadding: 10px 20px;\n+\tborder: 1px solid #DDE5EA;\n+}\n+\n+.constructor ul.constructor-admin-links {\n+\tdisplay: inline;\n+\tlist-style-type:none;\n+}\n+\n+.constructor .constructor-admin-links li {\n+\t display: inline;\n+\t padding: 0px 7px;\n+\t/* background: white url("icons/add.png") no-repeat; */\n+}\n+\n+.conditions-constructor ul, .conditions-constructor ul li{\n+\tlist-style-image:url("icons/condition.png");\n+\tlist-style-type:square;\n+\tbackground: none;\n+\tpadding-left: 15px;\n+}\n+\n+.conditions-constructor-group {\n+\tpadding: 10px 20px;\n+\tborder: 1px solid #DDE5EA;\n+}\n+\n+.conditions-constructor ul.conditions-constructor-admin-links {\n+\tdisplay: inline;\n+\tlist-style-image:url("icons/add.png");\n+\tlist-style-type:square;\n+}\n+\n+.conditions-constructor .conditions-constructor-admin-links li {\n+\t display: inline;\n+\t padding: 0px 7px;\n+\t/* background: white url("icons/add.png") no-repeat; */\n+}'),
 ('.',
  'le/jquery.json-2.2.min.js',
  '\\ No newline at end of file\n\n\nLeft base folder: C:\\Documents and Settings\\Olga\\My Documents\\Downloads\\webform-6.x-3.0-beta5(2)\\webform\nRight base folder: C:\\xampp\\htdocs\\ogorun\\sites\\all\\modules\\webform\n--- .\n+++ le/jquery.json-2.2.min.js\n@@ -0,0 +1,31 @@\n+\n+(function($){$.toJSON=function(o)\n+{if(typeof(JSON)==\'object\'&&JSON.stringify)\n+return JSON.stringify(o);var type=typeof(o);if(o===null)\n+return"null";if(type=="undefined")\n+return undefined;if(type=="number"||type=="boolean")\n+return o+"";if(type=="string")\n+return $.quoteString(o);if(type==\'object\')\n+{if(typeof o.toJSON=="function")\n+return $.toJSON(o.toJSON());if(o.constructor===Date)\n+{var month=o.getUTCMonth()+1;if(month<10)month=\'0\'+month;var day=o.getUTCDate();if(day<10)day=\'0\'+day;var year=o.getUTCFullYear();var hours=o.getUTCHours();if(hours<10)hours=\'0\'+hours;var minutes=o.getUTCMinutes();if(minutes<10)minutes=\'0\'+minutes;var seconds=o.getUTCSeconds();if(seconds<10)seconds=\'0\'+seconds;var milli=o.getUTCMilliseconds();if(milli<100)milli=\'0\'+milli;if(milli<10)milli=\'0\'+milli;return\'"\'+year+\'-\'+month+\'-\'+day+\'T\'+\n+hours+\':\'+minutes+\':\'+seconds+\'.\'+milli+\'Z"\';}\n+if(o.constructor===Array)\n+{var ret=[];for(var i=0;i<o.length;i++)\n+ret.push($.toJSON(o[i])||"null");return"["+ret.join(",")+"]";}\n+var pairs=[];for(var k in o){var name;var type=typeof k;if(type=="number")\n+name=\'"\'+k+\'"\';else if(type=="string")\n+name=$.quoteString(k);else\n+continue;if(typeof o[k]=="function")\n+continue;var val=$.toJSON(o[k]);pairs.push(name+":"+val);}\n+return"{"+pairs.join(", ")+"}";}};$.evalJSON=function(src)\n+{if(typeof(JSON)==\'object\'&&JSON.parse)\n+return JSON.parse(src);return eval("("+src+")");};$.secureEvalJSON=function(src)\n+{if(typeof(JSON)==\'object\'&&JSON.parse)\n+return JSON.parse(src);var filtered=src;filtered=filtered.replace(/\\\\["\\\\\\/bfnrtu]/g,\'@\');filtered=filtered.replace(/"[^"\\\\\\n\\r]*"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g,\']\');filtered=filtered.replace(/(?:^|:|,)(?:\\s*\\[)+/g,\'\');if(/^[\\],:{}\\s]*$/.test(filtered))\n+return eval("("+src+")");else\n+throw new SyntaxError("Error parsing JSON, source is not valid.");};$.quoteString=function(string)\n+{if(string.match(_escapeable))\n+{return\'"\'+string.replace(_escapeable,function(a)\n+{var c=_meta[a];if(typeof c===\'string\')return c;c=a.charCodeAt();return\'\\\\u00\'+Math.floor(c/16).toString(16)+(c%16).toString(16);})+\'"\';}\n+return\'"\'+string+\'"\';};var _escapeable=/["\\\\\\x00-\\x1f\\x7f-\\x9f]/g;var _meta={\'\\b\':\'\\\\b\',\'\\t\':\'\\\\t\',\'\\n\':\'\\\\n\',\'\\f\':\'\\\\f\',\'\\r\':\'\\\\r\',\'"\':\'\\\\"\',\'\\\\\':\'\\\\\\\\\'};})(jQuery);'),
 ('.',
  'le/le.conditionalFormFields.js',
  '\\ No newline at end of file\n\n\nLeft base folder: C:\\Documents and Settings\\Olga\\My Documents\\Downloads\\webform-6.x-3.0-beta5(2)\\webform\nRight base folder: C:\\xampp\\htdocs\\ogorun\\sites\\all\\modules\\webform\n--- .\n+++ le/le.conditionalFormFields.js\n@@ -0,0 +1,220 @@\n+(function($) {\n+    // setup a namespace for us\n+    var nsp = \'le\';\n+\t$[nsp].conditionalForm = function(form, o){\n+\n+\t\tthis.formDomObj = form[0];\n+\t\tvar that = this;\n+\t\tvar _ = {\n+\t\t\tdependencies: function(expression) {\n+\t\t\t\tvar result = [];\n+\n+\t\t\t\tif (typeof expression[\'optype\'] != \'undefined\') {\n+\t\t\t\t\tswitch (expression[\'optype\']) {\n+\t\t\t\t\t\tcase \'expr\':\n+\t\t\t\t\t\t\t$.each(expression.operands, function(key, operand) {\n+\t\t\t\t\t\t\t\tresult = $.unique(result.concat(_.dependencies(operand)));\n+\t\t\t\t\t\t\t});\n+\t\t\t\t\t\t\tbreak;\n+\t\t\t\t\t\tcase \'el\':\n+\t\t\t\t\t\t\tresult = [expression.left];\n+\t\t\t\t\t\t\tbreak;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\n+\t\t\t\treturn result;\n+\t\t\t},\n+\n+\t\t\tbuildDependencies: function (formFields) {\n+\t\t\t\tvar dependents = {};\n+\n+\t\t\t\t$.each(formFields, function(dependentField, dependentInfo) {\n+                                    var fieldObj = o.objectByName(dependentField);\n+                                    if (fieldObj.length) {\n+\t\t\t\t\tvar fields = _.dependencies(dependentInfo.expression);\n+\t\t\t\t\t$.each(fields, function(key, field) {\n+\t\t\t\t\t\tif (typeof dependents[field] == \'undefined\') {\n+\t\t\t\t\t\t\tdependents[field] = [dependentField];\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\telse {\n+\t\t\t\t\t\t\tdependents[field].push(dependentField);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t});\n+                                    }\n+\t\t\t\t});\n+\n+\t\t\t\treturn dependents;\n+\t\t\t},\n+\n+\t\t\tchangeFunction: function (name, info, mandatory) {\n+\t\t\t\t//var o = that.formDomObj[nsp].options;\n+\t\t\t\tvar obj = o.objectByName(name);\n+\t\t\t\tvar wrap = o.getWrapper(name, info);\n+\t\t\t\tif(obj[0][nsp].expression.evaluate()) {\n+\t\t\t\t\t// show the hidden div\n+\t\t\t\t\twrap.show("slow");\n+\t\t\t\t\t_.updateDependent(name, false, mandatory);\n+\t\t\t\t}\n+\t\t\t\telse {\n+\t\t\t\t\t// otherwise, hide it\n+\t\t\t\t\t_.clearDependent(name, info, mandatory);\n+\t\t\t\t\twrap.css("display", "none"); // hide() doesn\'t work if element is in hidden container\n+\t\t\t\t}\n+\t\t\t},\n+\n+\t\t\tupdateDependent: function(field, exclude, mandatoryList) {\n+\t\t\t\t//var o = that.formDomObj[nsp].options;\n+\n+\t\t\t\tif (!o.mandatoryFieldSelector || !$(o.mandatoryFieldSelector, form).length) {\n+\t\t\t\t\treturn;\n+\t\t\t\t}\n+\n+\t\t\t\tif ($.inArray(field, mandatoryList) >  -1) {\n+\t\t\t\t\tvar mandatory = $(o.mandatoryFieldSelector).val();\n+\t\t\t\t\tmandatory = mandatory ? mandatory.split(\'|\') : [];\n+\t\t\t\t\tvar index = $.inArray(field, mandatory);\n+\t\t\t\t\tif (index > -1 && exclude) { // add\n+\t\t\t\t\t\tmandatory.splice(index, 1);\n+\t\t\t\t\t}\n+\t\t\t\t\telse if (index == -1 && !exclude) { // remove\n+\t\t\t\t\t\tmandatory[mandatory.length] = field;\n+\t\t\t\t\t}\n+\n+\t\t\t\t\t$(o.mandatoryFieldSelector).val(mandatory.join(\'|\'));\n+\t\t\t\t}\n+\t\t\t},\n+\n+\t\t\tclearDependent: function(dependentField,dependentInfo, mandatory) {\n+\t\t\t\t_.updateDependent(dependentField, true, mandatory);\n+\n+\t\t\t    if(dependentInfo[\'type\']==\'fieldset\'){\n+\t\t\t\t  // when hidding a fieldset clear all components inside it\n+\t\t\t    \tvar fieldset = o.fieldsetByName(name);\n+\t\t\t\t\t$(\'input[type=text], select, textarea\', fieldset).val(\'\').trigger(\'change\');\n+\t\t\t\t\t$(\'input[type=checkbox],input[type=radio]\', fieldset).attr(\'checked\', false).trigger(\'change\');\n+\t\t\t\t\treturn;\n+\t\t\t\t }\n+\n+\t\t\t\tvar component = o.objectByName(dependentField);\n+\n+\t\t\t\t //make sure there are actually components - could be just markup\n+\t\t\t\tif(component.length > 0){\n+\t\t\t\t\t if((component[0].nodeName == \'INPUT\' && component.attr(\'type\') == \'text\' )\n+\t\t\t\t\t \t|| component[0].nodeName == \'SELECT\'\n+\t\t\t\t\t \t|| component[0].nodeName == \'TEXTAREA\') {\n+\t\t\t\t\t\t component.val(\'\').trigger(\'change\');\n+\t\t\t\t\t }else if(component[0].nodeName == \'INPUT\' &&\n+\t\t\t\t\t\t\t(component.attr(\'type\') == \'radio\' || component.attr(\'type\') == \'checkbox\'  ) ){\n+\t\t\t\t\t\t component.attr(\'checked\', false).trigger(\'change\');\n+\t\t\t\t\t }\n+\t\t\t\t }\n+\t\t\t}\n+\t\t};\n+\n+\t\tif (o.mandatoryFieldSelector && $(o.mandatoryFieldSelector, form).length) {\n+\t\t\t$(o.mandatoryFieldSelector, form).val(\'\');\n+\t\t}\n+\t\tvar dependents = _.buildDependencies(o.objects);\n+\t\tvar expressionOpts = o.expression ? o.expression : {};\n+\n+\t\t$.each(o.objects, function(dependentField, dependentInfo) {\n+\t\t\tvar fieldObj = o.objectByName(dependentField);\n+\t\t\tif (fieldObj.length) {\n+\t\t\t\tfieldObj[0][nsp] = {\n+\t\t\t\t\t\texpression: new $[nsp].expression(dependentInfo.expression, expressionOpts)\n+\t\t\t\t\t};\n+\n+\t\t\t\tvar formItemWrapper = o.getWrapper(dependentField,dependentInfo);\n+\t\t\t\tif (formItemWrapper.length) {\n+\t\t\t\t\tformItemWrapper.css("display", "none");\n+\t\t\t\t}\n+\t\t\t\tif (dependentInfo[\'mandatory\']) {\n+\t\t\t\t\to.setMandatoryLikeView(dependentField, dependentInfo);\n+\t\t\t\t}\n+\t\t\t\t_.changeFunction(dependentField, dependentInfo, o.mandatory);\n+\t\t\t}\n+\t\t});\n+\n+\t\t$.each(dependents, function(field, dependentFieldNames) {\n+\t\t\tvar components = o.objectByName(field);\n+                        if (components.length) {\n+\t\t\t  if(components.attr(\'type\')==\'radio\' || components.attr(\'type\')==\'checkbox\'){\n+\t\t\t\tcomponents.click(changeFunction);\n+\t\t\t  }else{\n+\t\t\t\tcomponents.change(changeFunction);\n+\t\t\t  }\n+\t\t\t  components.change(changeFunction);\n+                        }\n+\n+\t\t\tfunction changeFunction() {\n+\t\t\t\t$.each(dependentFieldNames, function(key, name) {\n+\t\t\t\t\t_.changeFunction(name, o.objects[name], o.mandatory);\n+\t\t\t\t});\n+\t\t\t};\n+\t\t});\n+\t};\n+\n+    $[nsp].defaultOptions.conditionalForm = {\n+    \texpression: {\n+\t\t\toperandHandler: {\n+\t\t\t\tleft: function (val) {\n+\t\t\t\t\tvar obj = $(\'[name="\'+val+\'"]\');\n+\t\t\t\t\tif(obj.filter(\'input:checked\').length == 1){\n+\t\t\t\t\t\treturn obj.filter(\'input:checked\').val();\n+\t\t\t\t\t}else if(obj.filter(\'option:selected\').length == 1){\n+\t\t\t\t\t\treturn obj.filter(\'option:selected\').val();\n+\t\t\t\t\t}else {\n+\t\t\t\t\t\treturn obj.val();\n+\t\t\t\t\t}\n+\t\t\t\t},\n+\t\t\t\tright: function (val) {\n+\t\t\t\t\treturn val;\n+\t\t\t\t}\n+    \t\t}\n+    \t},\n+    \tmandatoryFieldSelector: null,\n+    \tobjectByName: function(name) {\n+    \t\treturn $(\'[name="\'+name+\'"]\');\n+    \t},\n+    \tfeldsetByName: function(name) {\n+    \t\t// suppose name stands for ID in case of fieldset\n+    \t\treturn $(\'#\' + name);\n+    \t},\n+    \tgetWrapper: function(name,info) {\n+    \t\treturn $(\'[name="\'+name+\'"]\').parent();\n+    \t},\n+    \tsetMandatoryLikeView: function(name, info) {\n+    \t\tvar wrap = $(\'[name="\'+name+\'"\').parent();\n+    \t\tif (!wrap.find(\'label span.form-required\').length) {\n+    \t\t\t$(\'<span title="This field is required." class="form-required">*</span>\').appendTo(wrap.find(\'label\'));\n+    \t\t}\n+    \t}\n+    };\n+\n+    $.fn[nsp+\'ConditionalForm\'] = function(opts) {\n+        var localOpts = $.extend(\n+           {},\n+           $[nsp].defaultOptions.conditionalForm,\n+           opts\n+        );\n+\n+        function conditionalForm() {\n+\t        // $this to access the jQuery object\n+\t        var $this = $(this);\n+\n+\t         // lets you override the options\n+\t        // inside the dom objects class property\n+\t        // requires the jQuery metadata plugin\n+\t        // <div class="hello {color: \'red\'}">ddd</div>\n+\t\t\tvar metaOpts = $.meta ? $.extend({}, localOpts, $this.data()) : localOpts;\n+\t\t\tif (!this[nsp]) {\n+\t\t\t\tthis[nsp] = {};\n+\t\t\t}\n+\t\t\tthis[nsp].options = metaOpts;\n+\t        $[nsp].conditionalForm($this, this[nsp].options);\n+        };\n+\n+        // run the action for each matching node\n+        return this.each(conditionalForm);\n+    };\n+})(jQuery);'),
 ('.',
  'le/le.conditionsConstructor.js',
  '\\ No newline at end of file\n\n\nLeft base folder: C:\\Documents and Settings\\Olga\\My Documents\\Downloads\\webform-6.x-3.0-beta5(2)\\webform\nRight base folder: C:\\xampp\\htdocs\\ogorun\\sites\\all\\modules\\webform\n--- .\n+++ le/le.conditionsConstructor.js\n@@ -0,0 +1,737 @@\n+/* *********************************************************************\n+jQuery Plugin: logicalExpression\n+\n+Conditions constructor is jquery plugin with two main purposes:\n+ - Provide API for creation/changing/evaluation of arbitrary complicity logical expression\n+ - Provide GUI for such expression building\n+\n+  @author Olga Gorun <ogorun@gmail.com>\n+\n+  TODO:\n+  ======\n+  *) Improve error handling\n+  *) Make expression.obj - private field\n+ ** **********************************************************************/\n+;(function($) {\n+    // setup a namespace for us\n+    var nsp = \'le\';\n+\n+   // Public Static Variables and Methods\n+    $[nsp] = {\n+\n+\t\t//$.le.defaultOptions\n+\t\tdefaultOptions: {\n+\t\t},\n+\n+\t\t// $.le.expression\n+\t\t// Base component class representing expression and its API\n+\t\texpression: function (expr, options) {\n+\n+\t\t\t/**\n+\t\t\t * @var obj\n+\t\t\t *   - expression tree object\n+\t\t\t *\n+\t\t\t *   obj = <expr>\n+\t\t\t *\n+\t\t\t *   <expr> = <el> | <group>\n+\t\t\t *\n+\t\t\t *   <el> = {\n+\t\t\t *       optype: \'el\',\n+\t\t\t *       left: <left operand value>,\n+\t\t\t *       op: <operator name>,\n+\t\t\t *       right: <right operand value>,\n+\t\t\t *       neg: <negated flag>\n+\t\t\t *  };\n+\t\t\t *\n+\t\t\t * <group> = {\n+\t\t\t *       optype: \'expr\',\n+\t\t\t *       type: \'AND\' | \'OR\',\n+\t\t\t *       neg: <negated flag>\n+\t\t\t *       operands: [<expr1>, <expr2>, ...]\n+\t\t\t *  };\n+\t\t\t **/\n+\t\t\tthis.obj = expr ? expr : null;\n+\n+\t\t\t/**\n+\t\t\t * @var o\n+\t\t\t *  - options\n+\t\t\t **/\n+\t\t\tthis.o = $.extend({}, $[nsp].defaultOptions.expression, options);\n+\n+\t\t\t////////////////////////////// API methods /////////////////////////////////\n+\n+\t\t\t/**\n+\t\t\t * Return expression object\n+\t\t\t **/\n+\t\t\tthis.getExpression =  function() {\n+\t\t\t\treturn this.obj;\n+\t\t\t};\n+\n+\t\t\t/**\n+\t\t\t * Returns serialized expression\n+\t\t\t **/\n+\t\t\tthis.getSerialised = function() {\n+\t\t\t\treturn $.isFunction($.toJSON) ? $.toJSON(this.obj) : $.param(this.obj);\n+\t\t\t};\n+\n+\t\t\t/**\n+\t\t\t * Add simple element to expression\n+\t\t\t *\n+\t\t\t * @var level\n+\t\t\t *    - Array containing \'path\' to parent element\n+\t\t\t * @var left\n+\t\t\t *   - Left operand\n+\t\t\t * @var op\n+\t\t\t *  - Operator name\n+\t\t\t * @var right\n+\t\t\t *  - Right operand\n+\t\t\t * @var negated\n+\t\t\t *  - Negated flag\n+\t\t\t **/\n+\t\t\tthis.addElement = function(level, left, op, right, negated) {\n+\t\t\t\tvar el = {\n+\t\t\t\t\toptype: \'el\',\n+\t\t\t\t\tleft: left,\n+\t\t\t\t\top: op,\n+\t\t\t\t\tright: right,\n+\t\t\t\t\tneg: (negated ? true : false)\n+\t\t\t\t};\n+\n+\t\t\t\treturn _.addElement(level, el);\n+\t\t\t};\n+\n+\t\t\t/**\n+\t\t\t * Add new expression (group)  to expression.\n+\t\t\t * AND or OR expression without operands\n+\t\t\t *\n+\t\t\t * @var level\n+\t\t\t *    - Array containing \'path\' to parent element\n+\t\t\t * @var type\n+\t\t\t *   - AND|OR\n+\t\t\t * @var negated\n+\t\t\t *  - Negated flag\n+\t\t\t **/\n+\t\t\tthis.addNewGroup = function(level, type, negated) {\n+\t\t\t\tvar el = {\n+\t\t\t\t\toptype: \'expr\',\n+\t\t\t\t\ttype: type,\n+\t\t\t\t\tneg: (negated ? true : false),\n+\t\t\t\t\toperands: []\n+\t\t\t\t};\n+\n+\t\t\t\treturn _.addElement(level, el);\n+\t\t\t};\n+\n+\t\t\t/**\n+\t\t\t * Add expression given by object to expression.\n+\t\t\t *\n+\t\t\t * @var level\n+\t\t\t *    - Array containing \'path\' to parent element\n+\t\t\t * @var expr\n+\t\t\t *   - $.le.expression class object\n+\t\t\t **/\n+\t\t\tthis.addExpression = function(level, expr) {\n+\t\t\t\treturn _.addElement(level, expr.getExpression());\n+\t\t\t};\n+\n+\t\t\t/**\n+\t\t\t  * Change expression element property\n+\t\t\t *\n+\t\t\t * @var level\n+\t\t\t *    - Array containing \'path\' to element\n+\t\t\t * @var key\n+\t\t\t *   - property name\n+\t\t\t * @var val\n+\t\t\t *   - property value\n+\t\t\t  **/\n+\t\t\tthis.changeElement = function(level, key, val) {\n+\t\t\t\tvar el = _.findExpressionElement(level);\n+\t\t\t\tif (!el) {\n+\t\t\t\t\treturn false;\n+\t\t\t\t}\n+\n+\t\t\t\tel[key] = val;\n+\t\t\t\treturn true;\n+\t\t\t};\n+\n+\t\t\t/**\n+\t\t\t * Delete element from expression\n+\t\t\t *\n+\t\t\t * @var level\n+\t\t\t *    - Array containing \'path\' to element\n+\t\t\t **/\n+\t\t\tthis.deleteElement = function(level) {\n+\t\t\t\tif (level.length > 1) {\n+\t\t\t\t\tvar parentLevel = level.slice(0, -1);\n+\t\t\t\t\tvar parent = _.findExpressionElement(parentLevel);\n+\t\t\t\t\tif (!parent) {\n+\t\t\t\t\t\treturn false;\n+\t\t\t\t\t}\n+\t\t\t\t\tif (parent.operands.length >= level[level.length -1]) {\n+\t\t\t\t\t\tparent.operands.splice(level[level.length -1] - 1, 1);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\telse {\n+\t\t\t\t\tthis.obj = null;\n+\t\t\t\t}\n+\n+\t\t\t\treturn true;\n+\t\t\t};\n+\n+\t\t\t/**\n+\t\t\t * Evaluates expression\n+\t\t\t **/\n+\t\t\tthis.evaluate = function() {\n+\t\t\t\treturn _.evaluate(this.obj);\n+\t\t\t};\n+\t\t\t////////////////////////////// End of API methods /////////////////////////////////\n+\n+\t\t\tvar that = this;\n+\t\t\tvar _ = {\n+\t\t\t\tfindExpressionElement: function(levelArr) {\n+\t\t\t\t\tvar i;\n+\n+\t\t\t\t\tvar test = that.obj;\n+\t\t\t\t\tif (levelArr.length > 1) {\n+\t\t\t\t\t\tfor (i = 1; i < levelArr.length; i++)\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\tif (typeof test == \'object\' && typeof test[\'optype\'] == \'string\') {\n+\t\t\t\t\t\t\t\tswitch (test.optype) {\n+\t\t\t\t\t\t\t\t\tcase \'expr\':\n+\t\t\t\t\t\t\t\t\t\ttest = test.operands[levelArr[i] - 1];\n+\t\t\t\t\t\t\t\t\t\tbreak;\n+\t\t\t\t\t\t\t\t\tcase \'el\':\n+\t\t\t\t\t\t\t\t\t\tif (i < levelArr.length - 1) {\n+\t\t\t\t\t\t\t\t\t\t\treturn null;\n+\t\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\n+\t\t\t\t\treturn test;\n+\t\t\t\t},\n+\n+\t\t\t\taddElement: function (parentLevel, el) {\n+\t\t\t\t\tvar parent;\n+\n+\t\t\t\t\tif (parentLevel[0] == \'0\') {\n+\t\t\t\t\t\t// add to root as last element\n+\t\t\t\t\t\tif (that.obj == null || typeof that.obj[\'optype\'] != \'string\') {\n+\t\t\t\t\t\t\t//   1. empty tree\n+\t\t\t\t\t\t\tthat.obj = el;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\telse {\n+\t\t\t\t\t\t\t// not empty tree.\n+\t\t\t\t\t\t\t// Rebuild it with new root AND expression with two operands:\n+\t\t\t\t\t\t\t// - Previous root is first one\n+\t\t\t\t\t\t\t// - New element is last one\n+\n+\t\t\t\t\t\t\tvar temp = that.o.defaultNewExpr();\n+\t\t\t\t\t\t\ttemp.operands[0] = that.obj;\n+\t\t\t\t\t\t\ttemp.operands[1] = el;\n+\t\t\t\t\t\t\tthat.obj = temp;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t\telse {\n+\t\t\t\t\t\t// add to group element with default properties\n+\t\t\t\t\t\tparent = _.findExpressionElement(parentLevel);\n+\t\t\t\t\t\tif (typeof parent[\'operands\'] == \'undefined\') {\n+\t\t\t\t\t\t\treturn false;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tparent.operands[parent.operands.length] = el;\n+\t\t\t\t\t}\n+\n+\t\t\t\t\treturn true;\n+\t\t\t\t},\n+\n+\t\t\t\tevaluate : function(e) {\n+\t\t\t\t\tvar result = true;\n+\n+\t\t\t\t\tif (typeof e[\'optype\'] != \'undefined\') {\n+\t\t\t\t\t\tswitch (e[\'optype\']) {\n+\t\t\t\t\t\t\tcase \'expr\':\n+\t\t\t\t\t\t\t\tif (e[\'type\'] == \'AND\') {\n+\t\t\t\t\t\t\t\t\t$.each(e[\'operands\'], function(key, operand) {\n+\t\t\t\t\t\t\t\t\t\tresult = result && _.evaluate(operand);\n+\t\t\t\t\t\t\t\t\t\tif (!result) { // optimization break in case of FALSE\n+\t\t\t\t\t\t\t\t\t\t\treturn false;\n+\t\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t\t});\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\telse {\n+\t\t\t\t\t\t\t\t\t// type == OR\n+\t\t\t\t\t\t\t\t\tresult = false;\n+\t\t\t\t\t\t\t\t\t$.each(e[\'operands\'], function(key, operand) {\n+\t\t\t\t\t\t\t\t\t\tresult = result || _.evaluate(operand);\n+\t\t\t\t\t\t\t\t\t\tif (result) { // optimization break in case of TRUE\n+\t\t\t\t\t\t\t\t\t\t\treturn false;\n+\t\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t\t});\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\tbreak;\n+\t\t\t\t\t\t\tcase \'el\':\n+\t\t\t\t\t\t\t\tresult = _.match(e.left, e.right, e.op);\n+\t\t\t\t\t\t\t\tbreak;\n+\t\t\t\t\t\t}\n+\n+\t\t\t\t\t\tif (e.neg) {\n+\t\t\t\t\t\t\tresult = !result;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\n+\t\t\t\t\treturn result;\n+\t\t\t\t},\n+\n+\t\t\t\tmatch: function(left, right, op) {\n+\t\t\t\t\tvar result = false;\n+\t\t\t\t\tvar l = that.o.operandHandler.left(left);\n+\t\t\t\t\tvar r = that.o.operandHandler.right(right);\n+\t\t\t\t\tif ($.isFunction(that.o.ops[op]))\n+\t\t\t\t\t{\n+\t\t\t\t\t\tresult = that.o.ops[op](l, r);\n+\t\t\t\t\t}\n+\t\t\t\t\telse\n+\t\t\t\t\t{\n+\t\t\t\t\t\tresult = that.o.ops[\'opEqual\'](l, r);\n+\t\t\t\t\t}\n+\n+\t\t\t\t\treturn result;\n+\t\t\t\t}\n+\t\t\t};\n+\n+\t\t}\n+\t};\n+\n+\tvar _ = {};\n+\n+\t// $.le.defaultOptions.expression\n+\t$[nsp].defaultOptions.expression = {\n+\t\tops: {\n+\t\t\topEqual: function(val, sample) {\n+\t\t\t\treturn val == sample;\n+\t\t\t},\n+\n+\t\t\topLess: function(val, sample) {\n+\t\t\t\treturn parseFloat(val) < parseFloat(sample);\n+\t\t\t},\n+\n+\t\t\topLessOrEqual: function(val, sample) {\n+\t\t\t\treturn parseFloat(val) <= parseFloat(sample);\n+\t\t\t},\n+\n+\t\t\topGreater: function(val, sample) {\n+\t\t\t\treturn parseFloat(val) > parseFloat(sample);\n+\t\t\t},\n+\n+\t\t\topGreaterOrEqual: function(val, sample) {\n+\t\t\t\treturn parseFloat(val) >= parseFloat(sample);\n+\t\t\t},\n+\n+\t\t\topOneOf: function(val, sample) {\n+\t\t\t\tvar pattern = new RegExp(\'^\' + sample + \'$\');\n+\t\t\t\treturn pattern.test(val);\n+\t\t\t},\n+\n+\t\t\topStartsFrom: function(val, sample) {\n+\t\t\t\tvar pattern = new RegExp(\'^\' + sample);\n+\t\t\t\treturn pattern.test(val);\n+\t\t\t},\n+\n+\t\t\topEndsWith: function(val, sample) {\n+\t\t\t\tvar pattern = new RegExp(sample + \'$\');\n+\t\t\t\treturn pattern.test(val);\n+\t\t\t},\n+\n+\t\t\topContains: function(val, sample) {\n+\t\t\t\tvar pattern = new RegExp(sample);\n+\t\t\t\treturn pattern.test(val);\n+\t\t\t},\n+\n+\t\t\topEmpty: function(val, sample) {\n+\t\t\t\treturn !val;\n+\t\t\t}\n+\t\t},\n+\t\toperandHandler: {\n+\t\t\tleft: function (val) {\n+\t\t\t\treturn val;\n+\t\t\t},\n+\t\t\tright: function (val) {\n+\t\t\t\treturn val;\n+\t\t\t}\n+\t\t},\n+\t\tdefaultNewExpr: function() {\n+\t\t\treturn {\n+\t\t\t\toptype: \'expr\',\n+\t\t\t\ttype: \'AND\',\n+\t\t\t\tneg: false,\n+\t\t\t\toperands: []\n+\t\t\t};\n+\t\t}\n+\t};\n+\t// end of $[nsp].expression class\n+\n+\t// $le.constructor\n+\t$[nsp].constructor = function(container, expr, options){\n+\n+\t\tthis.renderElement = function(el, level, o) {\n+\t\t\tvar left, right, operator, negated;\n+\n+\t\t\tif (o.lOperandFormElement == \'select\') {\n+\t\t\t\tleft = _.form.select(\'constructor_el_l_\' + _.utils.classToNameDecorate(level), el.left, o.availableLOperands);\n+\t\t\t}\n+\t\t\telse {\n+\t\t\t\tleft = _.form.input(\'constructor_el_l_\' + _.utils.classToNameDecorate(level), el.left);\n+\t\t\t}\n+\n+\t\t\tif (o.rOperandFormElement == \'select\') {\n+\t\t\t\tright = _.form.select(\'constructor_el_r_\' + _.utils.classToNameDecorate(level), el.right, o.availableROperands);\n+\t\t\t}\n+\t\t\telse {\n+\t\t\t\tright = _.form.input(\'constructor_el_r_\' + _.utils.classToNameDecorate(level), el.right);\n+\t\t\t}\n+\n+\t\t\toperator = _.form.select(\'constructor_el_op_\' + _.utils.classToNameDecorate(level), el.op, o.availableOperators);\n+\t\t\tnegated = _.form.checkbox(\'constructor_el_neg_\' + _.utils.classToNameDecorate(level), \'Negated\', el.neg);\n+\n+\t\t\treturn \'<div class="constructor-el level-\' + level + \'">\' +\n+\t\t\t\t\t\t\' <span class="constructor-el-l">\' + left + \'</span>\' +\n+\t\t\t\t\t\t\' <span class="constructor-el-op">\' + operator + \'</span>\' +\n+\t\t\t\t\t\t\' <span class="constructor-el-r">\' + right + \'</span>\' +\n+\t\t\t\t\t\t\' <em class="constructor-el-negated">\' + negated + \'</em>\' +\n+\t\t\t\t\t\t\' <span><ul class="constructor-admin-links">\' +\n+\t\t\t\t\t\t\t\'<li><a href="" class="constructor-admin-delete-el level-\' + level + \'">Delete</a></li>\' +\n+\t\t\t\t\t\t\'</ul></span>\' +\n+\t\t\t\t\t\'</div>\';\n+\t\t};\n+\n+\t\tthis.renderGroup = function(el, level, o) {\n+\t\t\tvar operands, negated, i;\n+\n+\t\t\tnegated = _.form.checkbox(\'constructor_group_neg_\' + _.utils.classToNameDecorate(level), \'Negated\', el.neg);\n+\n+\t\t\toperands = \'\';\n+\t\t\tif (el.operands.length)\t{\n+\t\t\t\toperands = \'<ul>\';\n+\t\t\t\tfor (i = 0; i < el.operands.length; i++) {\n+\t\t\t\t\toperands += \'<li>\' + _.renderTree(el.operands[i], level + \'-\' + (i+1), o) + \'</li>\';\n+\t\t\t\t}\n+\t\t\t\toperands += \'</ul>\';\n+\t\t\t}\n+\n+\t\t\treturn \'<div class="constructor-group type-\' + el.type + \' level-\' + level + \'">\' +\n+\t\t\t\t\t\t\'<span class="constructor-group-label type-\' + el.type + \'">\' + el.type + \'</span>\' +\n+\t\t\t\t\t\t\' <em class="constructor-group-negated">\' + negated + \'</em>\' +\n+\t\t\t\t\t\t  operands +\n+\t\t\t\t\t\t\'<ul class="constructor-admin-links">\' +\n+\t\t\t\t\t\t\t\'<li><a href="" class="level-\' + level + \' constructor-admin-delete-group">Delete expression</a></li>\' +\n+\t\t\t\t\t\t\t\'<li><a href="" class="level-\' + level + \' constructor-admin-add-el">Add element</a></li>\' +\n+\t\t\t\t\t\t\t\'<li><a href="" class="level-\' + level + \' constructor-admin-add-and-group">Add <em>AND</em> expression</a></li>\' +\n+\t\t\t\t\t\t\t\'<li><a href="" class="level-\' + level + \' constructor-admin-add-or-group">Add <em>OR</em> expression</a></li>\' +\n+\t\t\t\t\t\t\'</ul>\' +\n+\t\t\t\t\t\'</div>\';\n+\t\t};\n+\n+\t\tvar that = this;\n+\t\tvar _ = {\n+\t\t\tthat: this,\n+\t\t\tutils: {\n+\t\t\t\tclassToNameDecorate: function(str) {\n+\t\t\t\t\tstr= new String(str);\n+\t\t\t\t\treturn str.replace(/-/g, \'_\');\n+\t\t\t\t},\n+\n+\t\t\t\tgetLevelFromName: function(name) {\n+\t\t\t\t\tvar test = name.match(/^[^0-9]+([0-9]+(_[0-9]+)*)$/);\n+\t\t\t\t\tif (test) {\n+\t\t\t\t\t\tlevel = test[1].split(\'_\');\n+\t\t\t\t\t\treturn level;\n+\t\t\t\t\t}\n+\n+\t\t\t\t\treturn null;\n+\t\t\t\t},\n+\n+\t\t\t\tgetLevelFromClass: function(className) {\n+\t\t\t\t\tvar test = className.match(/[^0-9]+([0-9]+(-[0-9]+)*)/);\n+\t\t\t\t\tif (test) {\n+\t\t\t\t\t\tlevel = test[1].split(\'-\');\n+\t\t\t\t\t\treturn level;\n+\t\t\t\t\t}\n+\n+\t\t\t\t\treturn null;\n+\t\t\t\t},\n+\t\t\t},\n+\n+\t\t\tform: {\n+\t\t\t\tselect: function(name, value, options) {\n+\t\t\t\t\tvar elementOptions = \'\';\n+\t\t\t\t\tfor (i in options) {\n+\t\t\t\t\t\telementOptions += \'<option value="\' + i + \'"\' + (value == i ? \' selected\' : \'\') + \'>\' + options[i] + \'</option>\';\n+\t\t\t\t\t}\n+\t\t\t\t\treturn  \'<select name="\' + name + \'">\' + elementOptions + \'</select>\';\n+\t\t\t\t},\n+\n+\t\t\t\tinput: function(name, value) {\n+\t\t\t\t\treturn \'<input type="text" name="\' + name + \'" value="\' + value + \'" />\';\n+\t\t\t\t},\n+\n+\t\t\t\tcheckbox: function(name, label, checked) {\n+\t\t\t\t\treturn \'<label for="\' + name + \'">\' + label + \'</label>\' +\n+\t\t\t\t\t\'<input type="checkbox" name="\' + name + \'"\' + (checked ? \' checked\' : \'\') + \' />\';\n+\t\t\t\t}\n+\t\t\t},\n+\n+\t\t\trenderTree: function(el, level, o) {\n+\t\t\t\tvar content = \'\';\n+\n+\t\t\t\tif (el == null) {\n+\t\t\t\t\treturn null;\n+\t\t\t\t}\n+\n+\t\t\t\tswitch (el[\'optype\']) {\n+\t\t\t\t\tcase \'expr\':\n+\t\t\t\t\t\tcontent = that.renderGroup(el, level, o);\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\tcase \'el\':\n+\t\t\t\t\t\tcontent = that.renderElement(el, level, o);\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t}\n+\n+\t\t\t\treturn \'<ul>\' + content + \'</ul>\';\n+\t\t\t},\n+\n+\t\t\tbuildConstructor: function(container) {\n+\t\t\t\tvar expr = container[nsp].expression;\n+\t\t\t\tvar o = container[nsp].options;\n+\t\t\t\tvar content = _.renderTree(expr.getExpression(), \'1\', o);\n+\n+\t\t\t\tvar links = [];\n+\t\t\t\tif (o.buttonFlags[\'addElement\']) {\n+\t\t\t\t\tlinks[links.length] = \'<a href="" class="constructor-admin-add-el level-0">Add element</a>\';\n+\t\t\t\t}\n+\t\t\t\tif (o.buttonFlags[\'addAndGroup\']) {\n+\t\t\t\t\tlinks[links.length] = \'<a href="" class="constructor-admin-add-and-group level-0">Add <em>AND</em> expression</a>\';\n+\t\t\t\t}\n+\t\t\t\tif (o.buttonFlags[\'addOrGroup\']) {\n+\t\t\t\t\tlinks[links.length] = \'<a href="" class="constructor-admin-add-or-group level-0">Add <em>OR</em> expression</a>\';\n+\t\t\t\t}\n+\t\t\t\tif (o.buttonFlags[\'showExpression\']) {\n+\t\t\t\t\tlinks[links.length] = \'<a href="" class="constructor-admin-show-expression level-0">Show expression</a>\';\n+\t\t\t\t}\n+\t\t\t\tif (o.buttonFlags[\'evaluate\']) {\n+\t\t\t\t\tlinks[links.length] = \'<a href="" class="constructor-admin-evaluate level-0">Evaluate</a>\';\n+\t\t\t\t}\n+\t\t\t\tif (typeof o.buttons == \'array\') {\n+\t\t\t\t\tfor(var i = 0; i < o.buttons.length; i++) {\n+\t\t\t\t\t\tlinks[links.length] = o.buttons[i];\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tcontent = (content ? content : \'<span>No conditiotions found</span>\') +\n+\t\t\t\t\' <ul class="constructor-admin-links">\' +\n+\t\t\t\t\t(links.length ? \'<li>\' + links.join(\'</li><li>\') + \'</li>\' : \'\') +\n+\t\t\t\t\'</ul>\';\n+\n+\t\t\t\tvar obj = $(container);\n+\t\t\t\tobj.empty();\n+\t\t\t\t$(content).appendTo(obj);\n+\t\t\t\t_.appendHandlers(obj);\n+\t\t\t},\n+\n+\t\t\thandlers: {\n+\t\t\t\tchangeElement: function(domObj, name, key, val) {\n+\t\t\t\t\tvar level = _.utils.getLevelFromName(name);\n+\t\t\t\t\tdomObj[nsp].expression.changeElement(level, key, val);\n+\t\t\t\t},\n+\n+\t\t\t\taddElement: function(domObj, link, type) {\n+\t\t\t\t\tvar parentLevel = _.utils.getLevelFromClass(link.attr(\'class\'));\n+\t\t\t\t\tvar parent;\n+\t\t\t\t\tvar newObj;\n+\n+\t\t\t\t\tswitch(type) {\n+\t\t\t\t\t\tcase \'el\':\n+\t\t\t\t\t\t\tnewObj = domObj[nsp].options.defaultNewElement();\n+\t\t\t\t\t\t\tbreak;\n+\t\t\t\t\t\tcase \'and_expr\':\n+\t\t\t\t\t\t\tnewObj = domObj[nsp].options.defaultNewANDExpr();\n+\t\t\t\t\t\t\tbreak;\n+\t\t\t\t\t\tcase \'or_expr\':\n+\t\t\t\t\t\t\tnewObj = domObj[nsp].options.defaultNewORExpr();\n+\t\t\t\t\t\t\tbreak;\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tdomObj[nsp].expression.addExpression(level, new $[nsp].expression(newObj));\n+\t\t\t\t\t_.buildConstructor(domObj);\n+\t\t\t\t},\n+\n+\t\t\t\tdeleteElement: function(domObj, link) {\n+\t\t\t\t\tvar level = _.utils.getLevelFromClass(link.attr(\'class\'));\n+\t\t\t\t\tdomObj[nsp].expression.deleteElement(level);\n+\t\t\t\t\t_.buildConstructor(domObj);\n+\t\t\t\t}\n+\t\t\t},\n+\n+\t\t\tappendHandlers: function(obj) {\n+\n+\t\t\t\t// Show Expression\n+\t\t\t\t$(\'.constructor-admin-show-expression\', obj).click(function() {\n+\t\t\t\t\t//alert(getSerialisedExpression());\n+\t\t\t\t\talert(obj[0][nsp].expression.getSerialised());\n+\t\t\t\t\treturn false;\n+\t\t\t\t});\n+\n+\t\t\t\t// Evaluate Expression\n+\t\t\t\t$(\'.constructor-admin-evaluate\', obj).click(function() {\n+\t\t\t\t\talert(obj[0][nsp].expression.evaluate());\n+\t\t\t\t\treturn false;\n+\t\t\t\t});\n+\n+\t\t\t\t// Update status (update currentConditions object in memory)\n+\t\t\t\t\t//negate element, group\n+\t\t\t\t\t$(\'.constructor-el-negated input:checkbox, .constructor-group-negated input:checkbox\', obj).click(function() {\n+\t\t\t\t\t\t_.handlers.changeElement(obj[0], this.name, \'neg\', this.checked);\n+\t\t\t\t\t});\n+\n+\t\t\t\t\t//change left element\n+\t\t\t\t\t$(\'.constructor-el-l input, .constructor-el-l select\', obj).change(function() {\n+\t\t\t\t\t\t_.handlers.changeElement(obj[0], this.name, \'left\', $(this).val());\n+\t\t\t\t\t});\n+\n+\t\t\t\t\t//change operator\n+\t\t\t\t\t$(\'.constructor-el-op select\', obj).change(function() {\n+\t\t\t\t\t\t_.handlers.changeElement(obj[0], this.name, \'op\', $(this).val());\n+\t\t\t\t\t});\n+\n+\t\t\t\t\t//change right element\n+\t\t\t\t\t$(\'.constructor-el-r input, .constructor-el-r select\', obj).change(function() {\n+\t\t\t\t\t\t_.handlers.changeElement(obj[0], this.name, \'right\', $(this).val());\n+\t\t\t\t\t});\n+\n+\t\t\t\t// Change tree\n+\t\t\t\t\t// add element to group, tree\n+\t\t\t\t\t$(\'.constructor-admin-add-el\').click(function() {\n+\t\t\t\t\t\t_.handlers.addElement(obj[0], $(this), \'el\');\n+\t\t\t\t\t\treturn false;\n+\t\t\t\t\t});\n+\n+\t\t\t\t\t// group, tree add AND group\n+\t\t\t\t\t$(\'.constructor-admin-add-and-group\').click(function() {\n+\t\t\t\t\t\t_.handlers.addElement(obj[0], $(this), \'and_expr\');\n+\t\t\t\t\t\treturn false;\n+\t\t\t\t\t});\n+\n+\t\t\t\t\t// group, tree add OR group\n+\t\t\t\t\t$(\'.constructor-admin-add-or-group\').click(function() {\n+\t\t\t\t\t\t_.handlers.addElement(obj[0], $(this), \'or_expr\');\n+\t\t\t\t\t\treturn false;\n+\t\t\t\t\t});\n+\n+\t\t\t\t\t// delete el, group\n+\t\t\t\t\t$(\'.constructor-admin-delete-el, .constructor-admin-delete-group\').click(function() {\n+\t\t\t\t\t\t_.handlers.deleteElement(obj[0], $(this));\n+\t\t\t\t\t\treturn false;\n+\t\t\t\t\t});\n+\t\t\t}\n+\t\t};\n+\n+\t\tif (!$(container).is(\'constructor\')) {\n+\t\t\t$(container).addClass(\'constructor\');\n+\t\t}\n+\n+\t\t_.buildConstructor(container);\n+    };\n+\n+\t// _.getObjectFirstKey\n+\t_.getObjectFirstKey =  function (data) {\n+\t\tfor (var prop in data)\n+\t\t\treturn prop;\n+\t};\n+\n+    $[nsp].defaultOptions.constructor = {\n+\t\tlOperandFormElement : \'input\',\n+\t\trOperandFormElement : \'input\',\n+\t\tavailableLOperands: null,\n+\t\tavailableROperands: null,\n+\t\tavailableOperators: {\n+\t\t    opEqual: \'=\',\n+\t\t    opLess: \'&lt;\',\n+\t\t    opLessOrEqual: \'&lt;=\',\n+\t\t    opGreater: \'&gt;\',\n+\t\t    opGreaterOrEqual: \'&gt;=\',\n+\t\t    opStartsFrom: \'starts from\',\n+\t\t    opEndsWith: \'ends with\',\n+\t\t    opContains: \'contains\',\n+\t\t    opEmpty: \'empty\',\n+\t\t    opOneOf: \'one of\'\n+\t\t},\n+\t\tbuttonFlags: {\n+\t\t\taddElement: true,\n+\t\t\taddAndGroup: true,\n+\t\t\taddOrGroup: true,\n+\t\t\tshowExpression: true,\n+\t\t\tevaluate: true\n+\t\t},\n+\t\tbuttons: null,\n+\t\texpression : null,\n+        defaultNewElement: function () {\n+\t\t\treturn {\n+\t\t\t    optype: \'el\',\n+\t\t\t    left: \'\',\n+\t\t\t    op:  _.getObjectFirstKey($[nsp].defaultOptions.constructor.availableOperators),\n+\t\t\t    right: \'\',\n+\t\t\t    neg: false\n+\t\t\t};\n+\t\t},\n+\t\tdefaultNewANDExpr: function () {\n+\t\t\treturn {\n+\t\t\t\toptype: \'expr\',\n+\t\t\t\ttype: \'AND\',\n+\t\t\t\tneg: false,\n+\t\t\t\toperands: []\n+\t\t\t};\n+\t\t},\n+\t\tdefaultNewORExpr: function () {\n+\t\t\treturn {\n+\t\t\t\toptype: \'expr\',\n+\t\t\t\ttype: \'OR\',\n+\t\t\t\tneg: false,\n+\t\t\t\toperands: []\n+\t\t\t};\n+\t\t}\n+    };\n+\t// end of $[nsp].constructor class\n+\n+\n+    // $(x).leConstructor(....)\n+    $.fn[nsp+\'Constructor\'] = function(expression,opts) {\n+        var localOpts = $.extend(\n+            {},\n+            $[nsp].defaultOptions.constructor,\n+            opts\n+        );\n+\n+        function constructor() {\n+\t        // $this to access the jQuery object\n+\t        var $this = $(this);\n+\n+\t         // lets you override the options\n+\t        // inside the dom objects class property\n+\t        // requires the jQuery metadata plugin\n+\t        // <div class="hello {color: \'red\'}">ddd</div>\n+\t\t\tvar metaOpts = $.meta ? $.extend({}, localOpts, $this.data()) : localOpts;\n+\t\t\tvar expressionOpts = metaOpts.expression ? metaOpts.expression : {};\n+\n+\t       // per dom node context data\n+\t\t\tif (!this[nsp]) {\n+\t\t\t\tthis[nsp] = {};\n+\t\t\t}\n+\t        this[nsp].expression = new $[nsp].expression(expression, expressionOpts);\n+\t\t\tthis[nsp].options = metaOpts;\n+\n+\t        $[nsp].constructor(this, this[nsp].expression, this[nsp].options);\n+        };\n+        // run the action for each matching node\n+        return this.each(constructor);\n+    };\n+\n+})(jQuery);')]