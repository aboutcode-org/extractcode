[('Documents and Settings/Boki/Desktop/head/patches/drupal6/drupal.js',
  'Documents and Settings/Boki/Desktop/head/patches/parallel uploads/drupal.js',
  'diff -Nup C:\\Documents and Settings\\Boki\\Desktop\\head\\patches\\drupal6/drupal.js C:\\Documents and Settings\\Boki\\Desktop\\head\\patches\\parallel uploads/drupal.js\n--- Documents and Settings/Boki/Desktop/head/patches/drupal6/drupal.js\n+++ Documents and Settings/Boki/Desktop/head/patches/parallel uploads/drupal.js\n@@ -162,64 +162,72 @@ Drupal.theme = function(func) {\n* in a given wrapper. The iframe should contain a call to\n* window.parent.iframeHandler() after submission.\n*/\n-Drupal.redirectFormButton = function (uri, button, handler) {\n+Drupal.redirectFormButton = function (uri, button, handler, base) {\n// Trap the button\nbutton.onmouseover = button.onfocus = function() {\n-    button.onclick = function() {\n+    button.onclick = function() {\n+      if(typeof(handlers) != \'object\') {\n+        action = button.form.action;\n+        target = button.form.target;\n+        handlers = new Array();\n+      }\n+\n// Create target iframe\n-      Drupal.createIframe();\n-\n+      Drupal.createIframe(base, target, action);\n+\n// Prepare variables for use in anonymous function.\n-      var button = this;\n-      var action = button.form.action;\n-      var target = button.form.target;\n-\n+      handlers[base] = handler;\n+\n// Redirect form submission to iframe\n+\nthis.form.action = uri;\n-      this.form.target = \'redirect-target\';\n-\n-      handler.onsubmit();\n\n-      // Set iframe handler for later\n-      window.iframeHandler = function () {\n-        var iframe = $(\'#redirect-target\').get(0);\n-        // Restore form submission\n-        button.form.action = action;\n-        button.form.target = target;\n-\n-        // Get response from iframe body\n-        try {\n-          response = (iframe.contentWindow || iframe.contentDocument || iframe).document.body.innerHTML;\n-          // Firefox 1.0.x hack: Remove (corrupted) control characters\n-          response = response.replace(/[\\f\\n\\r\\t]/g, \' \');\n-          if (window.opera) {\n-            // Opera-hack: it returns innerHTML sanitized.\n-            response = response.replace(/&quot;/g, \'"\');\n-          }\n-        }\n-        catch (e) {\n-          response = null;\n-        }\n-\n-        response = Drupal.parseJson(response);\n-        // Check response code\n-        if (response.status == 0) {\n-          handler.onerror(response.data);\n-          return;\n-        }\n-        handler.oncomplete(response.data);\n-\n-        return true;\n-      };\n+      this.form.target = \'redirect-target-\' + base;\n\n+      handler.onsubmit();\n+\nreturn true;\n-    };\n-  };\n+    }\n+  }\nbutton.onmouseout = button.onblur = function() {\nbutton.onclick = null;\n-  };\n+  }\n};\n\n+// Set iframe handler for later\n+Drupal.iframeHandler = function (base, target, action) {\n+  var iframe = $(\'#redirect-target-\' + base).get(0);\n+\n+  $(\'#node-form\').attr(\'target\', target);\n+  $(\'#node-form\').attr(\'action\', action);\n+\n+  // Get response from iframe body\n+  try {\n+    response = (iframe.contentWindow || iframe.contentDocument || iframe).document.body.innerHTML;\n+    // Firefox 1.0.x hack: Remove (corrupted) control characters\n+    response = response.replace(/[\\f\\n\\r\\t]/g, \' \');\n+    if (window.opera) {\n+       // Opera-hack: it returns innerHTML sanitized.\n+      response = response.replace(/&quot;/g, \'"\');\n+    }\n+  }\n+  catch (e) {\n+    response = null;\n+  }\n+\n+  response = Drupal.parseJson(response);\n+\n+  // Check response code\n+  if (response.status == 0) {\n+    handler.onerror(response.data);\n+    return;\n+  }\n+\n+  handlers[base].oncomplete(response.data, base);\n+\n+ return true;\n+}\n+\n/**\n* Retrieves the absolute position of an element on the screen\n*/\n@@ -270,21 +278,21 @@ Drupal.parseJson = function (data) {\n/**\n* Create an invisible iframe for form submissions.\n*/\n-Drupal.createIframe = function () {\n-  if ($(\'#redirect-holder\').size()) {\n+Drupal.createIframe = function (base, target, action) {\n+  if ($(\'#redirect-holder-\'+ base).size()) {\nreturn;\n}\n// Note: some browsers require the literal name/id attributes on the tag,\n// some want them set through JS. We do both.\nwindow.iframeHandler = function () {};\nvar div = document.createElement(\'div\');\n-  div.id = \'redirect-holder\';\n-  $(div).html(\'<iframe name="redirect-target" id="redirect-target" class="redirect" onload="window.iframeHandler();"></iframe>\');\n+  div.id = \'redirect-holder-\' + base;\n+  $(div).html(\'<iframe name="redirect-target-\' + base + \'" id="redirect-target-\' + base + \'" class="redirect" onload="Drupal.iframeHandler(\\\'\'+base+\'\\\',\\\'\'+target+\'\\\',\\\'\'+action+\'\\\');"></iframe>\');\nvar iframe = div.firstChild;\n$(iframe)\n.attr({\n-      name: \'redirect-target\',\n-      id: \'redirect-target\'\n+      name: \'redirect-target-\' + base,\n+      id: \'redirect-target-\' + base\n})\n.css({\nposition: \'absolute\',\n@@ -298,8 +306,8 @@ Drupal.createIframe = function () {\n/**\n* Delete the invisible iframe\n*/\n-Drupal.deleteIframe = function () {\n-  $(\'#redirect-holder\').remove();\n+Drupal.deleteIframe = function (base) {\n+  $(\'#redirect-holder-\'+base).remove();\n};\n\n/**'),
 ('Documents and Settings/Boki/Desktop/head/patches/drupal6/upload.js',
  'Documents and Settings/Boki/Desktop/head/patches/parallel uploads/upload.js',
  "diff -Nup C:\\Documents and Settings\\Boki\\Desktop\\head\\patches\\drupal6/upload.js C:\\Documents and Settings\\Boki\\Desktop\\head\\patches\\parallel uploads/upload.js\n--- Documents and Settings/Boki/Desktop/head/patches/drupal6/upload.js\n+++ Documents and Settings/Boki/Desktop/head/patches/parallel uploads/upload.js\n@@ -4,33 +4,39 @@\n* Attaches the upload behaviour to the upload form.\n*/\nDrupal.uploadAutoAttach = function() {\n+  var button = new Array();\n+  var wrapper = new Array();\n+  var hide = new Array;\n+  var uploads = new Array();\n+\n$('input.upload').each(function () {\nvar uri = this.value;\n// Extract the base name from the id (edit-attach-url -> attach).\nvar base = this.id.substring(5, this.id.length - 4);\n-    var button = base + '-button';\n-    var wrapper = base + '-wrapper';\n-    var hide = base + '-hide';\n-    var upload = new Drupal.jsUpload(uri, button, wrapper, hide);\n+    button[base] = base + '-button';\n+    wrapper[base] = base + '-wrapper';\n+    hide[base] = base + '-hide';\n+    uploads[base] = new Drupal.jsUpload(uri, button[base], wrapper[base], hide[base], base);\n});\n};\n\n/**\n* JS upload object.\n*/\n-Drupal.jsUpload = function(uri, button, wrapper, hide) {\n+Drupal.jsUpload = function(uri, button, wrapper, hide, base) {\n// Note: these elements are replaced after an upload, so we re-select them\n// everytime they are needed.\nthis.button = '#'+ button;\nthis.wrapper = '#'+ wrapper;\nthis.hide = '#'+ hide;\n-  Drupal.redirectFormButton(uri, $(this.button).get(0), this);\n+  Drupal.redirectFormButton(uri, $(this.button).get(0), this, base);\n};\n\n/**\n* Handler for the form redirection submission.\n*/\nDrupal.jsUpload.prototype.onsubmit = function () {\n+\n// Insert progressbar and stretch to take the same space.\nthis.progress = new Drupal.progressBar('uploadprogress');\nthis.progress.setProgress(-1, Drupal.t('Uploading file'));\n@@ -54,10 +60,8 @@ Drupal.jsUpload.prototype.onsubmit = fun\n/**\n* Handler for the form redirection completion.\n*/\n-Drupal.jsUpload.prototype.oncomplete = function (data) {\n-  // Remove old form\n+Drupal.jsUpload.prototype.oncomplete = function (data, base) {\nDrupal.freezeHeight(); // Avoid unnecessary scrolling\n-  $(this.wrapper).html('');\n\n// Place HTML into temporary div\nvar div = document.createElement('div');\n@@ -67,9 +71,9 @@ Drupal.jsUpload.prototype.oncomplete = f\nif ($('tr', div).size() == 2) {\n// Replace form and re-attach behaviour\n$(div).hide();\n+    $(this.wrapper).html('');\n$(this.wrapper).append(div);\n$(div).fadeIn('slow');\n-    Drupal.uploadAutoAttach();\n}\n// Else fade in only the last table row\nelse {\n@@ -81,16 +85,24 @@ Drupal.jsUpload.prototype.oncomplete = f\nvar hide = this.hide;\n$('div', div).each(function() {\nif (('#'+ this.id) == hide) {\n+        style = this.style.display;\nthis.style.display = 'none';\n}\n});\n\n// Replace form, fade in items and re-attach behaviour\n+    $(this.wrapper).html('');\n$(this.wrapper).append(div);\n$('table tr:last-of-type td', div).fadeIn('slow');\n-    $(this.hide, div).fadeIn('slow');\n-    Drupal.uploadAutoAttach();\n+\n+    $('div', div).each(function() {\n+      if (('#'+ this.id) == hide) {\n+        this.style.display = style;\n+      }\n+    });\n}\n+  Drupal.uploadAutoAttach();\n+\nDrupal.unfreezeHeight();\n};\n")]