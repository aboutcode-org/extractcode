[('udhcp-0.9.8.orig/dhcpc.h',
  'udhcp-0.9.8/dhcpc.h',
  '--- udhcp-0.9.8.orig/dhcpc.h\n+++ udhcp-0.9.8/dhcpc.h\n@@ -1,3 +1,4 @@\n+/* -*- Mode: C; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 8 -*- */\n/* dhcpc.h */\n#ifndef _DHCPC_H\n#define _DHCPC_H\n@@ -12,19 +13,28 @@\n#define INIT_REBOOT\t5\n#define RENEW_REQUESTED 6\n#define RELEASED\t7\n-\n+#define INIT_REBOOTING  8\n\nstruct client_config_t {\nchar foreground;\t\t/* Do not fork */\nchar quit_after_lease;\t\t/* Quit after obtaining lease */\nchar abort_if_no_lease;\t\t/* Abort if no lease */\n+        char abort_if_failed_request;   /* Abort if request was not answered */\n+        char abort_if_expired_lease;    /* Abort if lease expires */\n+        char no_deconfig_on_expire;     /* Do not run deconfig script when lease expires */\n+        char process_zero_source_packet; /* Process ACKs with zero source, this exists for compatibility with certain DHCP relay agents, but is disabled by default, since it makes DoS attacks easier. */\nchar background_if_no_lease;\t/* Fork to background if no lease */\nchar *interface;\t\t/* The name of the interface to use */\nchar *pidfile;\t\t\t/* Optionally store the process ID */\nchar *script;\t\t\t/* User script to run at dhcp events */\nunsigned char *clientid;\t/* Optional client id to use */\n+        unsigned char *userclientid;\t/* Optional user client id to use */\nunsigned char *hostname;\t/* Optional hostname to use */\nint ifindex;\t\t\t/* Index number of the interface to use */\n+        char start_init_reboot;         /* Start in INIT-REBOOT state */\n+        char start_renew;               /* Renew instead of discover when starting */\n+        int address_renewal_behaviour;  /* Release/discover instead of renew */\n+        unsigned int leasetime;         /* The requested lease time if > 0 */\nunsigned char arp[6];\t\t/* Our arp address */\n};\n')]