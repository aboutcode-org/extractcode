[('udhcp-0.9.8.orig/options.c',
  'udhcp-0.9.8/options.c',
  'diff -ur udhcp-0.9.8.orig/options.c udhcp-0.9.8/options.c\n--- udhcp-0.9.8.orig/options.c\n+++ udhcp-0.9.8/options.c\n@@ -34,6 +34,7 @@\n{"ipttl",\tOPTION_U8,\t\t\t\t0x17},\n{"mtu",\t\tOPTION_U16,\t\t\t\t0x1a},\n{"broadcast",\tOPTION_IP | OPTION_REQ,\t\t\t0x1c},\n+\t{"sroutes",\tOPTION_IP_PAIR | OPTION_LIST | OPTION_REQ, 0x21},\n{"ntpsrv",\tOPTION_IP | OPTION_LIST,\t\t0x2a},\n{"wins",\tOPTION_IP | OPTION_LIST,\t\t0x2c},\n{"requestip",\tOPTION_IP,\t\t\t\t0x32},\n@@ -47,6 +48,7 @@\n{"loghost",     OPTION_STRING | OPTION_REQ,             0x81},\n{"logport",     OPTION_STRING | OPTION_REQ,             0x82},\n{"tcplog",      OPTION_STRING | OPTION_REQ,             0x96},\n+ \t{"sroutes",     OPTION_ROUTE | OPTION_LIST | OPTION_REQ, 0x79},\n{"",\t\t0x00,\t\t\t\t0x00}\n};\n\n@@ -54,6 +56,7 @@\nint option_lengths[] = {\n[OPTION_IP] =\t\t4,\n[OPTION_IP_PAIR] =\t8,\n+\t[OPTION_ROUTE] =\t5,\n[OPTION_BOOLEAN] =\t1,\n[OPTION_STRING] =\t1,\n[OPTION_U8] =\t\t1,'),
 ('udhcp-0.9.8.orig/options.h',
  'udhcp-0.9.8/options.h',
  'diff -ur udhcp-0.9.8.orig/options.h udhcp-0.9.8/options.h\n--- udhcp-0.9.8.orig/options.h\n+++ udhcp-0.9.8/options.h\n@@ -9,6 +9,7 @@\nenum {\nOPTION_IP=1,\nOPTION_IP_PAIR,\n+\tOPTION_ROUTE,\nOPTION_STRING,\nOPTION_BOOLEAN,\nOPTION_U8,'),
 ('udhcp-0.9.8.orig/script.c',
  'udhcp-0.9.8/script.c',
  'diff -ur udhcp-0.9.8.orig/script.c udhcp-0.9.8/script.c\n--- udhcp-0.9.8.orig/script.c\n+++ udhcp-0.9.8/script.c\n@@ -41,6 +41,7 @@\nstatic int max_option_length[] = {\n[OPTION_IP] =\t\tsizeof("255.255.255.255 "),\n[OPTION_IP_PAIR] =\tsizeof("255.255.255.255 ") * 2,\n+\t[OPTION_ROUTE] =\tsizeof("255.255.255.255 ") * 3,\n[OPTION_STRING] =\t1,\n[OPTION_BOOLEAN] =\tsizeof("yes "),\n[OPTION_U8] =\t\tsizeof("255 "),\n@@ -63,6 +64,31 @@\n}\n\n\n+static int sprintroute(char *dest, unsigned char *route) {\n+ \tint dest_length = (route[0] >> 3) + !!(route[0] & 7);\n+ \tunsigned char* router = route + dest_length + 1;\n+ \tunsigned char ip[4];\n+ \tunsigned char netmask[4];\n+ \tunsigned int* temp = (unsigned int*)netmask;\n+ \tint i;\n+ \tfor (i = 0; i < 4; ++i) {\n+ \t\tif (i < dest_length) {\n+ \t\t\tip[i] = route[i + 1];\n+ \t\t} else {\n+ \t\t\tip[i] = 0;\n+ \t\t}\n+ \t\tnetmask[i] = 0;\n+ \t}\n+ \tfor (i = 0; i < route[0]; ++i) {\n+ \t\t*temp |= (1L << i);\n+ \t}\n+ \treturn sprintf(dest, "%d.%d.%d.%d/%d.%d.%d.%d/%d.%d.%d.%d ",\n+ \t\t       ip[0], ip[1], ip[2], ip[3],\n+ \t\t       netmask[0], netmask[1], netmask[2], netmask[3],\n+ \t\t       router[0], router[1], router[2], router[3]);\n+}\n+\n+\n/* Fill dest with the text of option \'option\'. */\nstatic void fill_options(char *dest, unsigned char *option, struct dhcp_option *type_p)\n{\n@@ -89,6 +115,10 @@\ndest += sprintip(dest, "", option);\n*(dest++) = \' \';\nbreak;\n+\t\tcase OPTION_ROUTE:\n+\t\t\tdest += sprintroute(dest, option);\n+\t\t\toptlen = 1 + (option[0] >> 3) + !!(option[0] & 7) + 4;\n+ \t\t\tbreak;\ncase OPTION_BOOLEAN:\ndest += sprintf(dest, *option ? "yes " : "no ");\nbreak;')]