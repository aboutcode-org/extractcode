[('linux-2.6.23/arch/sh/kernel/cpu/sh4/setup-stx7105.c.orig',
  'linux-2.6.23/arch/sh/kernel/cpu/sh4/setup-stx7105.c',
  '--- linux-2.6.23/arch/sh/kernel/cpu/sh4/setup-stx7105.c.orig\n+++ linux-2.6.23/arch/sh/kernel/cpu/sh4/setup-stx7105.c\n@@ -562,6 +562,23 @@\n\n/* Pin configuration... */\n\n+\tstx7105_pio_sysconf(9, 5, 1, "eth");\n+\tif (!rmii_mode) {\n+\t\t/* MIIPHYCLK\n+\t\t   Note: Must be configured before enabling the PHY.\n+\t\t   The timing is not that critical as long as the\n+\t\t   MIIPHYCLK is enabled before the PHY. */\n+\n+\t\t/* MIIPHYCLK */\n+\t\t/* Not implemented in cut 1 (DDTS GNBvd69906) - clock never output */\n+\t\t/* In cut 2 PIO direction used to control input or output. */\n+\t\tpin = stpio_request_pin(9, 5, "eth",\n+\t\t\t\t\text_clk ? STPIO_IN : STPIO_ALT_OUT);\n+\t} else {\n+\t\t/* RMIIREF_CLK */\n+\t\tpin = stpio_request_pin(9, 5, "eth", STPIO_ALT_BIDIR);\n+\t}\n+\n/* MIIRX_DV / RMIICRS_DV */\nstx7105_pio_sysconf(7, 4, 1, "eth");\npin = stpio_request_pin(7, 4, "eth", STPIO_IN);\n@@ -636,18 +653,6 @@\npin = stpio_request_pin(9, 4, "eth", STPIO_IN);\n}\n\n-\tstx7105_pio_sysconf(9, 5, 1, "eth");\n-\tif (!rmii_mode) {\n-\t\t/* MIIPHYCLK */\n-\t\t/* Not implemented in cut 1 (DDTS GNBvd69906) - clock never output */\n-\t\t/* In cut 2 PIO direction used to control input or output. */\n-\t\tpin = stpio_request_pin(9, 5, "eth",\n-\t\t\t\t\text_clk ? STPIO_IN : STPIO_ALT_OUT);\n-\t} else {\n-\t\t/* RMIIREF_CLK */\n-\t\tpin = stpio_request_pin(9, 5, "eth", STPIO_ALT_BIDIR);\n-\t}\n-\n/* MIIMDINT */\nstx7105_pio_sysconf(9, 6, 1, "eth");\npin = stpio_request_pin(9, 6, "eth", STPIO_IN);\n@@ -749,7 +754,6 @@\nint alt  = pwm_pios[pwm][r].alt;\n\nstx7105_pio_sysconf(port, pin, alt, "pwm");\n-\t\t\tstpio_request_pin(port, pin, "pwm", STPIO_ALT_OUT);\n}\n}\n\n@@ -830,6 +834,15 @@\npdev = &stm_stasc_devices[port];\nuart_data = pdev->dev.platform_data;\n\n+\t\tif (flags & STASC_FLAG_NORXTX) {\n+\t\t\tstruct stasc_uart_data old;\n+\t\t\tmemcpy(&old, uart_data, sizeof(old));\n+\t\t\tuart_data->pios[0].pio_direction =\n+\t\t\t\tuart_data->pios[1].pio_direction;\n+\t\t\tuart_data->pios[1].pio_direction =\n+\t\t\t\told.pios[0].pio_direction;\n+\t\t}\n+\n/* Tx */\nstx7105_pio_sysconf(uart_data->pios[0].pio_port,\nuart_data->pios[0].pio_pin,\n@@ -1008,8 +1021,10 @@\n#define PCI_PME_IN_ENABLE\t\t(1<<0)\n\n\n+#ifdef CONFIG_PCI\nstatic struct platform_device pci_device =\nPCI_DEVICE(0xfe400000, 0xfe560000, PCI_WINDOW_START, PCI_WINDOW_SIZE, evt2irq(0x1280), ILC_IRQ(25));\n+#endif\n\nvoid __init stx7105_configure_pci(struct pci_config_data *pci_conf)\n{\n@@ -1135,7 +1150,7 @@\n\nSTPIO_DEVICE(7, 0xfe010000, -1),\nSTPIO_DEVICE(8, 0xfe011000, -1),\n-\tSTPIO_DEVICE(9, 0xfe012000, -1),\n+\tSTPIO_DEVICE(9, 0xfe012000, evt2irq(0xb40)),\nSTPIO_DEVICE(10, 0xfe013000, -1),\nSTPIO_DEVICE(11, 0xfe014000, -1),\nSTPIO_DEVICE(12, 0xfe015000, -1),')]