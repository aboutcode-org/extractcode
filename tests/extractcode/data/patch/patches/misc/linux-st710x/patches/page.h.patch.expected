[('linux-2.6.23/include/asm-sh/page.h_orig',
  'linux-2.6.23/include/asm-sh/page.h',
  "--- linux-2.6.23/include/asm-sh/page.h_orig\n+++ linux-2.6.23/include/asm-sh/page.h\n@@ -104,7 +105,11 @@\n/*\n* __MEMORY_START and SIZE are the physical addresses and size of RAM.\n*/\n+#ifdef CONFIG_CPU_SUBTYPE_STX7105\n#define __MEMORY_START\t\tCONFIG_MEMORY_START\n+#else\n+#define __MEMORY_START\t\t( ((*(volatile unsigned long*)(0xFF000010)&0x10)==0x10) ? (CONFIG_MEMORY_START) : (0x04000000))\n+#endif\n#define __MEMORY_SIZE\t\tCONFIG_MEMORY_SIZE\n\n/*\n@@ -122,8 +123,15 @@\n* added or subtracted as required.\n*/\n#ifdef CONFIG_32BIT\n+#ifdef CONFIG_CPU_SUBTYPE_STX7105\n#define __pa(x)\t\t\t((unsigned long)(x)-PAGE_OFFSET+__MEMORY_START)\n#define __va(x)\t\t\t((void *)((unsigned long)(x)+PAGE_OFFSET-__MEMORY_START))\n+#else\n+#ifndef __ASSEMBLY__\n+#define __pa(x)\t\t\t( ((*(volatile unsigned long*)(0xFF000010)&0x10)==0x10) ? ((unsigned long)(x)-PAGE_OFFSET+CONFIG_MEMORY_START) : ((unsigned long)(x)-PAGE_OFFSET) )\n+#define __va(x)\t\t\t( ((*(volatile unsigned long*)(0xFF000010)&0x10)==0x10) ? ((void *)((unsigned long)(x)+PAGE_OFFSET-CONFIG_MEMORY_START)) : ((void *)((unsigned long)(x)+PAGE_OFFSET)) )\n+#endif\n+#endif\n#else\n#define __pa(x)\t\t\t((unsigned long)(x)-PAGE_OFFSET)\n#define __va(x)\t\t\t((void *)((unsigned long)(x)+PAGE_OFFSET))\n@@ -138,7 +143,9 @@\n* don't have struct page entries for the portion of address space\n* between physical address 0 and the start of RAM.\n*/\n+#if !defined(__ASSEMBLY__) || defined(CONFIG_CPU_SUBTYPE_STX7105)\n#define PFN_START\t\t(__MEMORY_START >> PAGE_SHIFT)\n+#endif\n#define ARCH_PFN_OFFSET\t\t(PFN_START)\n#define virt_to_page(kaddr)\tpfn_to_page(__pa(kaddr) >> PAGE_SHIFT)\n#ifdef CONFIG_FLATMEM")]