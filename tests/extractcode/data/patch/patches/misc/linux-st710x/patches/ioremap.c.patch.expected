[('linux-2.6.23.orig/arch/sh/mm/ioremap.c',
  'linux-2.6.23/arch/sh/mm/ioremap.c',
  'Index: linux-2.6.23/arch/sh/mm/ioremap.c\n===================================================================\n--- linux-2.6.23.orig/arch/sh/mm/ioremap.c\n+++ linux-2.6.23/arch/sh/mm/ioremap.c\n@@ -24,6 +24,9 @@\n#include <asm/tlbflush.h>\n#include <asm/mmu.h>\n\n+#define MMUCR\t\t0xFF000010\t/* MMU Control Register */\n+#define MMUCR_SE\t\t(1<<4)\n+\n/*\n* Remap an arbitrary physical address space into the kernel virtual\n* address space.\n@@ -60,13 +63,13 @@ void __iomem *__ioremap_prot(unsigned lo\nreturn NULL;\n}\n\n-#ifndef CONFIG_32BIT\n+#ifndef CONFIG_CPU_SUBTYPE_STX7105\n/*\n* For physical mappings <29 bits, with simple cached or uncached\n* protections, this is trivial, as everything is already mapped\n* through P1 and P2.\n*/\n-\tif (likely(IS_29BIT(phys_addr) && simple)) {\n+\tif (likely(IS_29BIT(phys_addr) && simple) && ((ctrl_inl(MMUCR)&MMUCR_SE)!=MMUCR_SE)) {\nif (cached)\nreturn (void __iomem *)P1SEGADDR(phys_addr);\n\n@@ -78,9 +81,9 @@ void __iomem *__ioremap_prot(unsigned lo\nif ((PXSEG(phys_addr) == P4SEG) && simple && !cached)\nreturn (void __iomem *)phys_addr;\n\n-#ifndef CONFIG_32BIT\n+#ifndef CONFIG_CPU_SUBTYPE_STX7105\n/* Prevent mapping P1/2 addresses, to improve portability */\n-\tif (unlikely(!IS_29BIT(phys_addr)))\n+\tif (unlikely(!IS_29BIT(phys_addr)) && ((ctrl_inl(MMUCR)&MMUCR_SE)!=MMUCR_SE))\nreturn (void __iomem *)0;\n#endif\n\n@@ -94,6 +97,11 @@ void __iomem *__ioremap_prot(unsigned lo\nsize = PAGE_ALIGN(last_addr+1) - phys_addr;\n\n#ifdef CONFIG_32BIT\n+#ifndef CONFIG_CPU_SUBTYPE_STX7105\n+    if ((ctrl_inl(MMUCR)&MMUCR_SE)!=MMUCR_SE)\n+      addr = 0;\n+    else\n+#endif\naddr = pmb_remap(phys_addr, size, cached ? _PAGE_CACHABLE : 0);\n#else\naddr = 0;\n@@ -141,15 +149,20 @@ void __iounmap(void __iomem *addr)\nif (PXSEG(vaddr) == P4SEG)\nreturn;\n\n-#ifndef CONFIG_32BIT\n+#ifndef CONFIG_CPU_SUBTYPE_STX7105\n+    if ((ctrl_inl(MMUCR)&MMUCR_SE)!=MMUCR_SE) {\nif (PXSEG(vaddr) < P3SEG)\nreturn;\n+    }\n+    else {\n#endif\n-\n#ifdef CONFIG_32BIT\nif(pmb_unmap(vaddr))\nreturn;\n#endif\n+#ifndef CONFIG_CPU_SUBTYPE_STX7105\n+    }\n+#endif\n\np = remove_vm_area((void *)(vaddr & PAGE_MASK));\nif (!p) {')]