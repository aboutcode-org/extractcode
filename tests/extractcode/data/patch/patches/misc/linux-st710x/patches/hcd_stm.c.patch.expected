[('linux-2.6.23/drivers/usb/host/hcd-stm.c.orig',
  'linux-2.6.23/drivers/usb/host/hcd-stm.c',
  '--- linux-2.6.23/drivers/usb/host/hcd-stm.c.orig\n+++ linux-2.6.23/drivers/usb/host/hcd-stm.c\n@@ -26,6 +26,58 @@\n#define dgb_print(fmt, args...)\n#endif\n\n+#include <linux/notifier.h>\n+#include "ohci.h"\n+#ifdef CONFIG_CPU_SUBTYPE_STX7105\n+#define SYSCONF_BASE\t\t(0xfe001000)\n+#define SYSCONF_DEVICEID\t(0x000)\n+#define UHOST2C_BASE\t\t(0xfe100000)\n+#define AHB2STBUS_OHCI_BASE\t(0x000ffc00)\n+#define AHB2STBUS_EHCI_BASE\t(0x000ffe00)\n+#else\n+#define SYSCONF_BASE\t\t(0x19001000)\n+#define SYSCONF_DEVICEID\t(0x000)\n+#define UHOST2C_BASE\t\t(0x19100000)\n+#define AHB2STBUS_OHCI_BASE\t(0x000ffc00)\n+#define AHB2STBUS_EHCI_BASE\t(0x000ffe00)\n+#endif\n+\n+static int hcd_stm_machine_restart_notifier(struct notifier_block *nb, unsigned long val, void *v)\n+{\n+\t// Check if it is a 7109.\n+\tunsigned long sysconf;\n+\tint chip_7109;\n+\tunsigned int *addr;\n+\taddr = ioremap_nocache(SYSCONF_BASE, 0x100);\n+\tsysconf = readl(addr + SYSCONF_DEVICEID);\n+\tiounmap(addr);\n+\tchip_7109 = (((sysconf >> 12) & 0x3ff) == 0x02c);\n+\tif (chip_7109) {\n+\t\tunsigned long reg;\n+\t\taddr = ioremap_nocache(UHOST2C_BASE, 0x100000);\n+\t\treg = readl(addr + AHB2STBUS_OHCI_BASE + 0x04);\n+\t\treg &= OHCI_CTRL_RWC;\n+\t\twritel(reg, addr + AHB2STBUS_OHCI_BASE + 0x04);\n+\t\tiounmap(addr);\n+\n+\t\taddr = ioremap_nocache(UHOST2C_BASE, 0x100000);\n+\t\twritel(0, addr + AHB2STBUS_EHCI_BASE + 0x18); // intr_enable\n+\t\treg = readl(addr + AHB2STBUS_EHCI_BASE + 0x10); // command\n+\t\treg &= ~(1<<0); // cmd_run\n+\t\twritel(reg, addr + AHB2STBUS_EHCI_BASE + 0x10);\n+\t\twritel(0, addr + AHB2STBUS_EHCI_BASE + 0x50); // configured_flag\n+\t\tiounmap(addr);\n+\t}\n+\treturn NOTIFY_OK;\n+}\n+\n+static struct notifier_block hcd_stm_notifier_block = {\n+\thcd_stm_machine_restart_notifier, NULL, 0\n+};\n+\n+extern int register_machine_restart_notifier(struct notifier_block * nb);\n+extern int unregister_machine_restart_notifier(struct notifier_block * nb);\n+\nstatic int st_usb_boot(struct platform_device *pdev)\n{\nstruct plat_usb_data *pl_data = pdev->dev.platform_data;\n@@ -299,12 +351,17 @@\n\nstatic int __init st_usb_init(void)\n{\n-\treturn platform_driver_register(&st_usb_driver);\n+\tint retval = platform_driver_register(&st_usb_driver);\n+\tstatic int reg = 1;\n+\tif (reg) register_machine_restart_notifier(&hcd_stm_notifier_block);\n+\treg = 0;\n+\treturn retval;\n}\n\nstatic void __exit st_usb_exit(void)\n{\nplatform_driver_unregister(&st_usb_driver);\n+\tunregister_machine_restart_notifier(&hcd_stm_notifier_block);\n}\n\nMODULE_LICENSE("GPL");')]