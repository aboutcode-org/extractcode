[('linux-2.6.23.orig/arch/sh/kernel/setup.c',
  'linux-2.6.23/arch/sh/kernel/setup.c',
  'Index: linux-2.6.23/arch/sh/kernel/setup.c\n===================================================================\n--- linux-2.6.23.orig/arch/sh/kernel/setup.c\n+++ linux-2.6.23/arch/sh/kernel/setup.c\n@@ -95,13 +95,21 @@ EXPORT_SYMBOL(memory_start);\n\nunsigned long memory_end;\nEXPORT_SYMBOL(memory_end);\n+unsigned long ramtopaddress=0;\n\nstatic int __init early_parse_mem(char *p)\n{\nunsigned long size;\n\n#ifdef CONFIG_32BIT\n+#ifndef CONFIG_CPU_SUBTYPE_STX7105\n+  if ((ctrl_inl(MMUCR)&MMUCR_SE)==MMUCR_SE)\n+#endif\nmemory_start = (unsigned long)PAGE_OFFSET;\n+#ifndef CONFIG_CPU_SUBTYPE_STX7105\n+  else\n+\tmemory_start = (unsigned long)PAGE_OFFSET+__MEMORY_START;\n+#endif\n#else\nmemory_start = (unsigned long)PAGE_OFFSET+__MEMORY_START;\n#endif\n@@ -117,11 +125,44 @@ static int __init early_parse_mem(char *\nreturn 0;\n}\n\n-\tmemory_end = memory_start + size;\n+\tmemory_end = memory_start + size*1024;\n+\n+\treturn 0;\n+}\n+early_param("systemmemsize", early_parse_mem);\n+\n+unsigned long stapi_mem_size = CONFIG_VIP19XX_STAPI_MEMORY_SIZE;\n\n+static int __init early_parse_vidmem(char *p)\n+{\n+\tunsigned long size;\n+\tsize = memparse(p, &p);\n+\n+#ifndef CONFIG_CPU_SUBTYPE_STX7105\n+\tif (size > 0x8000) {\n+               stapi_mem_size = CONFIG_VIP19XX_STAPI_MEMORY_SIZE_64MB;\n+\t}\n+#endif\n+\n+\treturn 0;\n+}\n+early_param("videomemsize", early_parse_vidmem);\n+\n+static int __init early_parse_ramtopaddress(char *p)\n+{\n+\tif (sscanf(p,"0x%lx",&ramtopaddress) == 1)\n+\t{\n+\t\t// Convert the 29 bit cached address from firmware to an offset\n+\t\tramtopaddress = (ramtopaddress & 0x1fffffff) - 0x04000000;\n+\t\tramtopaddress = ramtopaddress + __MEMORY_START;\n+\t}\n+\nreturn 0;\n}\n-early_param("mem", early_parse_mem);\n+\n+early_param("ramtopaddress", early_parse_ramtopaddress);\n+unsigned long stapi_mem_start;\n+unsigned long gfx_mem_size __attribute__ ((section (".gfx_mem_size"))) = CONFIG_VIP19XX_GFX_MEMORY_SIZE;\n\n/*\n* Register fully available low RAM pages with the bootmem allocator.\n@@ -150,6 +191,21 @@ static void __init register_bootmem_low_\nvoid __init setup_bootmem_allocator(unsigned long free_pfn)\n{\nunsigned long bootmap_size;\n+\tunsigned long config_zero_page_offset;\n+\tunsigned long dsp_mem_size;\n+\n+#if defined(CONFIG_32BIT) && !defined(CONFIG_CPU_SUBTYPE_STX7105)\n+\tif ((ctrl_inl(MMUCR)&MMUCR_SE)==MMUCR_SE) {\n+\t\tconfig_zero_page_offset = (unsigned long)CONFIG_ZERO_PAGE_OFFSET;\n+\t}\n+\telse {\n+\t\tconfig_zero_page_offset = (unsigned long)CONFIG_ZERO_PAGE_OFFSET-__MEMORY_START;\n+\t}\n+\tdsp_mem_size = CONFIG_ZERO_PAGE_OFFSET-0x04000000;\n+#else\n+\tconfig_zero_page_offset = (unsigned long)CONFIG_ZERO_PAGE_OFFSET;\n+\tdsp_mem_size = CONFIG_ZERO_PAGE_OFFSET;\n+#endif\n\n/*\n* Find a proper area for the bootmem bitmap. After this\n@@ -171,20 +227,40 @@ void __init setup_bootmem_allocator(unsi\n* case of us accidentally initializing the bootmem allocator with\n* an invalid RAM area.\n*/\n-\treserve_bootmem(__MEMORY_START + CONFIG_ZERO_PAGE_OFFSET,\n+\treserve_bootmem(__MEMORY_START + config_zero_page_offset,\n(PFN_PHYS(free_pfn) + bootmap_size + PAGE_SIZE - 1) -\n-\t\t\t(__MEMORY_START + CONFIG_ZERO_PAGE_OFFSET));\n+\t\t\t(__MEMORY_START + config_zero_page_offset));\n\n-\t/*\n-\t * Reserve physical pages below CONFIG_ZERO_PAGE_OFFSET.\n+\t/* Reserve mem for the ST DSP */\n+\treserve_bootmem(__MEMORY_START, dsp_mem_size);\n+#ifndef CONFIG_CPU_SUBTYPE_STX7105\n+\t/* Reserve mem for STAPI usage and for the common_data_header\n+\t * The common data header is 4096 bytes (PAGE_SIZE)\n*/\n-\tif (CONFIG_ZERO_PAGE_OFFSET != 0)\n-\t\treserve_bootmem(__MEMORY_START, CONFIG_ZERO_PAGE_OFFSET);\n-\n+\tstapi_mem_size += gfx_mem_size;\n+\tstapi_mem_start = ramtopaddress - stapi_mem_size - PAGE_SIZE;\n+\treserve_bootmem(stapi_mem_start, stapi_mem_size + PAGE_SIZE);\n+#else\n+\tstapi_mem_size += gfx_mem_size;\n+\tstapi_mem_start = __MEMORY_START + __MEMORY_SIZE - stapi_mem_size;\n+\treserve_bootmem(__MEMORY_START + __MEMORY_SIZE - stapi_mem_size, stapi_mem_size);\n+#endif\n+\tprintk(KERN_NOTICE "Reserve %lu KiB for STAVMEM (%lu KiB for graphics)\\n",\n+\t       stapi_mem_size / 1024, gfx_mem_size/1024);\nsparse_memory_present_with_active_regions(0);\n\n#ifdef CONFIG_BLK_DEV_INITRD\n-\tif (LOADER_TYPE && INITRD_START) {\n+ \t/*\n+ \t * Don\'t reserve any memory if the initrd is located\n+ \t * in the video memory. Just point it out.\n+ \t */\n+ \tif (((INITRD_START+0x84000000 >= 0x90000000) &&\n+ \t     (INITRD_START+0x84000000 < 0xA0000000)) ||\n+ \t    (INITRD_START+0x84000000 >= 0xB0000000)) {\n+\t\tinitrd_start = INITRD_START + 0x84000000;\n+ \t        initrd_end = initrd_start + INITRD_SIZE;\n+ \t}\n+ \telse\tif (LOADER_TYPE && INITRD_START) {\n/* INITRD_START is the offset from the start of RAM */\n\nunsigned long initrd_start_phys = INITRD_START;\n@@ -261,11 +337,24 @@ void __init setup_arch(char **cmdline_p)\ninit_mm.brk = (unsigned long) _end;\n\n#ifdef CONFIG_32BIT\n+#ifndef CONFIG_CPU_SUBTYPE_STX7105\n+  if ((ctrl_inl(MMUCR)&MMUCR_SE)==MMUCR_SE)\n+#endif\nmemory_start = (unsigned long)PAGE_OFFSET;\n+#ifndef CONFIG_CPU_SUBTYPE_STX7105\n+  else\n+\tmemory_start = (unsigned long)PAGE_OFFSET+__MEMORY_START;\n+#endif\n#else\nmemory_start = (unsigned long)PAGE_OFFSET+__MEMORY_START;\n#endif\n-\tmemory_end = memory_start + __MEMORY_SIZE;\n+\t// Default to 128MB of RAM if systemmemsize is not set by\n+\t// firmware, 256MB for 7105.\n+#ifndef CONFIG_CPU_SUBTYPE_STX7105\n+\tmemory_end = memory_start + 0x08000000;\n+#else\n+       memory_end = memory_start + 0x10000000;\n+#endif\n\n#ifdef CONFIG_CMDLINE_OVERWRITE\nstrlcpy(command_line, CONFIG_CMDLINE, sizeof(command_line));\n@@ -280,9 +369,10 @@ void __init setup_arch(char **cmdline_p)\n/* Save unparsed command line copy for /proc/cmdline */\nmemcpy(boot_command_line, command_line, COMMAND_LINE_SIZE);\n*cmdline_p = command_line;\n-\nparse_early_param();\n-\n+\tif (ramtopaddress == 0) {\n+\t\tramtopaddress = 0x08000000 + __MEMORY_START;\n+\t}\nrequest_standard_resources();\n\nsh_mv_setup();')]