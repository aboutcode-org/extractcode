[('linux-2.6.23/drivers/i2c/busses/i2c-stm.c.orig',
  'linux-2.6.23/drivers/i2c/busses/i2c-stm.c',
  '--- linux-2.6.23/drivers/i2c/busses/i2c-stm.c.orig\n+++ linux-2.6.23/drivers/i2c/busses/i2c-stm.c\n@@ -265,11 +265,15 @@\n((status & SSC_STA_ARBL) || !(ssc_load32(adap, SSC_CTL) & SSC_CTL_MS)) ){\ndgb_print2("In SLAVE mode (state %d, status %08x)!\\n", trsc->state, status);\ntrsc->status_error = IIC_E_ARBL;\n-\t\tssc_store32(adap, SSC_TBUF, 0x1ff);\n-\t\tssc_store32(adap, SSC_CLR, 0xdc0);\n-\t\ttrsc->waitcondition = 0;\n-\t\twake_up(&(adap->wait_queue));\n-\t\treturn IRQ_HANDLED;\n+    clear_lasti2cwas_nostop(adap);\n+    ssc_store32(adap, SSC_CLR, 0xdc0);\n+    ssc_store32(adap, SSC_TBUF, 0x1ff);\n+    trsc->next_state = IIC_FSM_COMPLETE;\n+    ssc_store32(adap, SSC_I2C, SSC_I2C_I2CM |\n+          SSC_I2C_TXENB | SSC_I2C_STOPG |\n+          (SSC_I2C_I2CFSMODE * fast_mode));\n+    ssc_store32(adap, SSC_IEN, SSC_IEN_STOPEN | SSC_IEN_ARBLEN);\n+    return IRQ_HANDLED;\n}\n\nswitch (trsc->state) {\n@@ -758,7 +762,7 @@\n\ntimeout = wait_event_interruptible_timeout(adap->wait_queue,\n(transaction.waitcondition==0),\n-\t\t\t\t\ti2c_adap->timeout *HZ );\n+\t\t\t\t\ti2c_adap->timeout);\n\nlocal_irq_save(flag);\n\n@@ -778,9 +782,9 @@\ngoto iic_xfer_retry;\n} else if (transaction.status_error == IIC_E_ARBL){\n/* Arbitration error */\n-\t\t\tprintk(KERN_ERR "i2c-stm: arbitration error\\n");\n-\t\t\tssc_store32(adap, SSC_CLR, SSC_CLR_SSCARBL);\n-\t\t\tssc_store32(adap, SSC_CTL, ssc_load32(adap, SSC_CTL) | SSC_CTL_MS);\n+\t\t  printk("i2c-stm: arbitration error\\n");\n+\t\t\tssc_store32(adap, SSC_CLR, 0xdc0); //reset status register\n+\t\t\tssc_store32(adap, SSC_CTL, ssc_load32(adap, SSC_CTL) | SSC_CTL_MS); // make sure we still are master\nlocal_irq_restore(flag);\n\n/* Manually issue stop condition on the bus */\n@@ -1064,8 +1068,8 @@\ni2c_hard_wired:\npdev->dev.driver_data = i2c_stm;\ni2c_stm->adapter.id = I2C_HW_STM_SSC;\n-\ti2c_stm->adapter.timeout = 2;\n+\ti2c_stm->adapter.timeout = 1000; //1000 jiffies: on ST with HZ=1000 this is 1s.\ni2c_stm->adapter.retries = 0;\ni2c_stm->adapter.class   = I2C_CLASS_ALL;\nsprintf(i2c_stm->adapter.name,"i2c-hw-%d",pdev->id);\ni2c_stm->adapter.nr = pdev->id;')]