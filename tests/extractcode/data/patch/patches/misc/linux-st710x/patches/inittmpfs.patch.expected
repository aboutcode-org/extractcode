[('linux-2.6.23.orig/fs/Kconfig',
  'linux-2.6.23/fs/Kconfig',
  'Index: linux-2.6.23/fs/Kconfig\n===================================================================\n--- linux-2.6.23.orig/fs/Kconfig\n+++ linux-2.6.23/fs/Kconfig\n@@ -986,6 +986,18 @@ config TMPFS_POSIX_ACL\n\nIf you don\'t know what Access Control Lists are, say N.\n\n+config EARLYUSERSPACE_ON_TMPFS\n+\tbool "Unpack the early userspace onto tmpfs"\n+\tdepends TMPFS\n+\tdefault y\n+\thelp\n+\t  Use this to have your early userspace placed (decompressed)\n+\t  onto tmpfs as opposed ramfs. This will allow you to\n+\t  restrict the size of your root-filesystem and it will also\n+\t  be swappable.\n+\n+\t  If unsure, say Y.\n+\nconfig HUGETLBFS\nbool "HugeTLB file system support"\ndepends on X86 || IA64 || PPC64 || SPARC64 || (SUPERH && MMU) || BROKEN'),
 ('linux-2.6.23.orig/init/initramfs.c',
  'linux-2.6.23/init/initramfs.c',
  'Index: linux-2.6.23/init/initramfs.c\n===================================================================\n--- linux-2.6.23.orig/init/initramfs.c\n+++ linux-2.6.23/init/initramfs.c\n@@ -6,6 +6,9 @@\n#include <linux/delay.h>\n#include <linux/string.h>\n#include <linux/syscalls.h>\n+#include <asm/uaccess.h>\n+#define MMUCR\t\t0xFF000010\t/* MMU Control Register */\n+#define MMUCR_SE\t\t(1<<4)\n\nstatic __initdata char *message;\nstatic void __init error(char *x)\n@@ -502,6 +505,48 @@ static int __init retain_initrd_param(ch\n}\n__setup("retain_initrd", retain_initrd_param);\n\n+/* If we want the rootfs on initramfs so we mount initramfs over the\n+ * rootfs before we unpack it. The little dance we do by creating a\n+ * pivot point and moving the root to that is in fact necessary\n+ * because lookups of "." don\'t resolve mountpoints.\n+ */\n+static inline void __init overmount_rootfs(void)\n+   {\n+#ifdef CONFIG_EARLYUSERSPACE_ON_TMPFS\n+    int init_tmpfs(void);\n+    int (*initfunc)(void) = init_tmpfs;\n+    char pivot[] = "/pivot";\n+    mm_segment_t oldfs =get_fs();\n+\n+    /* Explicitly go and init the overmount fs early (long-term\n+     * the need for this will probably go away. */\n+\n+    if (initfunc())\n+    goto err;\n+\n+    set_fs(KERNEL_DS);\n+\n+    if (sys_mkdir(pivot, 0700) < 0)\n+    goto err;\n+    if (sys_mount("tmpfs", pivot, "tmpfs", 0, "size=90%"))\n+    goto err;\n+\n+    /* Below here errors are unlikely and icky to deal with. */\n+    sys_chdir(pivot);\n+    sys_mount(".", "/", NULL, MS_MOVE, NULL);\n+    sys_chdir(".");\n+    sys_chroot(".");\n+    printk(KERN_INFO "Overmounted tmpfs\\n");\n+    goto out;\n+\n+    err:\n+    printk(KERN_ERR "Overmount error\\n");\n+\n+    out:\n+    set_fs(oldfs);\n+#endif /* CONFIG_EARLYUSERSPACE_ON_TMPFS */\n+}\n+\nextern char __initramfs_start[], __initramfs_end[];\n#ifdef CONFIG_BLK_DEV_INITRD\n#include <linux/initrd.h>\n@@ -549,6 +594,31 @@ static int __init populate_rootfs(void)\npanic(err);\n#ifdef CONFIG_BLK_DEV_INITRD\nif (initrd_start) {\n+\t\tint initrd_in_videomem = 1;\n+\t\tif (!(((initrd_start >= 0x90000000) &&\n+\t\t       (initrd_start < 0xA0000000)) ||\n+\t\t      (initrd_start >= 0xB0000000))) {\n+\t\t\tinitrd_in_videomem = 0;\n+\t\t}\n+#ifdef CONFIG_32BIT\n+\t\tif (initrd_in_videomem) {\n+\t\t\tuint32_t vid_mem_start;\n+\t\t\tuint32_t size = 0;\n+#ifdef CONFIG_CPU_SUBTYPE_STX7105\n+\t\t\tvid_mem_start = 0x60000000;\n+#else\n+\t\t\tif ((ctrl_inl(MMUCR)&MMUCR_SE)==MMUCR_SE)\n+\t\t\t\tvid_mem_start = 0x60000000;\n+\t\t\telse\n+\t\t\t\tvid_mem_start = 0x10000000;\n+#endif\n+\t\t\tsize = initrd_end - initrd_start;\n+\t\t\tinitrd_start = (initrd_start & ~0xf0000000) | vid_mem_start;\n+\t\t\tinitrd_end = (initrd_end & ~0xf0000000) | vid_mem_start;\n+\t\t\tinitrd_start = (uint32_t) ioremap_nocache(initrd_start, size);\n+\t\t\tinitrd_end = initrd_start + size;\n+\t\t}\n+#endif\n#ifdef CONFIG_BLK_DEV_RAM\nint fd;\nprintk(KERN_INFO "checking if image is initramfs...");\n@@ -556,9 +626,19 @@ static int __init populate_rootfs(void)\ninitrd_end - initrd_start, 1);\nif (!err) {\nprintk(" it is\\n");\n+#ifdef CONFIG_EARLYUSERSPACE_ON_TMPFS\n+                         overmount_rootfs();\n+#endif /* CONFIG_EARLYUSERSPACE_ON_TMPFS */\nunpack_to_rootfs((char *)initrd_start,\ninitrd_end - initrd_start, 0);\n-\t\t\tfree_initrd();\n+\t\t\tif (!initrd_in_videomem) {\n+\t\t\t\tfree_initrd();\n+ \t\t\t}\n+#ifdef CONFIG_32BIT\n+\t\t\tif (initrd_in_videomem) {\n+\t\t\t\tiounmap((void*)initrd_start);\n+\t\t\t}\n+#endif\nreturn 0;\n}\nprintk("it isn\'t (%s); looks like an initrd\\n", err);\n@@ -570,13 +650,23 @@ static int __init populate_rootfs(void)\nfree_initrd();\n}\n#else\n-\t\tprintk(KERN_INFO "Unpacking initramfs...");\n+\t\tprintk(KERN_INFO "Unpacking initramfs...\\n");\n+#ifdef CONFIG_EARLYUSERSPACE_ON_TMPFS\n+                         overmount_rootfs();\n+#endif /* CONFIG_EARLYUSERSPACE_ON_TMPFS */\nerr = unpack_to_rootfs((char *)initrd_start,\ninitrd_end - initrd_start, 0);\nif (err)\npanic(err);\n-\t\tprintk(" done\\n");\n-\t\tfree_initrd();\n+\t\tprintk(KERN_INFO " done\\n");\n+\t\t\tif (!initrd_in_videomem) {\n+\t\t\t\tfree_initrd();\n+ \t\t\t}\n+#ifdef CONFIG_32BIT\n+\t\t\tif (initrd_in_videomem) {\n+\t\t\t\tiounmap((void*)initrd_start);\n+\t\t\t}\n+#endif\n#endif\n}\n#endif'),
 ('linux-2.6.23.orig/mm/shmem.c',
  'linux-2.6.23/mm/shmem.c',
  "Index: linux-2.6.23/mm/shmem.c\n===================================================================\n--- linux-2.6.23.orig/mm/shmem.c\n+++ linux-2.6.23/mm/shmem.c\n@@ -2454,7 +2454,7 @@ static struct file_system_type tmpfs_fs_\n};\nstatic struct vfsmount *shm_mnt;\n\n-static int __init init_tmpfs(void)\n+int __init init_tmpfs(void)\n{\nint error;\n\n@@ -2485,7 +2485,12 @@ out3:\nshm_mnt = ERR_PTR(error);\nreturn error;\n}\n+/* Don't do this if we are calling it early explicity */\n+#ifndef CONFIG_EARLYUSERSPACE_ON_TMPFS\n+/* If CONFIG_EARLYUSERSPACE_ON_TMPFS is set then we will interpose\n+ * ramfs so this will get called explicitly and early */\nmodule_init(init_tmpfs)\n+#endif /* !CONFIG_EARLYUSERSPACE_ON_TMPFS */\n\n/*\n* shmem_file_setup - get an unlinked file living in tmpfs"),
 ('linux-2.6.23.orig/init/main.c',
  'linux-2.6.23/init/main.c',
  'Index: linux-2.6.23/init/main.c\n===================================================================\n--- linux-2.6.23.orig/init/main.c\n+++ linux-2.6.23/init/main.c\n@@ -854,6 +854,13 @@ static int __init kernel_init(void * unu\nif (sys_access((const char __user *) ramdisk_execute_command, 0) != 0) {\nramdisk_execute_command = NULL;\nprepare_namespace();\n+#ifdef CONFIG_EARLYUSERSPACE_ON_TMPFS\n+ \t\t{\n+ \t\t\tint init_tmpfs(void);\n+ \t\t\tint (*initfunc)(void) = init_tmpfs;\n+ \t\t\tinitfunc();\n+ \t\t}\n+#endif /* CONFIG_EARLYUSERSPACE_ON_TMPFS */\n}\n\n/*')]