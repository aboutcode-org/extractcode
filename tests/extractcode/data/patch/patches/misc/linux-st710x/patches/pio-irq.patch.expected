[('drivers/stm/pio.c',
  'drivers/stm/pio.c',
  'diff --git a/drivers/stm/pio.c b/drivers/stm/pio.c\nindex 427df0c..a180dfc 100644\n--- drivers/stm/pio.c\n+++ drivers/stm/pio.c\n@@ -120,8 +120,9 @@ struct stpio_port {\nstruct platform_device *pdev;\nunsigned int irq_comp;\nunsigned char flags;\n-#define PORT_IRQ_ENABLED\t\t0x1\n-#define PORT_IRQ_DISABLED_ON_SUSPEND\t0x2\n+#define PORT_IRQ_REGISTERED\t\t0x1\n+#define PORT_IRQ_ENABLED\t\t0x2\n+#define PORT_IRQ_DISABLED_ON_SUSPEND\t0x4\n};\n\n\n@@ -335,18 +336,22 @@ static irqreturn_t stpio_irq_wrapper(int irq, void *dev_id)\n}\n\n\n-void stpio_flagged_request_irq(struct stpio_pin *pin, int comp,\n+int stpio_flagged_request_irq(struct stpio_pin *pin, int comp,\nvoid (*handler)(struct stpio_pin *pin, void *dev),\nvoid *dev, unsigned long flags)\n{\n-\tint irq = pin_to_irq(pin);\n+\tint irq;\nint ret;\n\nDPRINTK("called\\n");\n\n+\tif (!(pin->port->flags & PORT_IRQ_REGISTERED))\n+\t\treturn -EINVAL;\n+\n/* stpio style interrupt handling doesn\'t allow sharing. */\nBUG_ON(pin->func);\n\n+\tirq = pin_to_irq(pin);\npin->func = handler;\npin->dev = dev;\n\n@@ -358,6 +363,8 @@ void stpio_flagged_request_irq(struct stpio_pin *pin, int comp,\ndisable_irq(irq);\npin->port->flags &= ~PORT_IRQ_ENABLED;\n}\n+\n+\treturn 0;\n}\nEXPORT_SYMBOL(stpio_flagged_request_irq);\n\n@@ -697,6 +704,7 @@ static int stpio_init_port(struct platform_device *pdev, int early)\n\nset_irq_chained_handler(irq, stpio_irq_chip_handler);\nset_irq_data(irq, port);\n+\t\tport->flags |= PORT_IRQ_REGISTERED;\n\nirq = stpio_irq_base + (portno * STPIO_PINS_IN_PORT);\nfor (i = 0; i < STPIO_PINS_IN_PORT; i++) {'),
 ('include/linux/stm/pio.h',
  'include/linux/stm/pio.h',
  'diff --git a/include/linux/stm/pio.h b/include/linux/stm/pio.h\nindex 09af59d..66534c0 100644\n--- include/linux/stm/pio.h\n+++ include/linux/stm/pio.h\n@@ -53,14 +53,14 @@ void stpio_set_pin(struct stpio_pin* pin, unsigned int value);\nunsigned int stpio_get_pin(struct stpio_pin* pin);\n\n/* Interrupt on external value change */\n-void stpio_flagged_request_irq(struct stpio_pin *pin, int comp,\n+int stpio_flagged_request_irq(struct stpio_pin *pin, int comp,\nvoid (*handler)(struct stpio_pin *pin, void *dev),\nvoid *dev, unsigned long irqflags);\n-static inline void __deprecated stpio_request_irq(struct stpio_pin *pin, int comp,\n+static inline int __deprecated stpio_request_irq(struct stpio_pin *pin, int comp,\nvoid (*handler)(struct stpio_pin *pin, void *dev),\nvoid *dev)\n{\n-        stpio_flagged_request_irq (pin, comp, handler, dev, 0);\n+\treturn stpio_flagged_request_irq (pin, comp, handler, dev, 0);\n}\nvoid stpio_free_irq(struct stpio_pin* pin);\nvoid stpio_enable_irq(struct stpio_pin* pin, int mode);')]