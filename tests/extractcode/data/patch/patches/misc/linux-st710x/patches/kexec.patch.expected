[('linux-2.6.23/arch/sh/kernel/machine_kexec.c.org',
  'linux-2.6.23/arch/sh/kernel/machine_kexec.c',
  '--- linux-2.6.23/arch/sh/kernel/machine_kexec.c.org\n+++ linux-2.6.23/arch/sh/kernel/machine_kexec.c\n@@ -19,6 +19,11 @@\n#include <asm/io.h>\n#include <asm/cacheflush.h>\n\n+/* #define PARSE_PAGE_LIST */\n+#ifdef PARSE_PAGE_LIST\n+  #include <asm/addrspace.h>\n+#endif\n+\ntypedef NORET_TYPE void (*relocate_new_kernel_t)(\nunsigned long indirection_page,\nunsigned long reboot_code_buffer,\n@@ -99,6 +104,47 @@\nkexec_info(image);\nflush_cache_all();\n\n+#ifdef PARSE_PAGE_LIST\n+\t{\n+\t\tunsigned long dst;\n+\t\tunsigned long* ind = &page_list;\n+\t\tunsigned long cmd = *ind;\n+\n+\t\tunsigned long segment = 0;\n+\t\tunsigned long sum = 0;\n+\t\tunsigned long length = 0;\n+\n+\t\twhile (1) {\n+#ifndef CONFIG_CPU_SUBTYPE_STX7105\n+\t\t\tunsigned long addr = (cmd | 0xa0000000) & 0xfffffff0;\n+#else\n+\t\t\tunsigned long addr = P1SEGADDR(cmd) & 0xfffffff0;\n+#endif\n+\t\t\tif (cmd & IND_DESTINATION) {\n+\t\t\t\tdst = addr;\n+\t\t\t\t++segment;\n+\t\t\t\tprintk("Segment %d located at 0x%x\\n",\n+\t\t\t\t       segment, dst);\n+\t\t\t}\n+\t\t\telse if (cmd & IND_INDIRECTION) {\n+\t\t\t\tind = (unsigned long*)addr;\n+\t\t\t\tprintk("New indirection address found: 0x%x\\n",\n+\t\t\t\t       *ind);\n+\t\t\t}\n+\t\t\telse if (cmd & IND_DONE) {\n+\t\t\t\tprintk("Done.\\n");\n+\t\t\t\tbreak;\n+\t\t\t}\n+\t\t\telse if (cmd & IND_SOURCE) {\n+\t\t\t\tprintk("Copying 4096 bytes from 0x%x to 0x%x...\\n",\n+\t\t\t\t       addr, dst);\n+\t\t\t\tdst += 4096;\n+\t\t\t}\n+\t\t\tcmd = *ind++;\n+\t\t}\n+\t}\n+#endif\n+\n/* now call it */\nrnk = (relocate_new_kernel_t) reboot_code_buffer;\n(*rnk)(page_list, reboot_code_buffer, image->start, vbr_reg);'),
 ('linux-2.6.23/kernel/kexec.c.org',
  'linux-2.6.23/kernel/kexec.c',
  '--- linux-2.6.23/kernel/kexec.c.org\n+++ linux-2.6.23/kernel/kexec.c\n@@ -28,6 +28,7 @@\n#include <asm/io.h>\n#include <asm/system.h>\n#include <asm/semaphore.h>\n+#include <asm/addrspace.h>\n\n/* Per cpu memory for storing cpu states in case of system crash. */\nnote_buf_t* crash_notes;\n@@ -323,6 +324,19 @@\nunsigned long mstart, mend;\n\nmstart = image->segment[i].mem;\n+#ifndef CONFIG_CPU_SUBTYPE_STX7105\n+\t\tif (((mstart >= 0x90000000) &&\n+\t\t     (mstart < 0xA0000000)) ||\n+\t\t    (mstart >= 0xB0000000)) {\n+\t\t\t/* Ignore segments that will not be located in RAM */\n+\t\t\tcontinue;\n+\t\t}\n+\t\tmstart &= 0x0FFFFFFF;\n+#else\n+\t\t/* Converting the physical address to the PMB mapped address */\n+\t\tstart = P1SEGADDR(start);\n+\t\tend = P1SEGADDR(end);\n+#endif\nmend = mstart + image->segment[i].memsz;\nif ((end > mstart) && (start < mend))\nreturn 1;\n@@ -1059,9 +1073,7 @@\nlocked = xchg(&kexec_lock, 1);\nif (!locked) {\nif (kexec_crash_image) {\n-\t\t\tstruct pt_regs fixed_regs;\n-\t\t\tcrash_setup_regs(&fixed_regs, regs);\n-\t\t\tmachine_crash_shutdown(&fixed_regs);\n+\t\t\tmachine_crash_shutdown(regs);\nmachine_kexec(kexec_crash_image);\n}\nlocked = xchg(&kexec_lock, 0);'),
 ('linux-2.6.23/arch/sh/kernel/relocate_kernel.S.org',
  'linux-2.6.23/arch/sh/kernel/relocate_kernel.S',
  '--- linux-2.6.23/arch/sh/kernel/relocate_kernel.S.org\n+++ linux-2.6.23/arch/sh/kernel/relocate_kernel.S\n@@ -19,7 +19,12 @@\n/* r7 = vbr_reg            */\n\nmov.l\t10f,r8\t  /* PAGE_SIZE */\n+#ifndef CONFIG_CPU_SUBTYPE_STX7105\nmov.l\t11f,r9    /* P2SEG */\n+#else\n+\tmov.l\t11f,r9    /* P1SEG */\n+\tmov.l\t12f,r10   /* mask: 0x1fffffff */\n+#endif\n\n/*  stack setting */\nadd\tr8,r5\n@@ -30,9 +35,16 @@\n0:\nmov.l\t@r4+,r0\t  /* cmd = *ind++ */\n\n-1:\t/* addr = (cmd | P2SEG) & 0xfffffff0 */\n+1:\nmov\tr0,r2\n+#ifndef CONFIG_CPU_SUBTYPE_STX7105\n+\t/* addr = (cmd | P2SEG) & 0xfffffff0 */\nor\tr9,r2\n+#else\n+\t/* addr = ((cmd & 0x1fffffff) | P1SEG) & 0xfffffff0 */\n+\tand\tr10,r2\n+\tor\tr9,r2\n+#endif\nmov\t#-16,r1\nand\tr1,r2\n\n@@ -90,7 +102,12 @@\n10:\n.long\tPAGE_SIZE\n11:\n+#ifndef CONFIG_CPU_SUBTYPE_STX7105\n.long\tP2SEG\n+#else\n+\t.long\tP1SEG\n+12:\t.long\t0x1fffffff\n+#endif\n\nrelocate_new_kernel_end:\n')]