[
  [
    "dev/null", 
    "icu/source/common/unicode/platform.h", 
    [
      "Add Ekioh configuration.", 
      "", 
      "Index: icu/source/common/unicode/platform.h", 
      "===================================================================", 
      "--- dev/null", 
      "+++ icu/source/common/unicode/platform.h", 
      "@@ -0,0 +1,299 @@", 
      "+/*", 
      "+******************************************************************************", 
      "+*", 
      "+*   Copyright (C) 1997-2006, International Business Machines", 
      "+*   Corporation and others.  All Rights Reserved.", 
      "+*", 
      "+******************************************************************************", 
      "+*", 
      "+*  FILE NAME : platform.h", 
      "+*", 
      "+*   Date        Name        Description", 
      "+*   05/13/98    nos         Creation (content moved here from ptypes.h).", 
      "+*   03/02/99    stephen     Added AS400 support.", 
      "+*   03/30/99    stephen     Added Linux support.", 
      "+*   04/13/99    stephen     Reworked for autoconf.", 
      "+******************************************************************************", 
      "+*/", 
      "+", 
      "+/**", 
      "+ * \\file", 
      "+ * \\brief Basic types for the platform", 
      "+ */", 
      "+", 
      "+/* Define the platform we're on. */", 
      "+#ifndef U_EKIOH", 
      "+#define U_EKIOH", 
      "+#endif", 
      "+", 
      "+#define U_HAVE_INTTYPES_H 1", 
      "+", 
      "+/* Define whether inttypes.h is available */", 
      "+#ifndef U_HAVE_INTTYPES_H", 
      "+#define U_HAVE_INTTYPES_H 0", 
      "+#endif", 
      "+", 
      "+/*", 
      "+ * Define what support for C++ streams is available.", 
      "+ *     If U_IOSTREAM_SOURCE is set to 199711, then <iostream> is available", 
      "+ * (1997711 is the date the ISO/IEC C++ FDIS was published), and then", 
      "+ * one should qualify streams using the std namespace in ICU header", 
      "+ * files.", 
      "+ *     If U_IOSTREAM_SOURCE is set to 198506, then <iostream.h> is", 
      "+ * available instead (198506 is the date when Stroustrup published", 
      "+ * \"An Extensible I/O Facility for C++\" at the summer USENIX conference).", 
      "+ *     If U_IOSTREAM_SOURCE is 0, then C++ streams are not available and", 
      "+ * support for them will be silently suppressed in ICU.", 
      "+ *", 
      "+ */", 
      "+", 
      "+#ifndef U_IOSTREAM_SOURCE", 
      "+#define U_IOSTREAM_SOURCE 199711", 
      "+#endif", 
      "+", 
      "+/* Determines whether specific types are available */", 
      "+#ifndef U_HAVE_INT8_T", 
      "+#define U_HAVE_INT8_T 1", 
      "+#endif", 
      "+", 
      "+#ifndef U_HAVE_UINT8_T", 
      "+#define U_HAVE_UINT8_T 1", 
      "+#endif", 
      "+", 
      "+#ifndef U_HAVE_INT16_T", 
      "+#define U_HAVE_INT16_T 1", 
      "+#endif", 
      "+", 
      "+#ifndef U_HAVE_UINT16_T", 
      "+#define U_HAVE_UINT16_T 1", 
      "+#endif", 
      "+", 
      "+#ifndef U_HAVE_INT32_T", 
      "+#define U_HAVE_INT32_T 1", 
      "+#endif", 
      "+", 
      "+#ifndef U_HAVE_UINT32_T", 
      "+#define U_HAVE_UINT32_T 1", 
      "+#endif", 
      "+", 
      "+#ifndef U_HAVE_INT64_T", 
      "+#define U_HAVE_INT64_T 1", 
      "+#endif", 
      "+", 
      "+#ifndef U_HAVE_UINT64_T", 
      "+#define U_HAVE_UINT64_T 1", 
      "+#endif", 
      "+", 
      "+/*===========================================================================*/", 
      "+/* Generic data types                                                        */", 
      "+/*===========================================================================*/", 
      "+", 
      "+#include <sys/types.h>", 
      "+", 
      "+/* If your platform does not have the <inttypes.h> header, you may", 
      "+   need to edit the typedefs below. */", 
      "+#if U_HAVE_INTTYPES_H", 
      "+", 
      "+/* autoconf 2.13 sometimes can't properly find the data types in <inttypes.h> */", 
      "+/* os/390 needs <inttypes.h>, but it doesn't have int8_t, and it sometimes */", 
      "+/* doesn't have uint8_t depending on the OS version. */", 
      "+/* So we have this work around. */", 
      "+#ifdef OS390", 
      "+/* The features header is needed to get (u)int64_t sometimes. */", 
      "+#include <features.h>", 
      "+#if ! U_HAVE_INT8_T", 
      "+typedef signed char int8_t;", 
      "+#endif", 
      "+#if !defined(__uint8_t)", 
      "+#define __uint8_t 1", 
      "+typedef unsigned char uint8_t;", 
      "+#endif", 
      "+#endif /* OS390 */", 
      "+", 
      "+#include <inttypes.h>", 
      "+", 
      "+#else /* U_HAVE_INTTYPES_H */", 
      "+", 
      "+#if ! U_HAVE_INT8_T", 
      "+typedef signed char int8_t;", 
      "+#endif", 
      "+", 
      "+#if ! U_HAVE_UINT8_T", 
      "+typedef unsigned char uint8_t;", 
      "+#endif", 
      "+", 
      "+#if ! U_HAVE_INT16_T", 
      "+typedef signed short int16_t;", 
      "+#endif", 
      "+", 
      "+#if ! U_HAVE_UINT16_T", 
      "+typedef unsigned short uint16_t;", 
      "+#endif", 
      "+", 
      "+#if ! U_HAVE_INT32_T", 
      "+typedef signed int int32_t;", 
      "+#endif", 
      "+", 
      "+#if ! U_HAVE_UINT32_T", 
      "+typedef unsigned int uint32_t;", 
      "+#endif", 
      "+", 
      "+#if ! U_HAVE_INT64_T", 
      "+    typedef signed long long int64_t;", 
      "+/* else we may not have a 64-bit type */", 
      "+#endif", 
      "+", 
      "+#if ! U_HAVE_UINT64_T", 
      "+    typedef unsigned long long uint64_t;", 
      "+/* else we may not have a 64-bit type */", 
      "+#endif", 
      "+", 
      "+#endif", 
      "+", 
      "+/*===========================================================================*/", 
      "+/* Compiler and environment features                                         */", 
      "+/*===========================================================================*/", 
      "+", 
      "+/* Define whether namespace is supported */", 
      "+#ifndef U_HAVE_NAMESPACE", 
      "+#define U_HAVE_NAMESPACE 1", 
      "+#endif", 
      "+", 
      "+/* Determines the endianness of the platform", 
      "+   It's done this way in case multiple architectures are being built at once.", 
      "+   For example, Darwin supports fat binaries, which can be both PPC and x86 based. */", 
      "+#if defined(BYTE_ORDER) && defined(BIG_ENDIAN)", 
      "+#define U_IS_BIG_ENDIAN (BYTE_ORDER == BIG_ENDIAN)", 
      "+#else", 
      "+#define U_IS_BIG_ENDIAN 1", 
      "+#endif", 
      "+", 
      "+/* 1 or 0 to enable or disable threads.  If undefined, default is: enable threads. */", 
      "+#define ICU_USE_THREADS 0", 
      "+", 
      "+#ifndef U_DEBUG", 
      "+#define U_DEBUG 0", 
      "+#endif", 
      "+", 
      "+#ifndef U_RELEASE", 
      "+#define U_RELEASE 1", 
      "+#endif", 
      "+", 
      "+/* Determine whether to disable renaming or not. This overrides the", 
      "+   setting in umachine.h which is for all platforms. */", 
      "+#ifndef U_DISABLE_RENAMING", 
      "+#define U_DISABLE_RENAMING 0", 
      "+#endif", 
      "+", 
      "+/* Determine whether to override new and delete. */", 
      "+#ifndef U_OVERRIDE_CXX_ALLOCATION", 
      "+#define U_OVERRIDE_CXX_ALLOCATION 1", 
      "+#endif", 
      "+/* Determine whether to override placement new and delete for STL. */", 
      "+#ifndef U_HAVE_PLACEMENT_NEW", 
      "+#define U_HAVE_PLACEMENT_NEW 1", 
      "+#endif", 
      "+", 
      "+/* Determine whether to enable tracing. */", 
      "+#ifndef U_ENABLE_TRACING", 
      "+#define U_ENABLE_TRACING 0", 
      "+#endif", 
      "+", 
      "+/* Do we allow ICU users to use the draft APIs by default? */", 
      "+#ifndef U_DEFAULT_SHOW_DRAFT", 
      "+#define U_DEFAULT_SHOW_DRAFT 1", 
      "+#endif", 
      "+", 
      "+/* Define the library suffix in a C syntax. */", 
      "+#define U_HAVE_LIB_SUFFIX 0", 
      "+#define U_LIB_SUFFIX_C_NAME", 
      "+#define U_LIB_SUFFIX_C_NAME_STRING \"\"", 
      "+", 
      "+/*===========================================================================*/", 
      "+/* Character data types                                                      */", 
      "+/*===========================================================================*/", 
      "+", 
      "+#if ((defined(OS390) && (!defined(__CHARSET_LIB) || !__CHARSET_LIB))) || defined(OS400)", 
      "+#   define U_CHARSET_FAMILY 1", 
      "+#endif", 
      "+", 
      "+/*===========================================================================*/", 
      "+/* Information about wchar support                                           */", 
      "+/*===========================================================================*/", 
      "+", 
      "+#define U_HAVE_WCHAR_H      1", 
      "+", 
      "+#if defined(WIN32) || defined(_WIN32)", 
      "+#define U_SIZEOF_WCHAR_T 2", 
      "+#elif defined(__APPLE__)", 
      "+#define U_SIZEOF_WCHAR_T 4", 
      "+#else", 
      "+#define U_SIZEOF_WCHAR_T 4", 
      "+#endif", 
      "+", 
      "+#define U_HAVE_WCSCPY       1", 
      "+", 
      "+/*===========================================================================*/", 
      "+/* Information about POSIX support                                           */", 
      "+/*===========================================================================*/", 
      "+", 
      "+#define U_HAVE_NL_LANGINFO          0", 
      "+#define U_HAVE_NL_LANGINFO_CODESET  0", 
      "+#define U_NL_LANGINFO_CODESET \"\"", 
      "+", 
      "+#if 1", 
      "+#define U_TZSET         tzset", 
      "+#endif", 
      "+#if 1", 
      "+#define U_TIMEZONE      timezone", 
      "+#endif", 
      "+#if 1", 
      "+#define U_TZNAME        tzname", 
      "+#endif", 
      "+", 
      "+#define U_HAVE_MMAP     1", 
      "+#define U_HAVE_POPEN    0", 
      "+", 
      "+/*===========================================================================*/", 
      "+/* Symbol import-export control                                              */", 
      "+/*===========================================================================*/", 
      "+", 
      "+#if defined(U_DARWIN) && defined(__GNUC__) && (__GNUC__ >= 4)", 
      "+#define USE_GCC_VISIBILITY_ATTRIBUTE 1", 
      "+#endif", 
      "+", 
      "+#ifdef USE_GCC_VISIBILITY_ATTRIBUTE", 
      "+#define U_EXPORT __attribute__((visibility(\"default\")))", 
      "+#else", 
      "+#define U_EXPORT", 
      "+#endif", 
      "+", 
      "+/* U_CALLCONV is releated to U_EXPORT2 */", 
      "+#define U_EXPORT2", 
      "+", 
      "+/* cygwin needs to export/import data */", 
      "+#ifdef U_CYGWIN", 
      "+#define U_IMPORT __declspec(dllimport)", 
      "+#else", 
      "+#define U_IMPORT", 
      "+#endif", 
      "+", 
      "+/*===========================================================================*/", 
      "+/* Code alignment and C function inlining                                    */", 
      "+/*===========================================================================*/", 
      "+", 
      "+#ifndef U_INLINE", 
      "+#   ifdef __cplusplus", 
      "+#       define U_INLINE inline", 
      "+#   else", 
      "+#       define U_INLINE inline", 
      "+#   endif", 
      "+#endif", 
      "+", 
      "+#define U_ALIGN_CODE(n)", 
      "+", 
      "+/*===========================================================================*/", 
      "+/* Programs used by ICU code                                                 */", 
      "+/*===========================================================================*/", 
      "+", 
      "+#define U_MAKE  \"@U_MAKE@\""
    ]
  ], 
  [
    "work.orig/icu/source/common/unicode/uconfig.h", 
    "icu/source/common/unicode/uconfig.h", 
    [
      "Index: icu/source/common/unicode/uconfig.h", 
      "===================================================================", 
      "--- work.orig/icu/source/common/unicode/uconfig.h", 
      "+++ icu/source/common/unicode/uconfig.h", 
      "@@ -169,7 +169,7 @@", 
      "* @stable ICU 2.4", 
      "*/", 
      "#ifndef UCONFIG_NO_COLLATION", 
      "-#   define UCONFIG_NO_COLLATION 0", 
      "+#   define UCONFIG_NO_COLLATION 1", 
      "#endif", 
      "", 
      "/**", 
      "@@ -179,7 +179,7 @@", 
      "* @stable ICU 2.4", 
      "*/", 
      "#ifndef UCONFIG_NO_FORMATTING", 
      "-#   define UCONFIG_NO_FORMATTING 0", 
      "+#   define UCONFIG_NO_FORMATTING 1", 
      "#endif", 
      "", 
      "/**", 
      "@@ -189,7 +189,7 @@", 
      "* @stable ICU 2.4", 
      "*/", 
      "#ifndef UCONFIG_NO_TRANSLITERATION", 
      "-#   define UCONFIG_NO_TRANSLITERATION 0", 
      "+#   define UCONFIG_NO_TRANSLITERATION 1", 
      "#endif", 
      "", 
      "/**", 
      "@@ -199,7 +199,7 @@", 
      "* @stable ICU 2.4", 
      "*/", 
      "#ifndef UCONFIG_NO_REGULAR_EXPRESSIONS", 
      "-#   define UCONFIG_NO_REGULAR_EXPRESSIONS 0", 
      "+#   define UCONFIG_NO_REGULAR_EXPRESSIONS 1", 
      "#endif", 
      "", 
      "/**", 
      "@@ -209,7 +209,9 @@", 
      "* @stable ICU 3.2", 
      "*/", 
      "#ifndef UCONFIG_NO_SERVICE", 
      "-#   define UCONFIG_NO_SERVICE 0", 
      "+#   define UCONFIG_NO_SERVICE 1", 
      "#endif", 
      "", 
      "+#define U_STATIC_IMPLEMENTATION", 
      "+", 
      "#endif"
    ]
  ]
]