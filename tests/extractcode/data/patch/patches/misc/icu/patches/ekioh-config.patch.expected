[('dev/null',
  'icu/source/common/unicode/platform.h',
  'Add Ekioh configuration.\n\nIndex: icu/source/common/unicode/platform.h\n===================================================================\n--- dev/null\n+++ icu/source/common/unicode/platform.h\n@@ -0,0 +1,299 @@\n+/*\n+******************************************************************************\n+*\n+*   Copyright (C) 1997-2006, International Business Machines\n+*   Corporation and others.  All Rights Reserved.\n+*\n+******************************************************************************\n+*\n+*  FILE NAME : platform.h\n+*\n+*   Date        Name        Description\n+*   05/13/98    nos         Creation (content moved here from ptypes.h).\n+*   03/02/99    stephen     Added AS400 support.\n+*   03/30/99    stephen     Added Linux support.\n+*   04/13/99    stephen     Reworked for autoconf.\n+******************************************************************************\n+*/\n+\n+/**\n+ * \\file\n+ * \\brief Basic types for the platform\n+ */\n+\n+/* Define the platform we\'re on. */\n+#ifndef U_EKIOH\n+#define U_EKIOH\n+#endif\n+\n+#define U_HAVE_INTTYPES_H 1\n+\n+/* Define whether inttypes.h is available */\n+#ifndef U_HAVE_INTTYPES_H\n+#define U_HAVE_INTTYPES_H 0\n+#endif\n+\n+/*\n+ * Define what support for C++ streams is available.\n+ *     If U_IOSTREAM_SOURCE is set to 199711, then <iostream> is available\n+ * (1997711 is the date the ISO/IEC C++ FDIS was published), and then\n+ * one should qualify streams using the std namespace in ICU header\n+ * files.\n+ *     If U_IOSTREAM_SOURCE is set to 198506, then <iostream.h> is\n+ * available instead (198506 is the date when Stroustrup published\n+ * "An Extensible I/O Facility for C++" at the summer USENIX conference).\n+ *     If U_IOSTREAM_SOURCE is 0, then C++ streams are not available and\n+ * support for them will be silently suppressed in ICU.\n+ *\n+ */\n+\n+#ifndef U_IOSTREAM_SOURCE\n+#define U_IOSTREAM_SOURCE 199711\n+#endif\n+\n+/* Determines whether specific types are available */\n+#ifndef U_HAVE_INT8_T\n+#define U_HAVE_INT8_T 1\n+#endif\n+\n+#ifndef U_HAVE_UINT8_T\n+#define U_HAVE_UINT8_T 1\n+#endif\n+\n+#ifndef U_HAVE_INT16_T\n+#define U_HAVE_INT16_T 1\n+#endif\n+\n+#ifndef U_HAVE_UINT16_T\n+#define U_HAVE_UINT16_T 1\n+#endif\n+\n+#ifndef U_HAVE_INT32_T\n+#define U_HAVE_INT32_T 1\n+#endif\n+\n+#ifndef U_HAVE_UINT32_T\n+#define U_HAVE_UINT32_T 1\n+#endif\n+\n+#ifndef U_HAVE_INT64_T\n+#define U_HAVE_INT64_T 1\n+#endif\n+\n+#ifndef U_HAVE_UINT64_T\n+#define U_HAVE_UINT64_T 1\n+#endif\n+\n+/*===========================================================================*/\n+/* Generic data types                                                        */\n+/*===========================================================================*/\n+\n+#include <sys/types.h>\n+\n+/* If your platform does not have the <inttypes.h> header, you may\n+   need to edit the typedefs below. */\n+#if U_HAVE_INTTYPES_H\n+\n+/* autoconf 2.13 sometimes can\'t properly find the data types in <inttypes.h> */\n+/* os/390 needs <inttypes.h>, but it doesn\'t have int8_t, and it sometimes */\n+/* doesn\'t have uint8_t depending on the OS version. */\n+/* So we have this work around. */\n+#ifdef OS390\n+/* The features header is needed to get (u)int64_t sometimes. */\n+#include <features.h>\n+#if ! U_HAVE_INT8_T\n+typedef signed char int8_t;\n+#endif\n+#if !defined(__uint8_t)\n+#define __uint8_t 1\n+typedef unsigned char uint8_t;\n+#endif\n+#endif /* OS390 */\n+\n+#include <inttypes.h>\n+\n+#else /* U_HAVE_INTTYPES_H */\n+\n+#if ! U_HAVE_INT8_T\n+typedef signed char int8_t;\n+#endif\n+\n+#if ! U_HAVE_UINT8_T\n+typedef unsigned char uint8_t;\n+#endif\n+\n+#if ! U_HAVE_INT16_T\n+typedef signed short int16_t;\n+#endif\n+\n+#if ! U_HAVE_UINT16_T\n+typedef unsigned short uint16_t;\n+#endif\n+\n+#if ! U_HAVE_INT32_T\n+typedef signed int int32_t;\n+#endif\n+\n+#if ! U_HAVE_UINT32_T\n+typedef unsigned int uint32_t;\n+#endif\n+\n+#if ! U_HAVE_INT64_T\n+    typedef signed long long int64_t;\n+/* else we may not have a 64-bit type */\n+#endif\n+\n+#if ! U_HAVE_UINT64_T\n+    typedef unsigned long long uint64_t;\n+/* else we may not have a 64-bit type */\n+#endif\n+\n+#endif\n+\n+/*===========================================================================*/\n+/* Compiler and environment features                                         */\n+/*===========================================================================*/\n+\n+/* Define whether namespace is supported */\n+#ifndef U_HAVE_NAMESPACE\n+#define U_HAVE_NAMESPACE 1\n+#endif\n+\n+/* Determines the endianness of the platform\n+   It\'s done this way in case multiple architectures are being built at once.\n+   For example, Darwin supports fat binaries, which can be both PPC and x86 based. */\n+#if defined(BYTE_ORDER) && defined(BIG_ENDIAN)\n+#define U_IS_BIG_ENDIAN (BYTE_ORDER == BIG_ENDIAN)\n+#else\n+#define U_IS_BIG_ENDIAN 1\n+#endif\n+\n+/* 1 or 0 to enable or disable threads.  If undefined, default is: enable threads. */\n+#define ICU_USE_THREADS 0\n+\n+#ifndef U_DEBUG\n+#define U_DEBUG 0\n+#endif\n+\n+#ifndef U_RELEASE\n+#define U_RELEASE 1\n+#endif\n+\n+/* Determine whether to disable renaming or not. This overrides the\n+   setting in umachine.h which is for all platforms. */\n+#ifndef U_DISABLE_RENAMING\n+#define U_DISABLE_RENAMING 0\n+#endif\n+\n+/* Determine whether to override new and delete. */\n+#ifndef U_OVERRIDE_CXX_ALLOCATION\n+#define U_OVERRIDE_CXX_ALLOCATION 1\n+#endif\n+/* Determine whether to override placement new and delete for STL. */\n+#ifndef U_HAVE_PLACEMENT_NEW\n+#define U_HAVE_PLACEMENT_NEW 1\n+#endif\n+\n+/* Determine whether to enable tracing. */\n+#ifndef U_ENABLE_TRACING\n+#define U_ENABLE_TRACING 0\n+#endif\n+\n+/* Do we allow ICU users to use the draft APIs by default? */\n+#ifndef U_DEFAULT_SHOW_DRAFT\n+#define U_DEFAULT_SHOW_DRAFT 1\n+#endif\n+\n+/* Define the library suffix in a C syntax. */\n+#define U_HAVE_LIB_SUFFIX 0\n+#define U_LIB_SUFFIX_C_NAME\n+#define U_LIB_SUFFIX_C_NAME_STRING ""\n+\n+/*===========================================================================*/\n+/* Character data types                                                      */\n+/*===========================================================================*/\n+\n+#if ((defined(OS390) && (!defined(__CHARSET_LIB) || !__CHARSET_LIB))) || defined(OS400)\n+#   define U_CHARSET_FAMILY 1\n+#endif\n+\n+/*===========================================================================*/\n+/* Information about wchar support                                           */\n+/*===========================================================================*/\n+\n+#define U_HAVE_WCHAR_H      1\n+\n+#if defined(WIN32) || defined(_WIN32)\n+#define U_SIZEOF_WCHAR_T 2\n+#elif defined(__APPLE__)\n+#define U_SIZEOF_WCHAR_T 4\n+#else\n+#define U_SIZEOF_WCHAR_T 4\n+#endif\n+\n+#define U_HAVE_WCSCPY       1\n+\n+/*===========================================================================*/\n+/* Information about POSIX support                                           */\n+/*===========================================================================*/\n+\n+#define U_HAVE_NL_LANGINFO          0\n+#define U_HAVE_NL_LANGINFO_CODESET  0\n+#define U_NL_LANGINFO_CODESET ""\n+\n+#if 1\n+#define U_TZSET         tzset\n+#endif\n+#if 1\n+#define U_TIMEZONE      timezone\n+#endif\n+#if 1\n+#define U_TZNAME        tzname\n+#endif\n+\n+#define U_HAVE_MMAP     1\n+#define U_HAVE_POPEN    0\n+\n+/*===========================================================================*/\n+/* Symbol import-export control                                              */\n+/*===========================================================================*/\n+\n+#if defined(U_DARWIN) && defined(__GNUC__) && (__GNUC__ >= 4)\n+#define USE_GCC_VISIBILITY_ATTRIBUTE 1\n+#endif\n+\n+#ifdef USE_GCC_VISIBILITY_ATTRIBUTE\n+#define U_EXPORT __attribute__((visibility("default")))\n+#else\n+#define U_EXPORT\n+#endif\n+\n+/* U_CALLCONV is releated to U_EXPORT2 */\n+#define U_EXPORT2\n+\n+/* cygwin needs to export/import data */\n+#ifdef U_CYGWIN\n+#define U_IMPORT __declspec(dllimport)\n+#else\n+#define U_IMPORT\n+#endif\n+\n+/*===========================================================================*/\n+/* Code alignment and C function inlining                                    */\n+/*===========================================================================*/\n+\n+#ifndef U_INLINE\n+#   ifdef __cplusplus\n+#       define U_INLINE inline\n+#   else\n+#       define U_INLINE inline\n+#   endif\n+#endif\n+\n+#define U_ALIGN_CODE(n)\n+\n+/*===========================================================================*/\n+/* Programs used by ICU code                                                 */\n+/*===========================================================================*/\n+\n+#define U_MAKE  "@U_MAKE@"'),
 ('work.orig/icu/source/common/unicode/uconfig.h',
  'icu/source/common/unicode/uconfig.h',
  'Index: icu/source/common/unicode/uconfig.h\n===================================================================\n--- work.orig/icu/source/common/unicode/uconfig.h\n+++ icu/source/common/unicode/uconfig.h\n@@ -169,7 +169,7 @@\n* @stable ICU 2.4\n*/\n#ifndef UCONFIG_NO_COLLATION\n-#   define UCONFIG_NO_COLLATION 0\n+#   define UCONFIG_NO_COLLATION 1\n#endif\n\n/**\n@@ -179,7 +179,7 @@\n* @stable ICU 2.4\n*/\n#ifndef UCONFIG_NO_FORMATTING\n-#   define UCONFIG_NO_FORMATTING 0\n+#   define UCONFIG_NO_FORMATTING 1\n#endif\n\n/**\n@@ -189,7 +189,7 @@\n* @stable ICU 2.4\n*/\n#ifndef UCONFIG_NO_TRANSLITERATION\n-#   define UCONFIG_NO_TRANSLITERATION 0\n+#   define UCONFIG_NO_TRANSLITERATION 1\n#endif\n\n/**\n@@ -199,7 +199,7 @@\n* @stable ICU 2.4\n*/\n#ifndef UCONFIG_NO_REGULAR_EXPRESSIONS\n-#   define UCONFIG_NO_REGULAR_EXPRESSIONS 0\n+#   define UCONFIG_NO_REGULAR_EXPRESSIONS 1\n#endif\n\n/**\n@@ -209,7 +209,9 @@\n* @stable ICU 3.2\n*/\n#ifndef UCONFIG_NO_SERVICE\n-#   define UCONFIG_NO_SERVICE 0\n+#   define UCONFIG_NO_SERVICE 1\n#endif\n\n+#define U_STATIC_IMPLEMENTATION\n+\n#endif')]