[('src.orig/Browser/WebCore/platform/network/ekioh/ResourceHandleManager525.cpp',
  'src/Browser/WebCore/platform/network/ekioh/ResourceHandleManager525.cpp',
  'Index: src/Browser/WebCore/platform/network/ekioh/ResourceHandleManager525.cpp\n===================================================================\n--- src.orig/Browser/WebCore/platform/network/ekioh/ResourceHandleManager525.cpp\n+++ src/Browser/WebCore/platform/network/ekioh/ResourceHandleManager525.cpp\n@@ -318,6 +318,14 @@ static size_t headerCallback(char* ptr,\nheader.left(separatorIndex),\nheader.substring(separatorIndex + 1).stripWhiteSpace());\n\n+        KURL cookieUrl;\n+        if (d->m_url.isEmpty()) {\n+            cookieUrl = job->request().url();\n+        }\n+        else {\n+            cookieUrl = d->m_url.utf8().data();\n+        }\n+\nif (strncmp(ptr, "Set-Cookie: ", sizeof("Set-Cookie: ") - 1) == 0) {\nekioh::EKString cookieStr(ptr + sizeof("Set-Cookie: ") - 1,\ntotalSize - sizeof("Set-Cookie: ") - 1);\n@@ -629,17 +637,18 @@ void ResourceHandleManager::startJob(Res\n\nsetProxy(job->request(), d->m_handle);\n\n-    String cs = cookies(0, d->m_url);\n-    if (cs.length() > 0) {\n-      curl_easy_setopt(d->m_handle, CURLOPT_COOKIE, cs.deprecatedString().ascii());\n+    KURL cookieUrl;\n+    if (d->m_url.isEmpty()) {\n+        cookieUrl = job->request().url();\n+    }\n+    else {\n+        cookieUrl = d->m_url.utf8().data();\n}\n\n-#if 0\n-    if (m_cookieJarFileName) {\n-        curl_easy_setopt(d->m_handle, CURLOPT_COOKIEFILE, m_cookieJarFileName);\n-        curl_easy_setopt(d->m_handle, CURLOPT_COOKIEJAR, m_cookieJarFileName);\n+    String cs = cookies(0, cookieUrl);\n+    if (cs.length() > 0) {\n+      curl_easy_setopt(d->m_handle, CURLOPT_COOKIE, cs.deprecatedString().ascii());\n}\n-#endif\n\nif (job->request().httpHeaderFields().size() > 0) {\nstruct curl_slist* headers = 0;')]