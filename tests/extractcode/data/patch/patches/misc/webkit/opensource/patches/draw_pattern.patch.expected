[('src.original/Browser/WebCore/platform/graphics/ekioh/ImageEkioh.cpp',
  'src/Browser/WebCore/platform/graphics/ekioh/ImageEkioh525.cpp',
  '--- src.original/Browser/WebCore/platform/graphics/ekioh/ImageEkioh.cpp\n+++ src/Browser/WebCore/platform/graphics/ekioh/ImageEkioh525.cpp\n@@ -289,7 +289,8 @@ void Image::drawPattern(GraphicsContext*\n" sS=(%d,%d)\\n"\n" tR=(%.1f,%.1f,%.1f,%.1f)\\n"\n" phase=(%.1f,%.1f)\\n"\n-        " dR=(%.1f,%.1f,%.1f,%.1f)\\n",\n+        " dR=(%.1f,%.1f,%.1f,%.1f)\\n"\n+        " aT=(%.1f,%.1f,%.1f,%.1f)\\n",\nwidth(),\nheight(),\ntileRect.x(),\n@@ -301,76 +302,47 @@ void Image::drawPattern(GraphicsContext*\ndestRect.x(),\ndestRect.y(),\ndestRect.width(),\n-        destRect.height()\n+        destRect.height(),\n+        patternTransform.a(),\n+        patternTransform.b(),\n+        patternTransform.c(),\n+        patternTransform.d()\n);\n\n// Phase is where you\'d start drawing the entire src image in dst coords.\n+    context->save();\n+    context->clip(IntRect(destRect.x(), destRect.y(),\n+                          destRect.width(), destRect.height()));\n+    context->translate(phase.x(), phase.y());\n+    context->concatCTM(patternTransform);\n+\n+    float currentX = 0;\n+    float currentY = 0;\n\n-    float fillEndX = destRect.right();\n-    float fillEndY = destRect.bottom();\n-    FloatRect srcRect;\n-    FloatRect dstRect;\n-\n-    float dstTileX;\n-    float dstTileY = phase.y();\n-    float tileWidth = tileRect.width();\n+    float tileWidth  = tileRect.width();\nfloat tileHeight = tileRect.height();\n\n-\n-    dstRect.setY(destRect.y());\n+    FloatRect srcRect(0, 0, tileWidth, tileHeight);\n+    DBG("srcRect: ( %f %f | %f x %f )\\n",\n+        srcRect.x(), srcRect.y(), srcRect.width(), srcRect.height());\n\nAffineTransform inverse(patternTransform.inverse());\n+    float dstWidth  = (destRect.right()  - phase.x()) * inverse.a();\n+    float dstHeight = (destRect.bottom() - phase.y()) * inverse.d();\n+\n+    while (currentY < dstHeight) {\n+        while (currentX < dstWidth) {\n+          FloatRect dstRect(currentX, currentY, tileWidth, tileHeight);\n+          DBG("dstRect: ( %f %f | %f x %f )\\n",\n+              dstRect.x(), dstRect.y(), dstRect.width(), dstRect.height());\n\n-    // Could optimise by doing one row and then replicating that?\n-\n-    // Vertical\n-    while (dstRect.y() < fillEndY)\n-    {\n-        float dstY = dstRect.y();\n-        float srcY = (dstY - dstTileY) * inverse.d();\n-        srcRect.setY(srcY);\n-\n-        float height = tileHeight - (srcY - tileRect.y());\n-        if (dstY + height > fillEndY)\n-        {\n-            // Could avoid this by setting clip rect?\n-            height = fillEndY - dstY;\n+          context->drawImage(this, dstRect, srcRect, op);\n+          currentX += tileWidth;\n}\n-        float scaledHeight = height * patternTransform.d();\n-        srcRect.setHeight(height);\n-        dstRect.setHeight(scaledHeight);\n-\n-        dstRect.setX(destRect.x());\n-        dstTileX = phase.x();\n-\n-        // Horizontal\n-        while (dstRect.x() < fillEndX)\n-        {\n-            float dstX = dstRect.x();\n-            float srcX = (dstX - dstTileX) * inverse.a();\n-            srcRect.setX(srcX);\n-\n-            float width = tileWidth - (srcX - tileRect.x());\n-            if (dstX + width > fillEndX)\n-            {\n-                // Could avoid this by setting clip rect?\n-                width = fillEndX - dstX;\n-            }\n-            float scaledWidth = width * patternTransform.a();\n-            srcRect.setWidth(width);\n-            dstRect.setWidth(scaledWidth);\n-\n-            DBG(" dX=%f dtX=%f sX=%f w=%f sw=%f\\n",\n-                    dstX, dstTileX, srcX, width, scaledWidth);\n-            context->drawImage(this, dstRect, srcRect, op);\n-\n-            dstTileX += tileWidth;\n-            dstRect.setX(dstX + scaledWidth);\n-        }\n-\n-        dstTileY += tileHeight;\n-        dstRect.setY(dstY + scaledHeight);\n+        currentY += tileHeight;\n+        currentX  = 0;\n}\n+    context->restore();\n}\n\n')]