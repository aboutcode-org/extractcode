[('src.orig/3rdParty/webkit/work/WebCore/bindings/js/JSHTMLElementWrapperFactory.cpp',
  'src/3rdParty/webkit/work/WebCore/bindings/js/JSHTMLElementWrapperFactory.cpp',
  'Index: src/3rdParty/webkit/work/WebCore/bindings/js/JSHTMLElementWrapperFactory.cpp\n===================================================================\n--- src.orig/3rdParty/webkit/work/WebCore/bindings/js/JSHTMLElementWrapperFactory.cpp\n+++ src/3rdParty/webkit/work/WebCore/bindings/js/JSHTMLElementWrapperFactory.cpp\n@@ -78,6 +78,7 @@\n#include "HTMLTitleElement.h"\n#include "HTMLUListElement.h"\n#include "HTMLVideoElement.h"\n+#include "HTMLVideoPlaneElement.h"\n\n#include "HTMLNames.h"\n\n@@ -144,6 +145,10 @@\n#include "JSHTMLVideoElement.h"\n#endif\n\n+#if ENABLE(VIDEOPLANE)\n+#include "JSHTMLVideoPlaneElement.h"\n+#endif\n+\n#include "kjs_html.h"\n\nusing namespace KJS;\n@@ -234,9 +239,15 @@ static JSNode* create##name##Wrapper(Exe\nreturn new JSHTML##name##Element(JSHTML##name##ElementPrototype::self(exec), static_cast<HTML##name##Element*>(element.get())); \\\n}\nFOR_EACH_TAG(CREATE_WRAPPER_FUNCTION)\n+\n#if ENABLE(VIDEO)\n-    FOR_EACH_MEDIA_TAG(CREATE_MEDIA_WRAPPER_FUNCTION)\n+FOR_EACH_MEDIA_TAG(CREATE_MEDIA_WRAPPER_FUNCTION)\n#endif\n+\n+#if ENABLE(VIDEOPLANE)\n+    CREATE_WRAPPER_FUNCTION(videoplane, VideoPlane)\n+#endif\n+\n#undef CREATE_WRAPPER_FUNCTION\n\nJSNode* createJSHTMLWrapper(ExecState* exec, PassRefPtr<HTMLElement> element)\n@@ -245,9 +256,16 @@ JSNode* createJSHTMLWrapper(ExecState* e\nif (map.isEmpty()) {\n#define ADD_TO_HASH_MAP(tag, name) map.set(tag##Tag.localName().impl(), create##name##Wrapper);\nFOR_EACH_TAG(ADD_TO_HASH_MAP)\n+\n#if ENABLE(VIDEO)\nFOR_EACH_MEDIA_TAG(ADD_TO_HASH_MAP)\n#endif\n+\n+#if ENABLE(VIDEOPLANE)\n+    ADD_TO_HASH_MAP(videoplane, VideoPlane)\n+#endif\n+\n+\n#undef ADD_TO_HASH_MAP\nmap.set(colgroupTag.localName().impl(), createTableColWrapper);\nmap.set(h2Tag.localName().impl(), createHeadingWrapper);'),
 ('src.orig/3rdParty/webkit/work/WebCore/build/Makefile',
  'src/3rdParty/webkit/work/WebCore/build/Makefile',
  'Index: src/3rdParty/webkit/work/WebCore/build/Makefile\n===================================================================\n--- src.orig/3rdParty/webkit/work/WebCore/build/Makefile\n+++ src/3rdParty/webkit/work/WebCore/build/Makefile\n@@ -22,6 +22,11 @@ CXXF_ALL := -fno-rtti\nCF_ALL += -fno-exceptions\nCF_ALL += -D_GNU_SOURCE -DEKIOH\n\n+ifeq ($(ENABLE_VIDEOPLANE),1)\n+# Include the videoplane tag\n+CF_ALL +=-DENABLE_VIDEOPLANE\n+endif\n+\nrulesdir := $(topdir)\ntopdir_save := $(topdir)\ntopdir := $(EKIOHDIR)'),
 ('src.orig/3rdParty/webkit/work/WebCore/html/HTMLElement.cpp',
  'src/3rdParty/webkit/work/WebCore/html/HTMLElement.cpp',
  'Index: src/3rdParty/webkit/work/WebCore/html/HTMLElement.cpp\n===================================================================\n--- src.orig/3rdParty/webkit/work/WebCore/html/HTMLElement.cpp\n+++ src/3rdParty/webkit/work/WebCore/html/HTMLElement.cpp\n@@ -801,6 +801,7 @@ HashSet<AtomicStringImpl*>* inlineTagLis\ntagList.add(wbrTag.localName().impl());\ntagList.add(audioTag.localName().impl());\ntagList.add(videoTag.localName().impl());\n+        tagList.add(videoplaneTag.localName().impl());\n}\nreturn &tagList;\n}'),
 ('src.orig/3rdParty/webkit/work/WebCore/html/HTMLElementFactory.cpp',
  'src/3rdParty/webkit/work/WebCore/html/HTMLElementFactory.cpp',
  'Index: src/3rdParty/webkit/work/WebCore/html/HTMLElementFactory.cpp\n===================================================================\n--- src.orig/3rdParty/webkit/work/WebCore/html/HTMLElementFactory.cpp\n+++ src/3rdParty/webkit/work/WebCore/html/HTMLElementFactory.cpp\n@@ -84,6 +84,7 @@\n#include "HTMLTitleElement.h"\n#include "HTMLUListElement.h"\n#include "HTMLVideoElement.h"\n+#include "HTMLVideoPlaneElement.h"\n\nnamespace WebCore {\n\n@@ -406,6 +407,13 @@ static PassRefPtr<HTMLElement> sourceCon\n}\n#endif\n\n+#if ENABLE(VIDEOPLANE)\n+static PassRefPtr<HTMLElement> videoplaneConstructor(const AtomicString& tagName, Document* doc, HTMLFormElement*, bool)\n+{\n+    return new HTMLVideoPlaneElement(doc);\n+}\n+#endif\n+\nstatic void addTag(const QualifiedName& tag, ConstructorFunc func)\n{\ngFunctionMap->set(tag.localName().impl(), func);\n@@ -492,6 +500,10 @@ static void createFunctionMap()\naddTag(sourceTag, sourceConstructor);\naddTag(videoTag, videoConstructor);\n#endif\n+\n+#if ENABLE(VIDEOPLANE)\n+    addTag(videoplaneTag, videoplaneConstructor);\n+#endif\n}\n\nPassRefPtr<HTMLElement> HTMLElementFactory::createHTMLElement(const AtomicString& tagName, Document* doc, HTMLFormElement* form, bool createdByParser)'),
 ('dev/null',
  'src/3rdParty/webkit/work/WebCore/html/HTMLVideoPlaneElement.cpp',
  'Index: src/3rdParty/webkit/work/WebCore/html/HTMLVideoPlaneElement.cpp\n===================================================================\n--- dev/null\n+++ src/3rdParty/webkit/work/WebCore/html/HTMLVideoPlaneElement.cpp\n@@ -0,0 +1,234 @@\n+/*\n+ * Copyright (C) 2009 Motorola Inc. All rights reserved.\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Library General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2 of the License, or (at your option) any later version.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Library General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Library General Public License\n+ * along with this library; see the file COPYING.LIB.  If not, write to\n+ * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\n+ * Boston, MA 02110-1301, USA.\n+ */\n+\n+#include "config.h"\n+\n+#if ENABLE(VIDEOPLANE)\n+\n+#include "HTMLVideoPlaneElement.h"\n+\n+#include "Event.h"\n+#include "EventNames.h"\n+#include "ExceptionCode.h"\n+#include "HTMLNames.h"\n+#include "HTMLDocument.h"\n+#include "RenderVideoPlane.h"\n+#include "CSSPropertyNames.h"\n+\n+\n+using namespace std;\n+\n+namespace WebCore {\n+\n+using namespace EventNames;\n+using namespace HTMLNames;\n+\n+HTMLVideoPlaneElement::HTMLVideoPlaneElement(Document* doc)\n+  : HTMLElement(videoplaneTag, doc),\n+    m_index(0)\n+{\n+    document()->registerForCacheCallbacks(this);\n+}\n+\n+HTMLVideoPlaneElement::~HTMLVideoPlaneElement()\n+{\n+    document()->unregisterForCacheCallbacks(this);\n+}\n+\n+bool HTMLVideoPlaneElement::rendererIsNeeded(RenderStyle* style)\n+{\n+    return true;\n+}\n+\n+RenderObject* HTMLVideoPlaneElement::createRenderer(RenderArena* arena,\n+                                                    RenderStyle* style)\n+{\n+  return new (arena) RenderVideoPlane(this, m_index);\n+}\n+\n+void HTMLVideoPlaneElement::attach()\n+{\n+    HTMLElement::attach();\n+    renderer();\n+}\n+\n+void HTMLVideoPlaneElement::detach()\n+{\n+    HTMLElement::detach();\n+}\n+\n+void HTMLVideoPlaneElement::insertedIntoDocument()\n+{\n+    HTMLElement::insertedIntoDocument();\n+}\n+\n+void HTMLVideoPlaneElement::removedFromDocument()\n+{\n+    HTMLElement::removedFromDocument();\n+}\n+\n+\n+void HTMLVideoPlaneElement::parseMappedAttribute(MappedAttribute *attr)\n+{\n+    const QualifiedName& attrName = attr->name();\n+\n+    if (attrName == widthAttr) {\n+        addCSSLength(attr, CSS_PROP_WIDTH, attr->value());\n+    } else if (attrName == heightAttr) {\n+        addCSSLength(attr, CSS_PROP_HEIGHT, attr->value());\n+    } else if (attrName == "index") {\n+        bool ok;\n+        m_index = attr->value().toInt(&ok);\n+        if (!ok) {\n+            fprintf(stderr, "Failed to convert index attr to an integer."\n+                    "Defaulting to 0\\n");\n+            m_index = 0;\n+        }\n+    } else {\n+        HTMLElement::parseMappedAttribute(attr);\n+    }\n+}\n+\n+int HTMLVideoPlaneElement::width() const\n+{\n+    bool ok;\n+    int width = getAttribute(widthAttr).toInt(&ok);\n+    if (ok)\n+\treturn width;\n+\n+    return 0;\n+}\n+\n+int HTMLVideoPlaneElement::height() const\n+{\n+    bool ok;\n+    int height = getAttribute(heightAttr).toInt(&ok);\n+    if (ok)\n+\treturn height;\n+\n+    return 0;\n+}\n+\n+void HTMLVideoPlaneElement::setHeight(int value)\n+{\n+    setAttribute(heightAttr, String::number(value));\n+}\n+\n+void HTMLVideoPlaneElement::setWidth(int value)\n+{\n+    setAttribute(widthAttr, String::number(value));\n+}\n+\n+int HTMLVideoPlaneElement::x() const\n+{\n+    RenderObject* r = renderer();\n+    if (!r)\n+        return 0;\n+    int x, y;\n+    r->absolutePosition(x, y);\n+    return x;\n+}\n+\n+int HTMLVideoPlaneElement::y() const\n+{\n+    RenderObject* r = renderer();\n+    if (!r)\n+        return 0;\n+    int x, y;\n+    r->absolutePosition(x, y);\n+    return y;\n+}\n+\n+int HTMLVideoPlaneElement::index() const\n+{\n+    return m_index;\n+}\n+\n+int HTMLVideoPlaneElement::clipX() const\n+{\n+  return m_clipRect.x();\n+}\n+\n+int HTMLVideoPlaneElement::clipY() const\n+{\n+  return m_clipRect.y();\n+}\n+\n+int HTMLVideoPlaneElement::clipWidth() const\n+{\n+  return m_clipRect.width();\n+}\n+\n+int HTMLVideoPlaneElement::clipHeight() const\n+{\n+  return m_clipRect.height();\n+}\n+\n+int HTMLVideoPlaneElement::transformX() const\n+{\n+  return m_transformRect.x();\n+}\n+\n+int HTMLVideoPlaneElement::transformY() const\n+{\n+  return m_transformRect.y();\n+}\n+\n+int HTMLVideoPlaneElement::transformWidth() const\n+{\n+  return m_transformRect.width();\n+}\n+\n+int HTMLVideoPlaneElement::transformHeight() const\n+{\n+  return m_transformRect.height();\n+}\n+\n+bool HTMLVideoPlaneElement::subtitles() const\n+{\n+    return m_subtitles;\n+}\n+\n+void HTMLVideoPlaneElement::setSubtitles(bool show)\n+{\n+  m_subtitles = show;\n+  RenderVideoPlane* r = static_cast<RenderVideoPlane*>(renderer());\n+  if (r)\n+    r->setSubtitles(show);\n+}\n+\n+void HTMLVideoPlaneElement::setVideoClip(int x, int y, int width, int height)\n+{\n+  m_clipRect = IntRect(x, y, width, height);\n+  RenderVideoPlane* r = static_cast<RenderVideoPlane*>(renderer());\n+  if (r)\n+    r->setVideoClip(x, y, width, height);\n+}\n+\n+void HTMLVideoPlaneElement::setVideoTransform(int x, int y, int width, int height)\n+{\n+  m_transformRect = IntRect(x, y, width, height);\n+  RenderVideoPlane* r = static_cast<RenderVideoPlane*>(renderer());\n+  if (r)\n+    r->setVideoTransform(x, y, width, height);\n+}\n+\n+}\n+\n+#endif // ENABLE(VIDEOPLANE)'),
 ('dev/null',
  'src/3rdParty/webkit/work/WebCore/html/HTMLVideoPlaneElement.h',
  'Index: src/3rdParty/webkit/work/WebCore/html/HTMLVideoPlaneElement.h\n===================================================================\n--- dev/null\n+++ src/3rdParty/webkit/work/WebCore/html/HTMLVideoPlaneElement.h\n@@ -0,0 +1,82 @@\n+/*\n+ * Copyright (C) 2009 Motorola, Inc.\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Library General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2 of the License, or (at your option) any later version.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Library General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Library General Public License\n+ * along with this library; see the file COPYING.LIB.  If not, write to\n+ * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\n+ * Boston, MA 02110-1301, USA.\n+ *\n+ */\n+\n+#ifndef HTMLVideoPlaneElement_h\n+#define HTMLVideoPlaneElement_h\n+\n+#if ENABLE(VIDEOPLANE)\n+\n+#include "HTMLElement.h"\n+#include "IntRect.h"\n+\n+namespace WebCore {\n+\n+  class HTMLVideoPlaneElement : public HTMLElement {\n+  public:\n+    HTMLVideoPlaneElement(Document*);\n+    ~HTMLVideoPlaneElement();\n+\n+    virtual bool rendererIsNeeded(RenderStyle* style);\n+    virtual RenderObject* createRenderer(RenderArena*, RenderStyle*);\n+\n+    virtual void attach();\n+    virtual void detach();\n+    virtual void parseMappedAttribute(MappedAttribute *attr);\n+    virtual void insertedIntoDocument();\n+    virtual void removedFromDocument();\n+\n+    int width() const;\n+    int height() const;\n+\n+    void setHeight(int);\n+    void setWidth(int);\n+\n+    int x() const;\n+    int y() const;\n+    int index() const;\n+\n+    int clipX() const;\n+    int clipY() const;\n+    int clipWidth() const;\n+    int clipHeight() const;\n+\n+    int transformX() const;\n+    int transformY() const;\n+    int transformWidth() const;\n+    int transformHeight() const;\n+\n+    bool subtitles() const;\n+\n+    void setSubtitles(bool show);\n+\n+    void setVideoClip(int x, int y, int width, int height);\n+    void setVideoTransform(int x, int y, int width, int height);\n+    void videoChange();\n+\n+  private:\n+    int m_index;\n+    IntRect m_clipRect;\n+    IntRect m_transformRect;\n+    bool m_subtitles : 1;\n+  };\n+} //namespace\n+\n+#endif // ENABLE(VIDEOPLANE)\n+#endif'),
 ('src.orig/3rdParty/webkit/work/WebCore/html/Rules.mk',
  'src/3rdParty/webkit/work/WebCore/html/Rules.mk',
  'Index: src/3rdParty/webkit/work/WebCore/html/Rules.mk\n===================================================================\n--- src.orig/3rdParty/webkit/work/WebCore/html/Rules.mk\n+++ src/3rdParty/webkit/work/WebCore/html/Rules.mk\n@@ -83,6 +83,7 @@ $(eval $(call add_objs, \\\nHTMLTokenizer \\\nHTMLUListElement \\\nHTMLViewSourceDocument \\\n+ HTMLVideoPlaneElement \\\n))\n\n# Local rules'),
 ('src.orig/3rdParty/webkit/work/WebCore/page/DOMWindow.idl',
  'src/3rdParty/webkit/work/WebCore/page/DOMWindow.idl',
  'Index: src/3rdParty/webkit/work/WebCore/page/DOMWindow.idl\n===================================================================\n--- src.orig/3rdParty/webkit/work/WebCore/page/DOMWindow.idl\n+++ src/3rdParty/webkit/work/WebCore/page/DOMWindow.idl\n@@ -298,6 +298,10 @@ module window {\nattribute HTMLVideoPlaneElementConstructor HTMLVideoPlaneElement;\n#endif\n\n+#if defined(ENABLE_VIDEOPLANE)\n+        attribute HTMLVideoPlaneElementConstructor HTMLVideoPlaneElement;\n+#endif\n+\n#if defined(ENABLE_XPATH)\nattribute XPathEvaluatorConstructor XPathEvaluator;\nattribute XPathResultConstructor XPathResult;'),
 ('src.orig/3rdParty/webkit/work/WebCore/platform/graphics/Rules.mk',
  'src/3rdParty/webkit/work/WebCore/platform/graphics/Rules.mk',
  'Index: src/3rdParty/webkit/work/WebCore/platform/graphics/Rules.mk\n===================================================================\n--- src.orig/3rdParty/webkit/work/WebCore/platform/graphics/Rules.mk\n+++ src/3rdParty/webkit/work/WebCore/platform/graphics/Rules.mk\n@@ -1,6 +1,8 @@\ninclude $(rulesdir)/Rules.head.mk\n\n# Subdirectories, in random order\n+dir     := $(d)/ekioh\n+include         $(dir)/Rules.mk\n\n# Local variables\n$(eval $(call add_objs, \\\n@@ -27,6 +29,7 @@ $(eval $(call add_objs, \\\nSegmentedFontData \\\nSimpleFontData \\\nStringTruncator \\\n+ VideoPlane \\\n))\n\ninclude $(rulesdir)/Rules.tail.mk'),
 ('dev/null',
  'src/3rdParty/webkit/work/WebCore/platform/graphics/VideoPlane.cpp',
  'Index: src/3rdParty/webkit/work/WebCore/platform/graphics/VideoPlane.cpp\n===================================================================\n--- dev/null\n+++ src/3rdParty/webkit/work/WebCore/platform/graphics/VideoPlane.cpp\n@@ -0,0 +1,77 @@\n+/*\n+ * Copyright (C) 2009 Motorola Inc. All rights reserved.\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Library General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2 of the License, or (at your option) any later version.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Library General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Library General Public License\n+ * along with this library; see the file COPYING.LIB.  If not, write to\n+ * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\n+ * Boston, MA 02110-1301, USA.\n+ *\n+ */\n+\n+#include "config.h"\n+\n+#if ENABLE(VIDEOPLANE)\n+#include "VideoPlane.h"\n+\n+#if PLATFORM(EKIOH)\n+#include "VideoPlanePrivateEkioh.h"\n+#else\n+#error "No support for your platform"\n+#endif\n+\n+namespace WebCore {\n+\n+  VideoPlane::VideoPlane(int index)\n+    : VideoPlanePrivatePointer(\n+        new VideoPlanePrivate(index))\n+  {\n+    m_subtitlesEnabled = false;\n+  }\n+\n+  VideoPlane::~VideoPlane()\n+  {\n+    if (true == m_subtitlesEnabled){\n+        VideoPlanePrivatePointer->SetSubtitles(false);\n+    }\n+    delete VideoPlanePrivatePointer;\n+  }\n+\n+  void VideoPlane::UpdateVideoWindow(int tx, int ty, int contentWidth, int contentHeight)\n+  {\n+    VideoPlanePrivatePointer->UpdateVideoWindow(tx, ty, contentWidth, contentHeight);\n+  }\n+\n+  void VideoPlane::HideVideoWindow()\n+  {\n+    VideoPlanePrivatePointer->HideVideoWindow();\n+  }\n+\n+  void VideoPlane::SetVideoClip(int x, int y, int width, int height)\n+  {\n+    VideoPlanePrivatePointer->SetVideoClip(x, y, width, height);\n+  }\n+\n+  void VideoPlane::SetVideoTransform(int x, int y, int width, int height)\n+  {\n+    VideoPlanePrivatePointer->SetVideoTransform(x, y, width, height);\n+  }\n+\n+  void VideoPlane::SetSubtitles(bool show)\n+  {\n+    m_subtitlesEnabled = show;\n+    VideoPlanePrivatePointer->SetSubtitles(show);\n+  }\n+\n+}\n+\n+#endif // ENABLE(VIDEOPLANE)'),
 ('dev/null',
  'src/3rdParty/webkit/work/WebCore/platform/graphics/VideoPlane.h',
  'Index: src/3rdParty/webkit/work/WebCore/platform/graphics/VideoPlane.h\n===================================================================\n--- dev/null\n+++ src/3rdParty/webkit/work/WebCore/platform/graphics/VideoPlane.h\n@@ -0,0 +1,51 @@\n+/*\n+ * Copyright (C) 2009 Motorola Inc. All rights reserved.\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Library General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2 of the License, or (at your option) any later version.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Library General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Library General Public License\n+ * along with this library; see the file COPYING.LIB.  If not, write to\n+ * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\n+ * Boston, MA 02110-1301, USA.\n+ *\n+ */\n+\n+#ifndef VIDEOPLANE_H\n+#define VIDEOPLANE_H\n+\n+#if ENABLE(VIDEOPLANE)\n+\n+namespace WebCore {\n+  class VideoPlanePrivate;\n+  class VideoPlane\n+  {\n+  public:\n+    VideoPlane(int index);\n+    ~VideoPlane();\n+\n+    void UpdateVideoWindow(int tx,\n+                           int ty,\n+                           int contentWidth,\n+                           int contentHeight);\n+    void HideVideoWindow();\n+    void SetVideoClip(int x, int y, int width, int height);\n+    void SetVideoTransform(int x, int y, int width, int height);\n+    void SetSubtitles(bool show);\n+\n+  private:\n+    VideoPlanePrivate* VideoPlanePrivatePointer;\n+    bool m_subtitlesEnabled;\n+  };\n+}\n+\n+#endif // ENABLE(VIDEOPLANE)\n+\n+#endif // VIDEOPLANE_H'),
 ('dev/null',
  'src/3rdParty/webkit/work/WebCore/platform/graphics/ekioh/Rules.mk',
  'Index: src/3rdParty/webkit/work/WebCore/platform/graphics/ekioh/Rules.mk\n===================================================================\n--- dev/null\n+++ src/3rdParty/webkit/work/WebCore/platform/graphics/ekioh/Rules.mk\n@@ -0,0 +1,10 @@\n+include $(rulesdir)/Rules.head.mk\n+\n+# Subdirectories, in random order\n+\n+# Local variables\n+$(eval $(call add_objs, \\\n+ VideoPlanePrivateEkioh \\\n+))\n+\n+include $(rulesdir)/Rules.tail.mk'),
 ('dev/null',
  'src/3rdParty/webkit/work/WebCore/platform/graphics/ekioh/VideoPlanePrivateEkioh.cpp',
  'Index: src/3rdParty/webkit/work/WebCore/platform/graphics/ekioh/VideoPlanePrivateEkioh.cpp\n===================================================================\n--- dev/null\n+++ src/3rdParty/webkit/work/WebCore/platform/graphics/ekioh/VideoPlanePrivateEkioh.cpp\n@@ -0,0 +1,78 @@\n+/*\n+ * Copyright (C) 2009 Motorola Inc. All rights reserved.\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Library General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2 of the License, or (at your option) any later version.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Library General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Library General Public License\n+ * along with this library; see the file COPYING.LIB.  If not, write to\n+ * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\n+ * Boston, MA 02110-1301, USA.\n+ *\n+ */\n+\n+#include <stdio.h>\n+\n+#include "config.h"\n+\n+#if ENABLE(VIDEOPLANE)\n+\n+#include "VideoPlanePrivateEkioh.h"\n+\n+\n+namespace WebCore {\n+\n+  VideoPlanePrivate::VideoPlanePrivate(int index)\n+    : m_index(index)\n+  {\n+    m_plane = ekioh::EKIndexedVideoDisplay::instance();\n+    if (m_plane == 0) {\n+      fprintf(stderr, "No instace of EKPlatform in VideoPlanePrivate "\n+              "constructor\\n");\n+      ::abort();\n+    }\n+  }\n+\n+  VideoPlanePrivate::~VideoPlanePrivate()\n+  {\n+    m_plane->hideVideo(m_index);\n+  }\n+\n+  void VideoPlanePrivate::UpdateVideoWindow(int tx, int ty, int contentWidth,\n+                                            int contentHeight)\n+  {\n+    m_plane->updateVideoWindow(tx, ty, contentWidth,\n+                                          contentHeight, m_index);\n+  }\n+\n+  void VideoPlanePrivate::HideVideoWindow()\n+  {\n+    m_plane->hideVideo(m_index);\n+  }\n+\n+  void VideoPlanePrivate::SetVideoClip(int x, int y, int width, int height)\n+  {\n+    m_plane->setVideoClip(x, y, width, height, m_index);\n+  }\n+\n+  void VideoPlanePrivate::SetVideoTransform(int x, int y,\n+                                            int width, int height)\n+  {\n+    m_plane->setVideoTransform(x, y, width, height, m_index);\n+  }\n+\n+  void VideoPlanePrivate::SetSubtitles(bool show)\n+  {\n+    m_plane->setSubtitles(show);\n+  }\n+}\n+\n+#endif // ENABLE(VIDEOPLANE)\n+'),
 ('dev/null',
  'src/3rdParty/webkit/work/WebCore/platform/graphics/ekioh/VideoPlanePrivateEkioh.h',
  'Index: src/3rdParty/webkit/work/WebCore/platform/graphics/ekioh/VideoPlanePrivateEkioh.h\n===================================================================\n--- dev/null\n+++ src/3rdParty/webkit/work/WebCore/platform/graphics/ekioh/VideoPlanePrivateEkioh.h\n@@ -0,0 +1,50 @@\n+/*\n+ * Copyright (C) 2009 Motorola Inc. All rights reserved.\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Library General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2 of the License, or (at your option) any later version.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Library General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Library General Public License\n+ * along with this library; see the file COPYING.LIB.  If not, write to\n+ * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\n+ * Boston, MA 02110-1301, USA.\n+ *\n+ */\n+\n+#ifndef VIDEOPLANEPRIVATE_H\n+#define VIDEOPLANEPRIVATE_H\n+\n+#if ENABLE(VIDEOPLANE)\n+\n+#include "Media/EKIndexedVideoDisplay.h"\n+\n+namespace WebCore {\n+  class VideoPlanePrivate\n+  {\n+  public:\n+    VideoPlanePrivate(int index);\n+    ~VideoPlanePrivate();\n+\n+    void UpdateVideoWindow(int tx, int ty, int contentWidth,\n+                           int contentHeight);\n+    void HideVideoWindow();\n+    void SetVideoClip(int x, int y, int width, int height);\n+    void SetVideoTransform(int x, int y, int width, int height);\n+\n+    void SetSubtitles(bool show);\n+\n+  private:\n+    ekioh::EKIndexedVideoDisplay* m_plane;\n+    int m_index;\n+  };\n+}\n+\n+#endif // ENABLE(VIDEOPLANE)\n+#endif // VIDEOPLANEPRIVATE_H'),
 ('dev/null',
  'src/3rdParty/webkit/work/WebCore/rendering/RenderVideoPlane.cpp',
  'Index: src/3rdParty/webkit/work/WebCore/rendering/RenderVideoPlane.cpp\n===================================================================\n--- dev/null\n+++ src/3rdParty/webkit/work/WebCore/rendering/RenderVideoPlane.cpp\n@@ -0,0 +1,88 @@\n+/**\n+ * This file is part of the DOM implementation for KDE.\n+ *\n+ * Copyright (C) 2003, 2004, 2005, 2006 Apple Computer, Inc.\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Library General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2 of the License, or (at your option) any later version.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Library General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Library General Public License\n+ * along with this library; see the file COPYING.LIB.  If not, write to\n+ * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\n+ * Boston, MA 02110-1301, USA.\n+ *\n+ */\n+\n+#include "config.h"\n+\n+#if ENABLE(VIDEOPLANE)\n+\n+#include "RenderVideoPlane.h"\n+#include "HTMLVideoPlaneElement.h"\n+\n+#include "BitmapImage.h"\n+#include "Document.h"\n+#include "GraphicsContext.h"\n+#include "HTMLImageElement.h"\n+#include "HTMLInputElement.h"\n+#include "HTMLMapElement.h"\n+#include "HTMLNames.h"\n+#include "HitTestResult.h"\n+#include "Page.h"\n+#include "RenderView.h"\n+\n+using namespace std;\n+\n+namespace WebCore {\n+\n+  using namespace HTMLNames;\n+\n+  RenderVideoPlane::RenderVideoPlane(Node* node, int index)\n+    : RenderReplaced(node, IntSize(0, 0)),\n+      m_videoPlane(index)\n+  {\n+    // Empty\n+  }\n+\n+  RenderVideoPlane::~RenderVideoPlane()\n+  {\n+  }\n+\n+  void RenderVideoPlane::paint(PaintInfo& paintInfo, int tx, int ty)\n+  {\n+      if (style()->visibility() != VISIBLE || style()->display() == NONE) {\n+        m_videoPlane.HideVideoWindow();\n+      }\n+      RenderReplaced::paint(paintInfo, tx, ty);\n+  }\n+\n+  void RenderVideoPlane::paintReplaced(PaintInfo& paintInfo, int tx, int ty)\n+  {\n+      m_videoPlane.UpdateVideoWindow(tx, ty, contentWidth(), contentHeight());\n+  }\n+\n+  void RenderVideoPlane::setVideoClip(int x, int y, int width, int height)\n+  {\n+      m_videoPlane.SetVideoClip(x, y, width, height);\n+  }\n+\n+  void RenderVideoPlane::setVideoTransform(int x, int y, int width, int height)\n+  {\n+      m_videoPlane.SetVideoTransform(x, y, width, height);\n+  }\n+\n+  void RenderVideoPlane::setSubtitles(bool show)\n+  {\n+      m_videoPlane.SetSubtitles(show);\n+  }\n+\n+} // namespace WebCore\n+\n+#endif // ENABLE(VIDEOPLANE)'),
 ('dev/null',
  'src/3rdParty/webkit/work/WebCore/rendering/RenderVideoPlane.h',
  'Index: src/3rdParty/webkit/work/WebCore/rendering/RenderVideoPlane.h\n===================================================================\n--- dev/null\n+++ src/3rdParty/webkit/work/WebCore/rendering/RenderVideoPlane.h\n@@ -0,0 +1,57 @@\n+/*\n+ * Copyright (C) 2009 Motorola Inc. All rights reserved.\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Library General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 2 of the License, or (at your option) any later version.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Library General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Library General Public License\n+ * along with this library; see the file COPYING.LIB.  If not, write to\n+ * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\n+ * Boston, MA 02110-1301, USA.\n+ *\n+ */\n+\n+#ifndef RenderVideoPlane_h\n+#define RenderVideoPlane_h\n+\n+#if ENABLE(VIDEOPLANE)\n+\n+#include "RenderReplaced.h"\n+#include "VideoPlane.h"\n+\n+namespace ekioh {\n+  class EKMediaListener;\n+};\n+\n+namespace WebCore {\n+\n+  class RenderVideoPlane : public RenderReplaced {\n+  public:\n+    RenderVideoPlane(Node*, int index);\n+    virtual ~RenderVideoPlane();\n+\n+    virtual const char* renderName() const { return "RenderVideoPlane"; }\n+\n+    virtual void paint(PaintInfo& paintInfo, int tx, int ty);\n+    virtual void paintReplaced(PaintInfo& paintInfo, int tx, int ty);\n+\n+    virtual void setVideoClip(int x, int y, int width, int height);\n+    virtual void setVideoTransform(int x, int y, int width, int height);\n+\n+    virtual void setSubtitles(bool show);\n+\n+  private:\n+    VideoPlane m_videoPlane;\n+  };\n+\n+} // namespace WebCore\n+\n+#endif // ENABLE(VIDEOPLANE)\n+#endif // RenderVideoPlane_h'),
 ('src.orig/3rdParty/webkit/work/WebCore/rendering/Rules.mk',
  'src/3rdParty/webkit/work/WebCore/rendering/Rules.mk',
  'Index: src/3rdParty/webkit/work/WebCore/rendering/Rules.mk\n===================================================================\n--- src.orig/3rdParty/webkit/work/WebCore/rendering/Rules.mk\n+++ src/3rdParty/webkit/work/WebCore/rendering/Rules.mk\n@@ -53,6 +53,7 @@ $(eval $(call add_objs, \\\nRenderTextFragment \\\nRenderTheme \\\nRenderTreeAsText \\\n+ RenderVideoPlane \\\nRenderView \\\nRenderWidget \\\nRenderWordBreak \\')]